From 114c16168df5434dc61bc9d258e0ca128084d095 Mon Sep 17 00:00:00 2001
From: jaderiverstokes <jaderiverstokes@gmail.com>
Date: Fri, 16 May 2025 11:45:59 -0700
Subject: [PATCH] patch

---
 subscription-contracts/src/MoonDAOTeamCreator.sol        | 4 ++--
 subscription-contracts/src/ProjectTeamCreator.sol        | 7 +++++--
 subscription-contracts/test/EntityCreatorTest.t.sol      | 2 +-
 subscription-contracts/test/MissionTest.t.sol            | 2 +-
 subscription-contracts/test/ProjectTeamCreatorTest.t.sol | 2 +-
 subscription-contracts/test/TeamTest.t.sol               | 2 +-
 6 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/subscription-contracts/src/ProjectTeamCreator.sol b/subscription-contracts/src/ProjectTeamCreator.sol
index 550802c3..ca9545b8 100644
--- a/subscription-contracts/src/ProjectTeamCreator.sol
+++ b/subscription-contracts/src/ProjectTeamCreator.sol
@@ -46,11 +46,14 @@ contract ProjectTeamCreator is Ownable {
         projectTeamAdminHatId = _projectTeamAdminHatId;
     }
 
-    function createProjectTeam(string memory adminHatURI, string memory managerHatURI, string memory memberHatURI, string calldata name, string calldata description, string calldata image, uint256 quarter, uint256 year, uint256 MDP, string calldata proposalIPFS, string calldata proposalLink, string calldata upfrontPayments, address lead, address[] memory members, address[] memory signers) external onlyOwner() returns (uint256 tokenId, uint256 childHatId) {
+    function createProjectTeam(uint256 quarter, uint256 year, uint256 MDP, string calldata proposalIPFS, string calldata proposalLink, string calldata upfrontPayments, address lead, address[] memory members, address[] memory signers) external onlyOwner() returns (uint256 tokenId, uint256 childHatId) {
         bytes memory safeCallData = constructSafeCallData(signers);
         GnosisSafeProxy gnosisSafe = gnosisSafeProxyFactory.createProxy(gnosisSingleton, safeCallData);
 
         //admin hat
+        string memory adminHatURI = "";
+        string memory managerHatURI = "";
+        string memory memberHatURI = "";
         uint256 projectAdminHat = hats.createHat(projectTeamAdminHatId, adminHatURI, 1, address(gnosisSafe), address(gnosisSafe), true, "");
         hats.mintHat(projectAdminHat, address(this));
 
@@ -78,7 +81,7 @@ contract ProjectTeamCreator is Ownable {
         //mint
         tokenId = projectTeam.mintTo(address(gnosisSafe), lead, projectAdminHat, projectManagerHat, projectContributorHat, address(memberPassthroughModule));
 
-        table.insertIntoTable(tokenId, name, description, image, quarter, year, MDP, proposalIPFS, proposalLink, "", "", "", upfrontPayments, 1, 0);
+        table.insertIntoTable(tokenId, "", "", "", quarter, year, MDP, proposalIPFS, proposalLink, "", "", "", upfrontPayments, 1, 0);
     }
 
     function constructSafeCallData(address[] memory signers) internal returns (bytes memory) {
 
diff --git a/subscription-contracts/test/ProjectTeamCreatorTest.t.sol b/subscription-contracts/test/ProjectTeamCreatorTest.t.sol
index fd7db1ed..868098d1 100644
--- a/subscription-contracts/test/ProjectTeamCreatorTest.t.sol
+++ b/subscription-contracts/test/ProjectTeamCreatorTest.t.sol
@@ -66,7 +66,7 @@ contract CreatorTest is Test {
         address[] memory members = new address[](2);
         members[0] = user2;
         members[1] = user3;
-        (uint256 tokenId, uint256 childHatId) = creator.createProjectTeam(uri, uri, uri, "title","description", "image", 4,2024, 169, "IPFS_HASH", "LINK", "UPFRONT", user1, members, members);
+        (uint256 tokenId, uint256 childHatId) = creator.createProjectTeam(4,2024, 169, "IPFS_HASH", "LINK", "UPFRONT", user1, members, members);
     }
 
     function testMint() public {
 
-- 
2.39.5 (Apple Git-154)

