name: Cypress E2E and Component Testing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  NEXT_PUBLIC_ENV: "dev"
  NEXT_PUBLIC_TEST_ENV: "true"
  NEXT_PUBLIC_CHAIN: "testnet"
  NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}
  NEXT_PUBLIC_ETHERSCAN_API_KEY: ${{ secrets.NEXT_PUBLIC_ETHERSCAN_API_KEY }}
  DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
  NEXT_PUBLIC_INFURA_URL: ${{ secrets.NEXT_PUBLIC_INFURA_URL }}
  NEXT_PUBLIC_GTAG: ${{ secrets.NEXT_PUBLIC_GTAG }}
  NEXT_PUBLIC_GOOGLE_SHEETS_EMAIL: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_EMAIL }}
  NEXT_PUBLIC_GOOGLE_SPREADSHEET_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_SPREADSHEET_ID }}
  NEXT_PUBLIC_GOOGLE_SHEETS_SECRET_1: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_SECRET_1 }}
  NEXT_PUBLIC_GOOGLE_SHEETS_SECRET_2: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_SECRET_2 }}
  NEXT_PUBLIC_ANNOUNCEMENTS_API_URL: ${{ secrets.NEXT_PUBLIC_ANNOUNCEMENTS_API_URL }}
  NEXT_PUBLIC_ASSETS_URL: ${{ secrets.NEXT_PUBLIC_ASSETS_URL }}
  NEXT_PUBLIC_SWEEPSTAKES_OWNER: "0x0724d0eb7b6d32AEDE6F9e492a5B1436b537262b"
  NEXT_PUBLIC_THIRDWEB_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_THIRDWEB_CLIENT_ID }}
  NEXT_PUBLIC_THIRDWEB_CLIENT_SECRET: ${{ secrets.NEXT_PUBLIC_THIRDWEB_SECRET_KEY }}
  NEXT_PUBLIC_PRIVY_APP_ID: ${{secrets.NEXT_PUBLIC_PRIVY_APP_ID}}
  NEXT_PUBLIC_PRIVY_TEST_PHONE: ${{secrets.NEXT_PUBLIC_PRIVY_TEST_PHONE}}
  NEXT_PUBLIC_PRIVY_TEST_OTP: ${{secrets.NEXT_PUBLIC_PRIVY_TEST_OTP}}
  NEXT_PUBLIC_MONGO_MOONDAO_API_KEY: ${{secrets.NEXT_PUBLIC_MONGO_MOONDAO_API_KEY}}
  ALLOWED_ORIGIN: "http://localhost:3000"
  TYPEFORM_PERSONAL_ACCESS_TOKEN: ${{secrets.TYPEFORM_PERSONAL_ACCESS_TOKEN}}
  NEXT_PUBLIC_TYPEFORM_TEAM_FORM_ID: ${{secrets.NEXT_PUBLIC_TYPEFORM_TEAM_FORM_ID}}
  NEXT_PUBLIC_TYPEFORM_CITIZEN_FORM_ID: ${{secrets.NEXT_PUBLIC_TYPEFORM_CITIZEN_FORM_ID}}
  NEXT_PUBLIC_TYPEFORM_CITIZEN_SHORT_FORM_ID: ${{secrets.NEXT_PUBLIC_TYPEFORM_CITIZEN_SHORT_FORM_ID}}
  NEXT_PUBLIC_TYPEFORM_CITIZEN_APP_FORM_ID: ${{secrets.NEXT_PUBLIC_TYPEFORM_CITIZEN_APP_FORM_ID}}
  NEXT_PUBLIC_TYPEFORM_TEAM_APP_FORM_ID: ${{secrets.NEXT_PUBLIC_TYPEFORM_TEAM_APP_FORM_ID}}
  COMFYICU_API_KEY: ${{secrets.COMFYICU_API_KEY}}
  GCS_CREDENTIALS: ${{secrets.GCS_CREDENTIALS}}
  GCS_BUCKET_NAME: ${{secrets.GCS_BUCKET_NAME}}
  IRON_SESSION: ${{secrets.IRON_SESSION}}
  TABLELAND_PRIVATE_KEY: ${{secrets.TABLELAND_PRIVATE_KEY}}
  UPSTASH_REDIS_URL: ${{secrets.UPSTASH_REDIS_URL}}
  UPSTASH_REDIS_TOKEN: ${{secrets.UPSTASH_REDIS_TOKEN}}
  NEXTAUTH_SECRET: ${{secrets.NEXTAUTH_SECRET}}
  JB_SEPOLIA_SUBGRAPH_ENDPOINT: ${{secrets.JB_SEPOLIA_SUBGRAPH_ENDPOINT}}
  JB_SEPOLIA_SUBGRAPH_API_KEY: ${{secrets.JB_SEPOLIA_SUBGRAPH_API_KEY}}
  BENDYSTRAW_API_KEY: ${{secrets.BENDYSTRAW_API_KEY}}

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"
          cache-dependency-path: ui/yarn.lock

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ui/node_modules
            ~/.cache/yarn
          key: ui-${{ runner.os }}-${{ hashFiles('ui/yarn.lock', 'ui/package.json') }}
          restore-keys: |
            ui-${{ runner.os }}-

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: ui/.next
          key: next-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            next-${{ runner.os }}-

      # BrowserStack Environment Setup - Required before any other BrowserStack actions
      - name: "BrowserStack Env Setup"
        uses: "browserstack/github-actions/setup-env@master"
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          build-name: "BUILD_INFO"
          project-name: "REPO_NAME"

      - name: Install dependencies
        working-directory: ui
        run: yarn install --frozen-lockfile

      - name: Install npm dependencies
        working-directory: ui
        run: npm install --legacy-peer-deps

      - name: Install Cypress binary
        working-directory: ui
        run: npx cypress install

      # Build the web application
      - name: Build next app
        working-directory: ui
        run: yarn build

      # Install browserstack-cypress-cli globally
      - name: Install browserstack-cypress-cli
        run: npm install -g browserstack-cypress-cli

      # Start the web server for testing
      - name: Start server and run E2E tests
        working-directory: ui
        run: |
          # Start server in background - Next.js production mode
          echo "Starting Next.js server..."
          yarn next start -p 3000 &
          SERVER_PID=$!

          # Wait for server to be ready
          echo "Waiting for server to start..."
          sleep 15

          # Simple health check
          echo "Server health check:"
          curl -I http://localhost:3000 || echo "❌ Server health check failed"

          # Run tests with BrowserStack local tunnel
          echo "Starting BrowserStack Cypress tests..."
          BROWSERSTACK_LOCAL=true browserstack-cypress run --force-upload --verbose || echo "❌ Tests failed to run"

          # Clean up
          echo "Cleaning up..."
          kill $SERVER_PID || true
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_LOCAL: true
          BROWSERSTACK_LOCAL_IDENTIFIER: "moon-dao-tests"
          CYPRESS_BASE_URL: "http://localhost:3000"
          BUILD_NUMBER: ${{ github.run_id }}

      # Run cypress component tests
      - name: Run Cypress Component Testing
        uses: cypress-io/github-action@v6
        with:
          working-directory: ui
          install: false
          start: yarn next start -p 3001
          wait-on: "http://localhost:3001"
          component: true
          browser: chrome
          record: false

      # Save screenshots on fail
      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ui/cypress/screenshots
          retention-days: 7

      # Save test run videos, always
      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: ui/cypress/videos
          retention-days: 7
