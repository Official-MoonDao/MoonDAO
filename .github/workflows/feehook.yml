name: test

on:
  push:
    branches: [main]
    paths-ignore: ['**.md']
  pull_request:
    branches: [main]
    paths-ignore: ['**.md']

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      #########################################################
      # 1. Pull the cached Git object DB (root + submodules)  #
      #########################################################
      - name: Restore Git cache
        uses: actions/cache@v3
        with:
          path: .git                      # includes .git/modules/*
          # bump the key when .gitmodules changes so the cache busts cleanly
          key: ${{ runner.os }}-git-${{ hashFiles('.gitmodules') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-git-${{ hashFiles('.gitmodules') }}-
            ${{ runner.os }}-git-

      #########################################################
      # 2. Normal checkout, but *don't* scrub the workspace   #
      #    (we just restored it!)                            #
      #########################################################
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          clean: false          # skip `git clean -ffdx` so cache survives :contentReference[oaicite:0]{index=0}

      # …everything else stays exactly the same …
      - name: Run apply_patch.sh
        run: |
          chmod +x ./fee-hook/apply_patch.sh
          ./fee-hook/apply_patch.sh

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Local Chain with Anvil
        run: anvil --fork-url https://1.rpc.thirdweb.com/${{ secrets.ANVIL_THIRDWEB_CLIENT_ID }} &
        id: local-chain

      - name: Install npm dependencies
        run: |
          cd fee-hook && npm install --legacy-peer-deps
        id: install-dependencies

      - name: Run Forge build
        run: |
          forge --version
          cd fee-hook && forge build --sizes --via-ir --optimize --optimizer-runs 200
        id: build

      - name: Run Forge tests
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          cd fee-hook && forge test --via-ir --optimize --optimizer-runs 200 --fork-url http://localhost:8545 -vvvv
        id: test
