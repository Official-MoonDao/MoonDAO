# Use the official Node.js runtime as the base image
FROM node:20-alpine AS builder

# Set the working directory in the container
WORKDIR /app

# Copy package.json and yarn.lock for dependency installation
COPY package.json yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy the source code
COPY . .

# Build the TypeScript application
RUN yarn build

# Production stage
FROM node:20-alpine AS production

# Install supervisor for process management and other dependencies
RUN apk add --no-cache \
    supervisor \
    redis \
    curl \
    wget \
    ca-certificates \
    bash

# Set the working directory
WORKDIR /app

# Copy package.json and yarn.lock
COPY package.json yarn.lock ./

# Install only production dependencies
RUN yarn install --frozen-lockfile --production && yarn cache clean

# Copy the built application from the builder stage
COPY --from=builder /app/dist ./dist

# Download and install LiveKit binary
RUN wget -O /tmp/livekit.tar.gz https://github.com/livekit/livekit/releases/download/v1.5.2/livekit_1.5.2_linux_amd64.tar.gz && \
    cd /tmp && \
    tar -xzf livekit.tar.gz && \
    chmod +x livekit-server && \
    mv livekit-server /usr/local/bin/livekit && \
    rm -f livekit.tar.gz

# Create a non-root user for security FIRST
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy configuration files to /app (not /etc)
COPY livekit.yaml /app/livekit.yaml
COPY supervisord.conf /etc/supervisord.conf

# Create the key generation script to put keys in livekit.yaml
RUN echo '#!/bin/bash' > /app/generate-keys.sh && \
    echo 'echo "=== Key Generation Debug ==="' >> /app/generate-keys.sh && \
    echo 'echo "LIVEKIT_API_KEY: ${LIVEKIT_API_KEY:-NOT_SET}"' >> /app/generate-keys.sh && \
    echo 'echo "LIVEKIT_API_SECRET: ${LIVEKIT_API_SECRET:-NOT_SET}"' >> /app/generate-keys.sh && \
    echo 'if [ -z "$LIVEKIT_API_KEY" ] || [ -z "$LIVEKIT_API_SECRET" ]; then' >> /app/generate-keys.sh && \
    echo '  echo "ERROR: LIVEKIT_API_KEY and LIVEKIT_API_SECRET must be set!"' >> /app/generate-keys.sh && \
    echo '  exit 1' >> /app/generate-keys.sh && \
    echo 'fi' >> /app/generate-keys.sh && \
    echo 'echo "Replacing placeholders in config..."' >> /app/generate-keys.sh && \
    echo 'sed -i "s/PLACEHOLDER_API_KEY: PLACEHOLDER_API_SECRET/$LIVEKIT_API_KEY: $LIVEKIT_API_SECRET/g" /app/livekit.yaml' >> /app/generate-keys.sh && \
    echo 'echo "=== Final Config File ==="' >> /app/generate-keys.sh && \
    echo 'cat /app/livekit.yaml' >> /app/generate-keys.sh && \
    echo 'echo "=== End Config File ==="' >> /app/generate-keys.sh && \
    chmod +x /app/generate-keys.sh

# Create directories for logs and data
RUN mkdir -p /var/log/supervisor /data /var/run

# Change ownership of necessary directories
RUN chown -R nodejs:nodejs /app /data /var/log/supervisor /var/run

# Expose ports for all services
EXPOSE 2567 7880 7881 7882 50000 50001 50002 50003 50004

# Set environment variables
ENV NODE_ENV=production
ENV PORT=2567
ENV REDIS_URL=redis://localhost:6379
ENV LIVEKIT_WS_URL=ws://localhost:7880

# Use supervisor to manage all processes
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
