{"abi":[{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"isSigner","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifyProof","inputs":[{"name":"proof","type":"tuple","internalType":"struct IXPOracle.Proof","components":[{"name":"user","type":"address","internalType":"address"},{"name":"verifier","type":"address","internalType":"address"},{"name":"contextHash","type":"bytes32","internalType":"bytes32"},{"name":"xpAmount","type":"uint256","internalType":"uint256"},{"name":"validAfter","type":"uint256","internalType":"uint256"},{"name":"validBefore","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isValid","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"domainSeparator()":"f698da25","isSigner(address)":"7df73e27","verifyProof((address,address,bytes32,uint256,uint256,uint256),bytes)":"d869893e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"xpAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"}],\"internalType\":\"struct IXPOracle.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses EIP-712 typed data for signatures. Verifiers can depend on a single oracle      to validate proofs across many conditions.\",\"kind\":\"dev\",\"methods\":{\"verifyProof((address,address,bytes32,uint256,uint256,uint256),bytes)\":{\"returns\":{\"isValid\":\"True if signature is valid and signer is authorized\"}}},\"title\":\"IXPOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"domainSeparator()\":{\"notice\":\"Return the EIP-712 domain separator used by the oracle\"},\"isSigner(address)\":{\"notice\":\"Check if an address is an authorized signer\"},\"verifyProof((address,address,bytes32,uint256,uint256,uint256),bytes)\":{\"notice\":\"Verify that a signature over `proof` was produced by an authorized signer\"}},\"notice\":\"Shared oracle interface for signing/verifying off-chain computed XP eligibility proofs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IXPOracle.sol\":\"IXPOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/contracts/lib/chainlink/\",\":@ds-test/=lib/contracts/lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/contracts/lib/seaport/lib/solmate/\",\":@seaport/=lib/contracts/lib/seaport/contracts/\",\":@solady/=lib/contracts/lib/solady/\",\":@std/=lib/contracts/lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/contracts/lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/contracts/lib/ERC721A/contracts/\",\":chainlink/=lib/contracts/lib/chainlink/contracts/\",\":contracts/=lib/contracts/contracts/\",\":ds-test/=lib/contracts/lib/ds-test/src/\",\":dynamic-contracts/=lib/contracts/lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/\",\":erc721a/=lib/contracts/lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":lib/sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/\",\":murky/=lib/contracts/lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":seaport-core/=lib/contracts/lib/seaport-core/src/\",\":seaport-sol/=lib/contracts/lib/seaport-sol/src/\",\":seaport-types/=lib/contracts/lib/seaport-types/src/\",\":seaport/=lib/contracts/lib/seaport/\",\":solady/=lib/contracts/lib/solady/src/\",\":solarray/=lib/contracts/lib/seaport/lib/solarray/src/\",\":solmate/=lib/contracts/lib/seaport/lib/solmate/src/\",\":sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"src/interfaces/IXPOracle.sol\":{\"keccak256\":\"0x16be28fd74fcbb079d921ddce8d269ac8396c4e013d2e68b3fc279fc217ae3da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c3fe50308ab6430a1c6c7a3b3e1d13259a39280a7118f291be516c0c2024ac1\",\"dweb:/ipfs/QmdKDxCuQVhmFZmEGPWHFgcRqRQB2GX9BcLo8xhn8KYDJY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct IXPOracle.Proof","name":"proof","type":"tuple","components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"contextHash","type":"bytes32"},{"internalType":"uint256","name":"xpAmount","type":"uint256"},{"internalType":"uint256","name":"validAfter","type":"uint256"},{"internalType":"uint256","name":"validBefore","type":"uint256"}]},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"verifyProof","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"verifyProof((address,address,bytes32,uint256,uint256,uint256),bytes)":{"returns":{"isValid":"True if signature is valid and signer is authorized"}}},"version":1},"userdoc":{"kind":"user","methods":{"domainSeparator()":{"notice":"Return the EIP-712 domain separator used by the oracle"},"isSigner(address)":{"notice":"Check if an address is an authorized signer"},"verifyProof((address,address,bytes32,uint256,uint256,uint256),bytes)":{"notice":"Verify that a signature over `proof` was produced by an authorized signer"}},"version":1}},"settings":{"remappings":["@chainlink/=lib/contracts/lib/chainlink/","@ds-test/=lib/contracts/lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/contracts/lib/seaport/lib/solmate/","@seaport/=lib/contracts/lib/seaport/contracts/","@solady/=lib/contracts/lib/solady/","@std/=lib/contracts/lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/contracts/lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/contracts/lib/ERC721A/contracts/","chainlink/=lib/contracts/lib/chainlink/contracts/","contracts/=lib/contracts/contracts/","ds-test/=lib/contracts/lib/ds-test/src/","dynamic-contracts/=lib/contracts/lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc721a-upgradeable/=lib/contracts/lib/ERC721A-Upgradeable/","erc721a/=lib/contracts/lib/ERC721A/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","lib/sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/","murky/=lib/contracts/lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/contracts/lib/openzeppelin-contracts-upgradeable/contracts/","seaport-core/=lib/contracts/lib/seaport-core/src/","seaport-sol/=lib/contracts/lib/seaport-sol/src/","seaport-types/=lib/contracts/lib/seaport-types/src/","seaport/=lib/contracts/lib/seaport/","solady/=lib/contracts/lib/solady/src/","solarray/=lib/contracts/lib/seaport/lib/solarray/src/","solmate/=lib/contracts/lib/seaport/lib/solmate/src/","sstore2/=lib/contracts/lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IXPOracle.sol":"IXPOracle"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/IXPOracle.sol":{"keccak256":"0x16be28fd74fcbb079d921ddce8d269ac8396c4e013d2e68b3fc279fc217ae3da","urls":["bzz-raw://0c3fe50308ab6430a1c6c7a3b3e1d13259a39280a7118f291be516c0c2024ac1","dweb:/ipfs/QmdKDxCuQVhmFZmEGPWHFgcRqRQB2GX9BcLo8xhn8KYDJY"],"license":"MIT"}},"version":1},"id":38}