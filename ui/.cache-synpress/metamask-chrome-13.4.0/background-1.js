LavaPack.loadBundle([[18,{"../../../../shared/lib/trace":5342,"../../../../shared/modules/selectors":5370,"../../../../shared/modules/shield":5374,"../../lib/smart-transaction/smart-transactions":202,"../../lib/transaction/hooks/enforce-simulation-hook":228,"../../lib/transaction/metrics":229,"@metamask/smart-transactions-controller/dist/types":2266,"@metamask/transaction-controller":2587,_process:4600},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.TransactionControllerInit=void 0;var a=e("@metamask/transaction-controller"),n=e("@metamask/smart-transactions-controller/dist/types"),r=e("../../../../shared/modules/selectors"),i=e("../../lib/smart-transaction/smart-transactions"),o=e("../../../../shared/lib/trace"),c=e("../../lib/transaction/metrics"),l=e("../../lib/transaction/hooks/enforce-simulation-hook"),d=e("../../../../shared/modules/shield");s.TransactionControllerInit=e=>{var s;const{controllerMessenger:u,initMessenger:h,getFlatState:m,getGlobalChainId:p,getPermittedAccounts:f,getTransactionMetricsRequest:g,updateAccountBalanceForTransactionNetwork:b,persistedState:y}=e,{gasFeeController:w,keyringController:v,networkController:k,onboardingController:T,preferencesController:S,smartTransactionsController:P}=function(e){return{gasFeeController:()=>e.getController("GasFeeController"),keyringController:()=>e.getController("KeyringController"),networkController:()=>e.getController("NetworkController"),onboardingController:()=>e.getController("OnboardingController"),preferencesController:()=>e.getController("PreferencesController"),smartTransactionsController:()=>e.getController("SmartTransactionsController"),institutionalSnapController:()=>e.getController("InstitutionalSnapController")}}(e),_=new a.TransactionController({getCurrentNetworkEIP1559Compatibility:()=>h.call("NetworkController:getEIP1559Compatibility"),getCurrentAccountEIP1559Compatibility:async()=>!0,getExternalPendingTransactions:e=>function(e,t){return e.getTransactions({addressFrom:t,status:n.SmartTransactionStatuses.PENDING})}(P(),e),getGasFeeEstimates:(...e)=>w().fetchGasFeeEstimates(...e),getNetworkClientRegistry:(...e)=>k().getNetworkClientRegistry(...e),getNetworkState:()=>k().state,getPermittedAccounts:f,getSavedGasFees:()=>{const e=p();return S().state.advancedGasFee[e]},getSimulationConfig:async e=>(0,d.getShieldGatewayConfig)(()=>h.call("AuthenticationController:getBearerToken"),e),incomingTransactions:{client:`extension-${null===(s=t.env.METAMASK_VERSION)||void 0===s?void 0:s.replace(/\./gu,"-")}`,includeTokenTransfers:!1,isEnabled:()=>S().state.useExternalServices&&T().state.completedOnboarding,updateTransactions:!0},isAutomaticGasFeeUpdateEnabled:({type:e})=>{const t=[a.TransactionType.swap,a.TransactionType.swapApproval,a.TransactionType.bridge,a.TransactionType.bridgeApproval];return!e||!t.includes(e)},isEIP7702GasFeeTokensEnabled:async e=>{const{chainId:t}=e,s={metamask:m()};return!(0,r.getIsSmartTransaction)(s,t)},isFirstTimeInteractionEnabled:()=>S().state.securityAlertsEnabled,isSimulationEnabled:()=>S().state.useTransactionSimulations,messenger:u,pendingTransactions:{isResubmitEnabled:()=>!1},publicKeyEIP7702:"0x3c7a1cCCe462e96D186B8ca9a1BCB2010C3dABa3",testGasFeeFlows:Boolean(!1),trace:o.trace,hooks:{afterSimulate:new l.EnforceSimulationHook({messenger:h}).getAfterSimulateHook(),beforePublish:e=>h.call("InstitutionalSnapController:publishHook",e),beforeSign:new l.EnforceSimulationHook({messenger:h}).getBeforeSignHook(),beforeCheckPendingTransactions:e=>h.call("InstitutionalSnapController:beforeCheckPendingTransactionHook",e),publish:(e,t)=>(0,i.publishSmartTransactionHook)({flatState:m(),initMessenger:h,signedTx:t,smartTransactionsController:P(),transactionController:_,transactionMeta:e}),publishBatch:async e=>await(0,i.publishBatchSmartTransactionHook)({transactionController:_,smartTransactionsController:P(),hookControllerMessenger:h,flatState:m(),transactions:e.transactions})},sign:(...e)=>v().signTransaction(...e),state:y.TransactionController});!function(e,t,s){const a=t();e.subscribe("TransactionController:unapprovedTransactionAdded",s),e.subscribe("TransactionController:transactionConfirmed",s),e.subscribe("TransactionController:postTransactionBalanceUpdated",c.handlePostTransactionBalanceUpdate.bind(null,a)),e.subscribe("TransactionController:unapprovedTransactionAdded",e=>(0,c.handleTransactionAdded)(a,{transactionMeta:e})),e.subscribe("TransactionController:transactionApproved",c.handleTransactionApproved.bind(null,a)),e.subscribe("TransactionController:transactionDropped",c.handleTransactionDropped.bind(null,a)),e.subscribe("TransactionController:transactionConfirmed",c.handleTransactionConfirmed.bind(null,a)),e.subscribe("TransactionController:transactionFailed",c.handleTransactionFailed.bind(null,a)),e.subscribe("TransactionController:transactionNewSwap",({transactionMeta:t})=>e.call("SwapsController:setTradeTxId",t.id)),e.subscribe("TransactionController:transactionNewSwapApproval",({transactionMeta:t})=>e.call("SwapsController:setApproveTxId",t.id)),e.subscribe("TransactionController:transactionRejected",c.handleTransactionRejected.bind(null,a)),e.subscribe("TransactionController:transactionSubmitted",c.handleTransactionSubmitted.bind(null,a))}(h,g,b);const E=function(e){return{abortTransactionSigning:e.abortTransactionSigning.bind(e),getLayer1GasFee:e.getLayer1GasFee.bind(e),getTransactions:e.getTransactions.bind(e),isAtomicBatchSupported:e.isAtomicBatchSupported.bind(e),startIncomingTransactionPolling:e.startIncomingTransactionPolling.bind(e),stopIncomingTransactionPolling:e.stopIncomingTransactionPolling.bind(e),updateAtomicBatchData:e.updateAtomicBatchData.bind(e),updateBatchTransactions:e.updateBatchTransactions.bind(e),updateEditableParams:e.updateEditableParams.bind(e),updatePreviousGasParams:e.updatePreviousGasParams.bind(e),updateSelectedGasFeeToken:e.updateSelectedGasFeeToken.bind(e),updateTransactionGasFees:e.updateTransactionGasFees.bind(e),updateTransactionSendFlowHistory:e.updateTransactionSendFlowHistory.bind(e)}}(_);return{controller:_,api:E,memStateKey:"TxController"}}}).call(this)}).call(this,e("_process"))}}},{package:"$root$",file:"app/scripts/controller-init/confirmations/transaction-controller-init.ts"}],[180,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.qrKeyringBuilderFactory=function(e,t,s){const a=()=>new e({bridge:new t(s)});return a.type=e.type,a}}}},{package:"$root$",file:"app/scripts/lib/qr-keyring-builder-factory.ts"}],[1800,{"./validate.js":1810},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a,n=(a=e("./validate.js"))&&a.__esModule?a:{default:a};var r=function(e){if(!(0,n.default)(e))throw TypeError("Invalid UUID");let t;const s=new Uint8Array(16);return s[0]=(t=parseInt(e.slice(0,8),16))>>>24,s[1]=t>>>16&255,s[2]=t>>>8&255,s[3]=255&t,s[4]=(t=parseInt(e.slice(9,13),16))>>>8,s[5]=255&t,s[6]=(t=parseInt(e.slice(14,18),16))>>>8,s[7]=255&t,s[8]=(t=parseInt(e.slice(19,23),16))>>>8,s[9]=255&t,s[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,s[11]=t/4294967296&255,s[12]=t>>>24&255,s[13]=t>>>16&255,s[14]=t>>>8&255,s[15]=255&t,s};s.default=r}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/parse.js"}],[1801,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/regex.js"}],[1802,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){let a;Object.defineProperty(s,"__esModule",{value:!0}),s.default=function(){if(!a&&(a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!a))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(n)};const n=new Uint8Array(16)}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/rng-browser.js"}],[1803,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e,t,s,a){switch(e){case 0:return t&s^~t&a;case 1:case 3:return t^s^a;case 2:return t&s^t&a^s&a}}function n(e,t){return e<<t|e>>>32-t}Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var r=function(e){const t=[1518500249,1859775393,2400959708,3395469782],s=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){const t=unescape(encodeURIComponent(e));e=[];for(let s=0;s<t.length;++s)e.push(t.charCodeAt(s))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);const r=e.length/4+2,i=Math.ceil(r/16),o=new Array(i);for(let t=0;t<i;++t){const s=new Uint32Array(16);for(let a=0;a<16;++a)s[a]=e[64*t+4*a]<<24|e[64*t+4*a+1]<<16|e[64*t+4*a+2]<<8|e[64*t+4*a+3];o[t]=s}o[i-1][14]=8*(e.length-1)/Math.pow(2,32),o[i-1][14]=Math.floor(o[i-1][14]),o[i-1][15]=8*(e.length-1)&4294967295;for(let e=0;e<i;++e){const r=new Uint32Array(80);for(let t=0;t<16;++t)r[t]=o[e][t];for(let e=16;e<80;++e)r[e]=n(r[e-3]^r[e-8]^r[e-14]^r[e-16],1);let i=s[0],c=s[1],l=s[2],d=s[3],u=s[4];for(let e=0;e<80;++e){const s=Math.floor(e/20),o=n(i,5)+a(s,c,l,d)+u+t[s]+r[e]>>>0;u=d,d=l,l=n(c,30)>>>0,c=i,i=o}s[0]=s[0]+i>>>0,s[1]=s[1]+c>>>0,s[2]=s[2]+l>>>0,s[3]=s[3]+d>>>0,s[4]=s[4]+u>>>0}return[s[0]>>24&255,s[0]>>16&255,s[0]>>8&255,255&s[0],s[1]>>24&255,s[1]>>16&255,s[1]>>8&255,255&s[1],s[2]>>24&255,s[2]>>16&255,s[2]>>8&255,255&s[2],s[3]>>24&255,s[3]>>16&255,s[3]>>8&255,255&s[3],s[4]>>24&255,s[4]>>16&255,s[4]>>8&255,255&s[4]]};s.default=r}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/sha1-browser.js"}],[1804,{"./validate.js":1810},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0,s.unsafeStringify=i;var a,n=(a=e("./validate.js"))&&a.__esModule?a:{default:a};const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));function i(e,t=0){return r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]}var o=function(e,t=0){const s=i(e,t);if(!(0,n.default)(s))throw TypeError("Stringified UUID is invalid");return s};s.default=o}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/stringify.js"}],[1805,{"./rng.js":1802,"./stringify.js":1804},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a,n=(a=e("./rng.js"))&&a.__esModule?a:{default:a},r=e("./stringify.js");let i,o,c=0,l=0;var d=function(e,t,s){let a=t&&s||0;const d=t||new Array(16);let u=(e=e||{}).node||i,h=e.clockseq!==undefined?e.clockseq:o;if(null==u||null==h){const t=e.random||(e.rng||n.default)();null==u&&(u=i=[1|t[0],t[1],t[2],t[3],t[4],t[5]]),null==h&&(h=o=16383&(t[6]<<8|t[7]))}let m=e.msecs!==undefined?e.msecs:Date.now(),p=e.nsecs!==undefined?e.nsecs:l+1;const f=m-c+(p-l)/1e4;if(f<0&&e.clockseq===undefined&&(h=h+1&16383),(f<0||m>c)&&e.nsecs===undefined&&(p=0),p>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");c=m,l=p,o=h,m+=122192928e5;const g=(1e4*(268435455&m)+p)%4294967296;d[a++]=g>>>24&255,d[a++]=g>>>16&255,d[a++]=g>>>8&255,d[a++]=255&g;const b=m/4294967296*1e4&268435455;d[a++]=b>>>8&255,d[a++]=255&b,d[a++]=b>>>24&15|16,d[a++]=b>>>16&255,d[a++]=h>>>8|128,d[a++]=255&h;for(let e=0;e<6;++e)d[a+e]=u[e];return t||(0,r.unsafeStringify)(d)};s.default=d}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/v1.js"}],[1806,{"./md5.js":1797,"./v35.js":1807},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=r(e("./v35.js")),n=r(e("./md5.js"));function r(e){return e&&e.__esModule?e:{default:e}}var i=(0,a.default)("v3",48,n.default);s.default=i}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/v3.js"}],[1807,{"./parse.js":1800,"./stringify.js":1804},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.URL=s.DNS=void 0,s.default=function(e,t,s){function a(e,a,i,o){var c;if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));const t=[];for(let s=0;s<e.length;++s)t.push(e.charCodeAt(s));return t}(e)),"string"==typeof a&&(a=(0,r.default)(a)),16!==(null===(c=a)||void 0===c?void 0:c.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let l=new Uint8Array(16+e.length);if(l.set(a),l.set(e,a.length),l=s(l),l[6]=15&l[6]|t,l[8]=63&l[8]|128,i){o=o||0;for(let e=0;e<16;++e)i[o+e]=l[e];return i}return(0,n.unsafeStringify)(l)}try{a.name=e}catch(e){}return a.DNS=i,a.URL=o,a};var a,n=e("./stringify.js"),r=(a=e("./parse.js"))&&a.__esModule?a:{default:a};const i="6ba7b810-9dad-11d1-80b4-00c04fd430c8";s.DNS=i;const o="6ba7b811-9dad-11d1-80b4-00c04fd430c8";s.URL=o}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/v35.js"}],[1808,{"./native.js":1798,"./rng.js":1802,"./stringify.js":1804},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=i(e("./native.js")),n=i(e("./rng.js")),r=e("./stringify.js");function i(e){return e&&e.__esModule?e:{default:e}}var o=function(e,t,s){if(a.default.randomUUID&&!t&&!e)return a.default.randomUUID();const i=(e=e||{}).random||(e.rng||n.default)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t){s=s||0;for(let e=0;e<16;++e)t[s+e]=i[e];return t}return(0,r.unsafeStringify)(i)};s.default=o}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/v4.js"}],[1809,{"./sha1.js":1803,"./v35.js":1807},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=r(e("./v35.js")),n=r(e("./sha1.js"));function r(e){return e&&e.__esModule?e:{default:e}}var i=(0,a.default)("v5",80,n.default);s.default=i}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/v5.js"}],[181,{"./handlers":187,"./handlers/wallet-getPermissions":192,"./handlers/wallet-requestPermissions":193,"./handlers/wallet-revokePermissions":194,"@metamask/rpc-errors":2224,"@metamask/snaps-rpc-methods":2346,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createMultichainMethodMiddleware=s.createEthAccountsMethodMiddleware=s.createEip1193MethodMiddleware=void 0,s.makeMethodMiddlewareMaker=d;var a=e("@metamask/rpc-errors"),n=e("@metamask/snaps-rpc-methods"),r=e("@metamask/utils"),i=e("./handlers"),o=e("./handlers/wallet-getPermissions"),c=e("./handlers/wallet-requestPermissions"),l=e("./handlers/wallet-revokePermissions");s.createEip1193MethodMiddleware=d([...i.handlers,...i.eip1193OnlyHandlers,o.getPermissionsHandler,c.requestPermissionsHandler,l.revokePermissionsHandler]),s.createEthAccountsMethodMiddleware=d([i.ethAccountsHandler]),s.createMultichainMethodMiddleware=d(i.handlers);function d(e){const t=e.reduce((e,t)=>{for(const s of t.methodNames)e[s]=t;return e},{}),s=new Set(e.flatMap(({hookNames:e})=>Object.getOwnPropertyNames(e)));return e=>{!function(e,t){const s=[];if(t.forEach(t=>{(0,r.hasProperty)(e,t)||s.push(t)}),s.length>0)throw new Error(`Missing expected hooks:\n\n${s.join("\n")}\n`);const a=Object.getOwnPropertyNames(e).filter(e=>!t.has(e));if(a.length>0)throw new Error(`Received unexpected hooks:\n\n${a.join("\n")}\n`)}(e,s);return async(s,r,i,o)=>{const c=t[s.method];if(c){const{implementation:t,hookNames:l}=c;try{return await t(s,r,i,o,(0,n.selectHooks)(e,l))}catch(e){return o(e instanceof Error?e:a.rpcErrors.internal({data:e}))}}return i()}}}}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/createMethodMiddleware.js"}],[1810,{"./regex.js":1801},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a,n=(a=e("./regex.js"))&&a.__esModule?a:{default:a};var r=function(e){return"string"==typeof e&&n.default.test(e)};s.default=r}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/validate.js"}],[1811,{"./validate.js":1810},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a,n=(a=e("./validate.js"))&&a.__esModule?a:{default:a};var r=function(e){if(!(0,n.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)};s.default=r}}},{package:"@metamask/eth-snap-keyring>uuid",file:"node_modules/@metamask/eth-snap-keyring/node_modules/uuid/dist/version.js"}],[182,{"../../../../shared/constants/network":5262,"@metamask/rpc-errors":2224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createUnsupportedMethodMiddleware=function(e=n.UNSUPPORTED_RPC_METHODS){return async function(t,s,n,r){return e.has(t.method)?r(a.rpcErrors.methodNotSupported()):n()}};var a=e("@metamask/rpc-errors"),n=e("../../../../shared/constants/network")}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/createUnsupportedMethodMiddleware.ts"}],[1820,{"./onekey-keyring.cjs":1821,"./trezor-connect-bridge.cjs":1822,"./trezor-keyring.cjs":1823},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./trezor-keyring.cjs"),s),n(e("./onekey-keyring.cjs"),s),n(e("./trezor-connect-bridge.cjs"),s)}}},{package:"@metamask/eth-trezor-keyring",file:"node_modules/@metamask/eth-trezor-keyring/dist/index.cjs"}],[1821,{"./trezor-keyring.cjs":1823},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.OneKeyKeyring=void 0;const a=e("./trezor-keyring.cjs"),n="OneKey Hardware";class r extends a.TrezorKeyring{constructor(){super(...arguments),this.type=n}}s.OneKeyKeyring=r,r.type=n}}},{package:"@metamask/eth-trezor-keyring",file:"node_modules/@metamask/eth-trezor-keyring/dist/onekey-keyring.cjs"}],[1822,{"@trezor/connect-web":2751},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&a(t,e,s);return n(t,e),t};Object.defineProperty(s,"__esModule",{value:!0}),s.TrezorConnectBridge=void 0;const i=r(e("@trezor/connect-web"));s.TrezorConnectBridge=class{constructor(){this.trezorConnectInitiated=!1}async init(e){i.default.on(i.DEVICE_EVENT,e=>{var t;e.type===i.DEVICE.CONNECT&&(this.model=null===(t=e.payload.features)||void 0===t?void 0:t.model)}),this.trezorConnectInitiated||(await i.default.init(e),this.trezorConnectInitiated=!0)}async dispose(){return i.default.dispose(),Promise.resolve()}getPublicKey(e){return i.default.getPublicKey(e)}ethereumSignTransaction(e){return i.default.ethereumSignTransaction(e)}ethereumSignMessage(e){return i.default.ethereumSignMessage(e)}ethereumSignTypedData(e){return i.default.ethereumSignTypedData(e)}}}}},{package:"@metamask/eth-trezor-keyring",file:"node_modules/@metamask/eth-trezor-keyring/dist/trezor-connect-bridge.cjs"}],[1823,{"@ethereumjs/tx":532,"@ethereumjs/util":546,"@metamask/eth-sig-util":1758,"@metamask/utils":2632,"@trezor/connect-plugin-ethereum":2742,buffer:3590,hdkey:4137},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a,n,r,i,o,c,l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.TrezorKeyring=s.TREZOR_CONNECT_MANIFEST=void 0;const u=e("@ethereumjs/tx"),h=e("@ethereumjs/util"),m=e("@metamask/eth-sig-util"),p=e("@metamask/utils"),f=e("@trezor/connect-plugin-ethereum"),g=d(e("hdkey")),b="m/44'/60'/0'/0",y="m/44'/1'/0'/0",w="m/44'/60'/0'",v={[b]:!0,[w]:!0,[y]:!0},k="Trezor Hardware",T=1e3;async function S(e){return new Promise(t=>setTimeout(t,e))}function P(e){return"function"==typeof e.getChainId}s.TREZOR_CONNECT_MANIFEST={appName:"MetaMask",email:"support@metamask.io",appUrl:"https://metamask.io"};class _{constructor({bridge:e}){if(a.add(this),this.type=k,this.accounts=[],this.hdk=new g.default,this.hdPath=b,this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={},!e)throw new Error("Bridge is a required dependency for the keyring");this.bridge=e}getModel(){return this.bridge.model}async init(){return this.bridge.init({manifest:s.TREZOR_CONNECT_MANIFEST,lazyLoad:!0})}async destroy(){return this.bridge.dispose()}async serialize(){return Promise.resolve({hdPath:this.hdPath,accounts:this.accounts.slice(),page:this.page,paths:this.paths,perPage:this.perPage,unlockedAccount:this.unlockedAccount})}async deserialize(e){var t,s,a,n;return this.hdPath=null!==(t=e.hdPath)&&void 0!==t?t:b,this.accounts=null!==(s=e.accounts)&&void 0!==s?s:[],this.page=null!==(a=e.page)&&void 0!==a?a:0,this.perPage=null!==(n=e.perPage)&&void 0!==n?n:5,Promise.resolve()}isUnlocked(){var e;return Boolean(null===(e=this.hdk)||void 0===e?void 0:e.publicKey)}async unlock(){return this.isUnlocked()?Promise.resolve("already unlocked"):new Promise((e,s)=>{this.bridge.getPublicKey({path:this.hdPath,coin:"ETH"}).then(a=>{var n;a.success?(this.hdk.publicKey=t.from(a.payload.publicKey,"hex"),this.hdk.chainCode=t.from(a.payload.chainCode,"hex"),e("just unlocked")):s(new Error((null===(n=a.payload)||void 0===n?void 0:n.error)||"Unknown error"))}).catch(e=>{s(new Error((null==e?void 0:e.toString())||"Unknown error"))})})}setAccountToUnlock(e){this.unlockedAccount=parseInt(String(e),10)}async addAccounts(e){return new Promise((t,s)=>{this.unlock().then(s=>{const n=this.unlockedAccount,r=n+e,i=[];for(let e=n;e<r;e++){const t=l(this,a,"m",o).call(this,"m",e);this.accounts.includes(t)||(this.accounts=[...this.accounts,t],i.push(t)),this.page=0}t(i)}).catch(e=>{s(e)})})}async getFirstPage(){return this.page=0,l(this,a,"m",n).call(this,1)}async getNextPage(){return l(this,a,"m",n).call(this,1)}async getPreviousPage(){return l(this,a,"m",n).call(this,-1)}async getAccounts(){return Promise.resolve(this.accounts.slice())}removeAccount(e){if(!this.accounts.map(e=>e.toLowerCase()).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter(t=>t.toLowerCase()!==e.toLowerCase())}async signTransaction(e,s){return P(s)?l(this,a,"m",r).call(this,e,s.getChainId(),s,e=>(s.v=t.from(e.v,"hex"),s.r=t.from(e.r,"hex"),s.s=t.from(e.s,"hex"),s)):l(this,a,"m",r).call(this,e,Number(s.common.chainId()),s,e=>{const t=s.toJSON();return t.type=s.type,t.v=(0,p.add0x)(e.v),t.r=(0,p.add0x)(e.r),t.s=(0,p.add0x)(e.s),u.TransactionFactory.fromTxData(t,{common:s.common,freeze:Object.isFrozen(s)})})}async signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,t){return new Promise((s,n)=>{this.unlock().then(r=>{setTimeout(()=>{this.bridge.ethereumSignMessage({path:l(this,a,"m",c).call(this,e),message:(0,p.remove0x)(t),hex:!0}).then(t=>{var a;if(t.success){t.payload.address!==(0,p.getChecksumAddress)(e)&&n(new Error("signature doesnt match the right address"));const a=`0x${t.payload.signature}`;s(a)}else n(new Error((null===(a=t.payload)||void 0===a?void 0:a.error)||"Unknown error"))}).catch(e=>{n(new Error((null==e?void 0:e.toString())||"Unknown error"))})},"just unlocked"===r?T:0)}).catch(e=>{n(new Error((null==e?void 0:e.toString())||"Unknown error"))})})}async signTypedData(e,t,s){var n,r;const{version:i}=null!=s?s:{version:m.SignTypedDataVersion.V4},o=(0,f.transformTypedData)(t,i===m.SignTypedDataVersion.V4),{types:d,message:u={},domain:h={},primaryType:g,domain_separator_hash:b,message_hash:y}=o,w=await this.unlock();await S("just unlocked"===w?T:0);const v=await this.bridge.ethereumSignTypedData({path:l(this,a,"m",c).call(this,e),data:{types:Object.assign(Object.assign({},d),{EIP712Domain:null!==(n=d.EIP712Domain)&&void 0!==n?n:[]}),message:u,domain:h,primaryType:g},metamask_v4_compat:!0,domain_separator_hash:b,message_hash:null!=y?y:""});if(v.success){if((0,p.getChecksumAddress)(e)!==v.payload.address)throw new Error("signature doesnt match the right address");return v.payload.signature}throw new Error((null===(r=v.payload)||void 0===r?void 0:r.error)||"Unknown error")}forgetDevice(){this.accounts=[],this.hdk=new g.default,this.page=0,this.unlockedAccount=0,this.paths={}}setHdPath(e){if(!v[e])throw new Error(`The setHdPath method does not support setting HD Path to ${e}`);this.hdPath!==e&&(this.hdk=new g.default,this.accounts=[],this.page=0,this.perPage=5,this.unlockedAccount=0,this.paths={}),this.hdPath=e}}s.TrezorKeyring=_,a=new WeakSet,n=async function(e){return this.page+=e,this.page<=0&&(this.page=1),new Promise((e,t)=>{this.unlock().then(t=>{const s=(this.page-1)*this.perPage,n=s+this.perPage,r=[];for(let e=s;e<n;e++){const t=l(this,a,"m",o).call(this,"m",e);r.push({address:t,balance:null,index:e}),this.paths[(0,p.getChecksumAddress)(t)]=e}e(r)}).catch(e=>{t(e)})})},r=async function(e,s,n,r){var o,d,u,h;let m;m=P(n)?{to:l(this,a,"m",i).call(this,n.to),value:l(this,a,"m",i).call(this,n.value),data:l(this,a,"m",i).call(this,n.data),chainId:s,nonce:l(this,a,"m",i).call(this,n.nonce),gasLimit:l(this,a,"m",i).call(this,n.gasLimit),gasPrice:l(this,a,"m",i).call(this,n.gasPrice)}:Object.assign(Object.assign({},n.toJSON()),{chainId:s,to:l(this,a,"m",i).call(this,t.from(null!==(d=null===(o=n.to)||void 0===o?void 0:o.bytes)&&void 0!==d?d:[]))});try{const t=await this.unlock();await S("just unlocked"===t?T:0);const s=await this.bridge.ethereumSignTransaction({path:l(this,a,"m",c).call(this,e),transaction:m});if(s.success){const t=r(s.payload),a=(0,p.getChecksumAddress)((0,p.add0x)(t.getSenderAddress().toString("hex")));if(a!==(0,p.getChecksumAddress)(e))throw new Error("signature doesn't match the right address");return t}throw new Error((null===(u=s.payload)||void 0===u?void 0:u.error)||"Unknown error")}catch(e){throw new Error(null!==(h=null==e?void 0:e.toString())&&void 0!==h?h:"Unknown error")}},i=function(e){return(0,p.bytesToHex)(e)},o=function(e,t){const s=this.hdk.derive(`${e}/${t}`),a=(0,p.bytesToHex)((0,h.publicToAddress)(s.publicKey,!0));return(0,h.toChecksumAddress)(a)},c=function(e){const t=(0,p.getChecksumAddress)(e);let s=this.paths[t];if(void 0===s)for(let e=0;e<1e3;e++)if(t===l(this,a,"m",o).call(this,"m",e)){s=e;break}if(void 0===s)throw new Error("Unknown address");return`${this.hdPath}/${s}`},_.type=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/eth-trezor-keyring",file:"node_modules/@metamask/eth-trezor-keyring/dist/trezor-keyring.cjs"}],[183,{"../../../../../shared/constants/app":5244,"./ethereum-chain-utils":185,"@metamask/controller-utils":1224,"@metamask/network-controller":2026,"@metamask/rpc-errors":2224,lodash:4362,"uri-js":5169},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var s=d(t);if(s&&s.has(e))return s.get(e);var a={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&{}.hasOwnProperty.call(e,r)){var i=n?Object.getOwnPropertyDescriptor(e,r):null;i&&(i.get||i.set)?Object.defineProperty(a,r,i):a[r]=e[r]}return a.default=e,s&&s.set(e,a),a}(e("uri-js")),n=e("@metamask/controller-utils"),r=e("@metamask/network-controller"),i=e("@metamask/rpc-errors"),o=e("lodash"),c=e("../../../../../shared/constants/app"),l=e("./ethereum-chain-utils");function d(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,s=new WeakMap;return(d=function(e){return e?s:t})(e)}const u={methodNames:[c.MESSAGE_TYPE.ADD_ETHEREUM_CHAIN],implementation:async function(e,t,s,c,{addNetwork:d,updateNetwork:u,getNetworkConfigurationByChainId:h,setActiveNetwork:m,requestUserApproval:p,getCurrentChainIdForDomain:f,getCaveat:g,requestPermittedChainsPermissionIncrementalForOrigin:b,rejectApprovalRequestsForOrigin:y,setTokenNetworkFilter:w,setEnabledNetworks:v,setEnabledNetworksMultichain:k,getEnabledNetworks:T}){let S;try{S=(0,l.validateAddEthereumChainParams)(e.params[0])}catch(e){return c(e)}const{chainId:P,chainName:_,firstValidBlockExplorerUrl:E,firstValidRPCUrl:C,ticker:A}=S,{origin:M}=e,I=f(M),x=h(P);if(x&&x.chainId===P&&x.nativeCurrency!==A)return c(i.rpcErrors.invalidParams({message:`nativeCurrency.symbol does not match currency symbol for a network the user already has added with the same chainId. Received:\n${A}`}));let O=x,j=null==x?void 0:x.rpcEndpoints.findIndex(({url:e})=>a.equal(e,C)),N=E?null==x?void 0:x.blockExplorerUrls.findIndex(e=>a.equal(e,E)):undefined;const R=!x||j!==x.defaultRpcEndpointIndex||E&&N!==x.defaultBlockExplorerUrlIndex;if(R)try{if(await p({origin:M,type:n.ApprovalType.AddEthereumChain,requestData:{chainId:P,rpcPrefs:{blockExplorerUrl:E},chainName:_,rpcUrl:C,ticker:A}}),x){const e=(0,o.cloneDeep)(x);-1===j&&(e.rpcEndpoints=[...e.rpcEndpoints,{url:C,type:r.RpcEndpointType.Custom,name:_}],j=e.rpcEndpoints.length-1),e.defaultRpcEndpointIndex=j,E&&(-1===N&&(e.blockExplorerUrls=[...e.blockExplorerUrls,E],N=e.blockExplorerUrls.length-1),e.defaultBlockExplorerUrlIndex=N),O=await u(e.chainId,e,I===P?{replacementSelectedRpcEndpointIndex:e.defaultRpcEndpointIndex}:undefined)}else O=await d({blockExplorerUrls:E?[E]:[],defaultBlockExplorerUrlIndex:E?0:undefined,chainId:P,defaultRpcEndpointIndex:0,name:_,nativeCurrency:A,rpcEndpoints:[{url:C,name:_,type:r.RpcEndpointType.Custom}]})}catch(e){return c(e)}const{networkClientId:$}=O.rpcEndpoints[O.defaultRpcEndpointIndex];return(0,l.switchChain)(t,c,P,$,{isAddFlow:!0,autoApprove:R,setActiveNetwork:m,getCaveat:g,requestPermittedChainsPermissionIncrementalForOrigin:b,rejectApprovalRequestsForOrigin:y,setTokenNetworkFilter:w,setEnabledNetworks:v,setEnabledNetworksMultichain:k,getEnabledNetworks:T})},hookNames:{addNetwork:!0,updateNetwork:!0,getNetworkConfigurationByChainId:!0,setActiveNetwork:!0,requestUserApproval:!0,getCurrentChainIdForDomain:!0,getCaveat:!0,requestPermittedChainsPermissionIncrementalForOrigin:!0,rejectApprovalRequestsForOrigin:!0,setTokenNetworkFilter:!0,setEnabledNetworks:!0,setEnabledNetworksMultichain:!0,getEnabledNetworks:!0}};s.default=u}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/add-ethereum-chain.js"}],[184,{"../../../../../shared/constants/app":5244},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const a={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.ETH_ACCOUNTS],implementation:async function(e,t,s,a,{getAccounts:n}){return t.result=n(),a()},hookNames:{getAccounts:!0}};s.default=a}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/eth-accounts.ts"}],[1844,{"./errors.cjs":1845,"./logger.cjs":1847,"./types.cjs":1848,"./utils.cjs":1849,"@metamask/base-controller":1140,"@metamask/snaps-utils":2516},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultGatorPermissionsControllerState=void 0;const h=e("@metamask/base-controller"),m=e("@metamask/snaps-utils"),p=e("./errors.cjs"),f=e("./logger.cjs"),g=e("./types.cjs"),b=e("./utils.cjs"),y="GatorPermissionsController",w={"native-token-stream":{},"native-token-periodic":{},"erc20-token-stream":{},"erc20-token-periodic":{},other:{}},v={isGatorPermissionsEnabled:{persist:!0,anonymous:!1},gatorPermissionsMapSerialized:{persist:!0,anonymous:!1},isFetchingGatorPermissions:{persist:!1,anonymous:!1},gatorPermissionsProviderSnapId:{persist:!1,anonymous:!1}};function k(){return{isGatorPermissionsEnabled:!1,gatorPermissionsMapSerialized:(0,b.serializeGatorPermissionsMap)(w),isFetchingGatorPermissions:!1,gatorPermissionsProviderSnapId:"@metamask/gator-permissions-snap"}}s.getDefaultGatorPermissionsControllerState=k;class T extends h.BaseController{constructor({messenger:e,state:t}){super({name:y,metadata:v,messenger:e,state:{...k(),...t,isFetchingGatorPermissions:!1}}),a.add(this),u(this,a,"m",i).call(this)}get gatorPermissionsMap(){return(0,b.deserializeGatorPermissionsMap)(this.state.gatorPermissionsMapSerialized)}get permissionsProviderSnapId(){return this.state.gatorPermissionsProviderSnapId}async enableGatorPermissions(){u(this,a,"m",r).call(this,!0)}async disableGatorPermissions(){this.update(e=>{e.isGatorPermissionsEnabled=!1,e.gatorPermissionsMapSerialized=(0,b.serializeGatorPermissionsMap)(w)})}async fetchAndUpdateGatorPermissions(){try{u(this,a,"m",n).call(this,!0),u(this,a,"m",o).call(this);const e=await u(this,a,"m",c).call(this,{snapId:this.state.gatorPermissionsProviderSnapId}),t=u(this,a,"m",d).call(this,e);return this.update(e=>{e.gatorPermissionsMapSerialized=(0,b.serializeGatorPermissionsMap)(t)}),t}catch(e){throw(0,f.controllerLog)("Failed to fetch gator permissions",e),new p.GatorPermissionsFetchError({message:"Failed to fetch gator permissions",cause:e})}finally{u(this,a,"m",n).call(this,!1)}}}a=new WeakSet,n=function(e){this.update(t=>{t.isFetchingGatorPermissions=e})},r=function(e){this.update(t=>{t.isGatorPermissionsEnabled=e})},i=function(){this.messagingSystem.registerActionHandler(`${y}:fetchAndUpdateGatorPermissions`,this.fetchAndUpdateGatorPermissions.bind(this)),this.messagingSystem.registerActionHandler(`${y}:enableGatorPermissions`,this.enableGatorPermissions.bind(this)),this.messagingSystem.registerActionHandler(`${y}:disableGatorPermissions`,this.disableGatorPermissions.bind(this))},o=function(){if(!this.state.isGatorPermissionsEnabled)throw new p.GatorPermissionsNotEnabledError},c=async function({snapId:e}){try{return await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:m.HandlerType.OnRpcRequest,request:{jsonrpc:"2.0",method:g.GatorPermissionsSnapRpcMethod.PermissionProviderGetGrantedPermissions}})}catch(e){throw(0,f.controllerLog)("Failed to handle snap request to gator permissions provider",e),new p.GatorPermissionsProviderError({method:g.GatorPermissionsSnapRpcMethod.PermissionProviderGetGrantedPermissions,cause:e})}},l=function(e){const{permissionResponse:t}=e,{rules:s,dependencyInfo:a,signer:n,...r}=t;return{...e,permissionResponse:{...r}}},d=function(e){return e?e.reduce((e,t)=>{const{permissionResponse:s}=t,n=s.permission.type,{chainId:r}=s,i=u(this,a,"m",l).call(this,t);switch(n){case"native-token-stream":case"native-token-periodic":case"erc20-token-stream":case"erc20-token-periodic":e[n][r]||(e[n][r]=[]),e[n][r].push(i);break;default:e.other[r]||(e.other[r]=[]),e.other[r].push(i)}return e},{"native-token-stream":{},"native-token-periodic":{},"erc20-token-stream":{},"erc20-token-periodic":{},other:{}}):w},s.default=T}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/GatorPermissionsController.cjs"}],[1845,{"./types.cjs":1848},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.GatorPermissionsProviderError=s.GatorPermissionsNotEnabledError=s.GatorPermissionsMapSerializationError=s.GatorPermissionsFetchError=s.GatorPermissionsControllerError=void 0;const a=e("./types.cjs");class n extends Error{constructor({cause:e,message:t,code:s}){super(t),this.cause=e,this.code=s}}s.GatorPermissionsControllerError=n;s.GatorPermissionsFetchError=class extends n{constructor({cause:e,message:t}){super({cause:e,message:t,code:a.GatorPermissionsControllerErrorCode.GatorPermissionsFetchError})}};s.GatorPermissionsMapSerializationError=class extends n{constructor({cause:e,message:t,data:s}){super({cause:e,message:t,code:a.GatorPermissionsControllerErrorCode.GatorPermissionsMapSerializationError}),this.data=s}};s.GatorPermissionsNotEnabledError=class extends n{constructor(){super({cause:new Error("Gator permissions are not enabled"),message:"Gator permissions are not enabled",code:a.GatorPermissionsControllerErrorCode.GatorPermissionsNotEnabled})}};s.GatorPermissionsProviderError=class extends n{constructor({cause:e,method:t}){super({cause:e,message:`Failed to handle snap request to gator permissions provider for method ${t}`,code:a.GatorPermissionsControllerErrorCode.GatorPermissionsProviderError})}}}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/errors.cjs"}],[1846,{"./GatorPermissionsController.cjs":1844,"./utils.cjs":1849},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.deserializeGatorPermissionsMap=s.serializeGatorPermissionsMap=s.GatorPermissionsController=void 0;var n=e("./GatorPermissionsController.cjs");Object.defineProperty(s,"GatorPermissionsController",{enumerable:!0,get:function(){return a(n).default}});var r=e("./utils.cjs");Object.defineProperty(s,"serializeGatorPermissionsMap",{enumerable:!0,get:function(){return r.serializeGatorPermissionsMap}}),Object.defineProperty(s,"deserializeGatorPermissionsMap",{enumerable:!0,get:function(){return r.deserializeGatorPermissionsMap}})}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/index.cjs"}],[1847,{"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.utilsLog=s.controllerLog=s.projectLogger=void 0;const a=e("@metamask/utils");Object.defineProperty(s,"createModuleLogger",{enumerable:!0,get:function(){return a.createModuleLogger}}),s.projectLogger=(0,a.createProjectLogger)("gator-permissions-controller"),s.controllerLog=(0,a.createModuleLogger)(s.projectLogger,"GatorPermissionsController"),s.utilsLog=(0,a.createModuleLogger)(s.projectLogger,"utils")}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/logger.cjs"}],[1848,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n;Object.defineProperty(s,"__esModule",{value:!0}),s.GatorPermissionsSnapRpcMethod=s.GatorPermissionsControllerErrorCode=void 0,function(e){e.GatorPermissionsFetchError="gator-permissions-fetch-error",e.GatorPermissionsNotEnabled="gator-permissions-not-enabled",e.GatorPermissionsProviderError="gator-permissions-provider-error",e.GatorPermissionsMapSerializationError="gator-permissions-map-serialization-error"}(a||(s.GatorPermissionsControllerErrorCode=a={})),function(e){e.PermissionProviderGetGrantedPermissions="permissionsProvider_getGrantedPermissions"}(n||(s.GatorPermissionsSnapRpcMethod=n={}))}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/types.cjs"}],[1849,{"./errors.cjs":1845,"./logger.cjs":1847},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.deserializeGatorPermissionsMap=s.serializeGatorPermissionsMap=void 0;const a=e("./errors.cjs"),n=e("./logger.cjs");s.serializeGatorPermissionsMap=function(e){try{return JSON.stringify(e)}catch(t){throw(0,n.utilsLog)("Failed to serialize gator permissions map",t),new a.GatorPermissionsMapSerializationError({cause:t,message:"Failed to serialize gator permissions map",data:e})}},s.deserializeGatorPermissionsMap=function(e){try{return JSON.parse(e)}catch(t){throw(0,n.utilsLog)("Failed to deserialize gator permissions map",t),new a.GatorPermissionsMapSerializationError({cause:t,message:"Failed to deserialize gator permissions map",data:e})}}}}},{package:"@metamask/gator-permissions-controller",file:"node_modules/@metamask/gator-permissions-controller/dist/utils.cjs"}],[185,{"../../../../../shared/constants/app":5244,"../../../../../shared/modules/network.utils":5364,"../../util":237,"@metamask/chain-agnostic-permission":1204,"@metamask/controller-utils":1224,"@metamask/rpc-errors":2224,"@metamask/snaps-utils":2516,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.switchChain=async function(e,t,s,n,{origin:l,isAddFlow:d,isSwitchFlow:u,autoApprove:h,setActiveNetwork:m,getCaveat:p,requestPermittedChainsPermissionIncrementalForOrigin:f,setTokenNetworkFilter:g,setEnabledNetworks:b,getEnabledNetworks:y,rejectApprovalRequestsForOrigin:w,requestUserApproval:v,hasApprovalRequestsForOrigin:k,toNetworkConfiguration:T,fromNetworkConfiguration:S}){try{const P=p({target:r.Caip25EndowmentPermissionName,caveatType:r.Caip25CaveatType});if(P){if((0,r.getPermittedEthChainIds)(P.value).includes(s))null==k||!k()||d||h||await v({origin:l,type:a.ApprovalType.SwitchEthereumChain,requestData:{toNetworkConfiguration:T,fromNetworkConfiguration:S}});else{let e;u&&(e={isSwitchEthereumChain:!0}),await f({chainId:s,autoApprove:h,metadata:e})}}else await f({chainId:s,autoApprove:h});if((0,o.isSnapId)(l)||null==w||w(),await m(n),!(0,o.isSnapId)(l))if(g(s),(0,c.isPrefixedFormattedHexString)(s)){const e=y(i.KnownCaipNamespace.Eip155);Object.keys(e).includes(s)||b([s],i.KnownCaipNamespace.Eip155)}else{const{namespace:e}=(0,i.parseCaipChainId)(s),t=y(e);Object.keys(t).includes(s)||b([s],e)}return e.result=null,t()}catch(e){return t(e)}},s.validateAddEthereumChainParams=function(e){if(!e||"object"!=typeof e)throw n.rpcErrors.invalidParams({message:`Expected single, object parameter. Received:\n${JSON.stringify(e)}`});const{chainId:t,chainName:s,blockExplorerUrls:a,nativeCurrency:r,rpcUrls:i,...o}=e,c=Object.keys(o).filter(e=>!["iconUrls"].includes(e));if(c.length>0)throw n.rpcErrors.invalidParams({message:`Received unexpected keys on object parameter. Unsupported keys:\n${c}`});const h=u(t);if(!i||!Array.isArray(i)||0===i.length)throw n.rpcErrors.invalidParams({message:`Expected an array with at least one valid string HTTPS url 'rpcUrls', Received:\n${i}`});const m=e=>{const t=(0,d.getValidUrl)(e);return null!==t&&("localhost"===t.hostname||"127.0.0.1"===t.hostname||"https:"===t.protocol)},p=i.find(e=>m(e)),f=Array.isArray(a)?a.find(e=>m(e)):null;if(!p)throw n.rpcErrors.invalidParams({message:`Expected an array with at least one valid string HTTPS url 'rpcUrls', Received:\n${i}`});if("string"!=typeof s||!s)throw n.rpcErrors.invalidParams({message:`Expected non-empty string 'chainName'. Received:\n${s}`});const g=s.length>100?s.substring(0,100):s;if(null!==r){if("object"!=typeof r||Array.isArray(r))throw n.rpcErrors.invalidParams({message:`Expected null or object 'nativeCurrency'. Received:\n${r}`});if(18!==r.decimals)throw n.rpcErrors.invalidParams({message:`Expected the number 18 for 'nativeCurrency.decimals' when 'nativeCurrency' is provided. Received: ${r.decimals}`});if(!r.symbol||"string"!=typeof r.symbol)throw n.rpcErrors.invalidParams({message:`Expected a string 'nativeCurrency.symbol'. Received: ${r.symbol}`})}const b=(null==r?void 0:r.symbol)||l.UNKNOWN_TICKER_SYMBOL;if(b!==l.UNKNOWN_TICKER_SYMBOL&&("string"!=typeof b||b.length<1||b.length>6))throw n.rpcErrors.invalidParams({message:`Expected 1-6 character string 'nativeCurrency.symbol'. Received:\n${b}`});return{chainId:h,chainName:g,firstValidBlockExplorerUrl:f,firstValidRPCUrl:p,ticker:b}},s.validateChainId=u,s.validateSwitchEthereumChainParams=function(e){var t;if(null===(t=e.params)||void 0===t||!t[0]||"object"!=typeof e.params[0])throw n.rpcErrors.invalidParams({message:`Expected single, object parameter. Received:\n${JSON.stringify(e.params)}`});const{chainId:s,...a}=e.params[0];if(Object.keys(a).length>0)throw n.rpcErrors.invalidParams({message:`Received unexpected keys on object parameter. Unsupported keys:\n${Object.keys(a)}`});return u(s)};var a=e("@metamask/controller-utils"),n=e("@metamask/rpc-errors"),r=e("@metamask/chain-agnostic-permission"),i=e("@metamask/utils"),o=e("@metamask/snaps-utils"),c=e("../../../../../shared/modules/network.utils"),l=e("../../../../../shared/constants/app"),d=e("../../util");function u(e){const t="string"==typeof e?e.toLowerCase():null;if(!(0,c.isPrefixedFormattedHexString)(t))throw n.rpcErrors.invalidParams({message:`Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${e}`});if(!(0,c.isSafeChainId)(parseInt(e,16)))throw n.rpcErrors.invalidParams({message:`Invalid chain ID "${t}": numerical value greater than max safe value. Received:\n${e}`});return t}}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/ethereum-chain-utils.js"}],[186,{"../../../../../shared/constants/app":5244},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const a={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.GET_PROVIDER_STATE],implementation:async function(e,t,s,a,{getProviderState:n}){var r;const i=null===(r=e.params)||void 0===r?void 0:r.isInitializingStreamProvider;return t.result={...await n(e.origin,{isInitializingStreamProvider:i})},a()},hookNames:{getProviderState:!0}};s.default=a}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/get-provider-state.ts"}],[187,{"./add-ethereum-chain":183,"./eth-accounts":184,"./get-provider-state":186,"./log-web3-shim-usage":188,"./request-accounts":189,"./send-metadata":190,"./switch-ethereum-chain":191,"./watch-asset":195},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.handlers=s.ethAccountsHandler=s.eip1193OnlyHandlers=void 0;var a=u(e("./add-ethereum-chain")),n=u(e("./eth-accounts")),r=u(e("./get-provider-state")),i=u(e("./log-web3-shim-usage")),o=u(e("./request-accounts")),c=u(e("./send-metadata")),l=u(e("./switch-ethereum-chain")),d=u(e("./watch-asset"));function u(e){return e&&e.__esModule?e:{default:e}}s.handlers=[a.default,r.default,i.default,c.default,d.default],s.eip1193OnlyHandlers=[l.default,n.default,o.default],s.ethAccountsHandler=n.default}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/index.ts"}],[188,{"../../../../../shared/constants/app":5244},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const a={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.LOG_WEB3_SHIM_USAGE],implementation:function(e,t,s,a,{getWeb3ShimUsageState:n,setWeb3ShimUsageRecorded:r}){const{origin:i}=e;n(i)===undefined&&r(i);return t.result=!0,a()},hookNames:{getWeb3ShimUsageState:!0,setWeb3ShimUsageRecorded:!0}};s.default=a}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/log-web3-shim-usage.ts"}],[189,{"../../../../../shared/constants/app":5244,"../../../../../shared/constants/metametrics":5259,"../../util":237,"@metamask/rpc-errors":2224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=e("@metamask/rpc-errors"),n=e("../../../../../shared/constants/app"),r=e("../../../../../shared/constants/metametrics"),i=e("../../util");const o={methodNames:[n.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS],implementation:async function(e,t,s,o,{getAccounts:l,sendMetrics:d,metamaskState:u,getCaip25PermissionFromLegacyPermissionsForOrigin:h,requestPermissionsForOrigin:m}){const{origin:p}=e??{};if(c.has(p))return t.error=a.rpcErrors.resourceUnavailable(`Already processing ${n.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS}. Please wait.`),o();let f=l(p);if(f.length>0){try{c.add(p),t.result=f,o()}catch(e){o(e)}finally{c.delete(p)}return undefined}try{const e=h();await m(e)}catch(e){return o(e)}if(f=l(p),(0,i.shouldEmitDappViewedEvent)(u.metaMetricsId)){const e=!Object.keys(u.permissionHistory).includes(p);d({event:r.MetaMetricsEventName.DappViewed,category:r.MetaMetricsEventCategory.InpageProvider,referrer:{url:p},properties:{is_first_visit:e,number_of_accounts:Object.keys(u.accounts).length,number_of_accounts_connected:f.length}},{excludeMetaMetricsId:!0})}return t.result=f,o()},hookNames:{getAccounts:!0,sendMetrics:!0,metamaskState:!0,getCaip25PermissionFromLegacyPermissionsForOrigin:!0,requestPermissionsForOrigin:!0}};s.default=o;const c=new Set}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/request-accounts.ts"}],[19,{"@metamask/assets-controllers":1076},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.DeFiPositionsControllerInit=void 0;var a=e("@metamask/assets-controllers");s.DeFiPositionsControllerInit=({initMessenger:e,controllerMessenger:t,getController:s})=>({controller:new a.DeFiPositionsController({messenger:t,isEnabled:()=>{var t;const a=s("PreferencesController"),{useExternalServices:n}=a.state,r=e.call("RemoteFeatureFlagController:getState"),i=Boolean(null==r||null===(t=r.remoteFeatureFlags)||void 0===t?void 0:t.assetsDefiPositionsEnabled);return n&&i},trackEvent:e.call.bind(e,"MetaMetricsController:trackEvent")})})}}},{package:"$root$",file:"app/scripts/controller-init/defi-positions/defi-positions-controller-init.ts"}],[190,{"../../../../../shared/constants/app":5244,"@metamask/rpc-errors":2224,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=e("@metamask/rpc-errors"),n=e("@metamask/utils");const r={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.SEND_METADATA],implementation:function(e,t,s,r,{addSubjectMetadata:i,subjectType:o}){const{origin:c,params:l}=e;if(!(0,n.isObject)(l))return r(a.rpcErrors.invalidParams({data:l}));{const{icon:e=null,name:t=null,...s}=l;i({...s,iconUrl:e,name:t,subjectType:o,origin:c})}return t.result=!0,r()},hookNames:{addSubjectMetadata:!0,subjectType:!0}};s.default=r}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/send-metadata.ts"}],[191,{"../../../../../shared/constants/app":5244,"./ethereum-chain-utils":185,"@metamask/rpc-errors":2224,"@metamask/snaps-utils":2516},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=e("@metamask/rpc-errors"),n=e("@metamask/snaps-utils"),r=e("../../../../../shared/constants/app"),i=e("./ethereum-chain-utils");const o={methodNames:[r.MESSAGE_TYPE.SWITCH_ETHEREUM_CHAIN],implementation:async function(e,t,s,o,{getNetworkConfigurationByChainId:c,setActiveNetwork:l,requestUserApproval:d,getCaveat:u,getCurrentChainIdForDomain:h,requestPermittedChainsPermissionIncrementalForOrigin:m,rejectApprovalRequestsForOrigin:p,setTokenNetworkFilter:f,setEnabledNetworks:g,setEnabledNetworksMultichain:b,getEnabledNetworks:y,hasApprovalRequestsForOrigin:w}){let v;try{v=(0,i.validateSwitchEthereumChainParams)(e)}catch(e){return o(e)}const{origin:k}=e,T=h(k);if(T===v)return t.result=null,o();const S=c(v),P=null==S?void 0:S.rpcEndpoints[S.defaultRpcEndpointIndex].networkClientId;if(!P)return o(a.providerErrors.custom({code:4902,message:`Unrecognized chain ID "${v}". Try adding the chain using ${r.MESSAGE_TYPE.ADD_ETHEREUM_CHAIN} first.`}));const _=c(T),E=c(v);return(0,i.switchChain)(t,o,v,P,{origin:k,isSwitchFlow:!0,autoApprove:(0,n.isSnapId)(k),setActiveNetwork:l,getCaveat:u,requestPermittedChainsPermissionIncrementalForOrigin:m,rejectApprovalRequestsForOrigin:p,setTokenNetworkFilter:f,setEnabledNetworks:g,setEnabledNetworksMultichain:b,getEnabledNetworks:y,requestUserApproval:d,hasApprovalRequestsForOrigin:w,toNetworkConfiguration:E,fromNetworkConfiguration:_})},hookNames:{getNetworkConfigurationByChainId:!0,setActiveNetwork:!0,requestUserApproval:!0,getCaveat:!0,getCurrentChainIdForDomain:!0,requestPermittedChainsPermissionIncrementalForOrigin:!0,rejectApprovalRequestsForOrigin:!0,setTokenNetworkFilter:!0,setEnabledNetworks:!0,setEnabledNetworksMultichain:!0,getEnabledNetworks:!0,hasApprovalRequestsForOrigin:!0}};s.default=o}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/switch-ethereum-chain.js"}],[192,{"../../../../../shared/constants/permissions":5266,"../../../controllers/permissions":119,"@metamask/chain-agnostic-permission":1204,"@metamask/permission-controller":2090},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getPermissionsHandler=void 0;var a=e("@metamask/permission-controller"),n=e("@metamask/chain-agnostic-permission"),r=e("../../../controllers/permissions"),i=e("../../../../../shared/constants/permissions");s.getPermissionsHandler={methodNames:[a.MethodNames.GetPermissions],implementation:async function(e,t,s,a,{getPermissionsForOrigin:o,getAccounts:c}){var l;const d={...o()},u=d[n.Caip25EndowmentPermissionName],h=null==u||null===(l=u.caveats)||void 0===l||null===(l=l.find(({type:e})=>e===n.Caip25CaveatType))||void 0===l?void 0:l.value;if(delete d[n.Caip25EndowmentPermissionName],h){const e=c();e.length>0&&(d[i.RestrictedMethods.eth_accounts]={...u,parentCapability:i.RestrictedMethods.eth_accounts,caveats:[{type:i.CaveatTypes.restrictReturnedAccounts,value:e}]});const t=(0,n.getPermittedEthChainIds)(h);t.length>0&&(d[r.PermissionNames.permittedChains]={...u,parentCapability:r.PermissionNames.permittedChains,caveats:[{type:i.CaveatTypes.restrictNetworkSwitching,value:t}]})}return t.result=Object.values(d),a()},hookNames:{getPermissionsForOrigin:!0,getAccounts:!0}}}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/wallet-getPermissions.ts"}],[193,{"../../../../../shared/constants/permissions":5266,"../../../controllers/permissions":119,"@metamask/chain-agnostic-permission":1204,"@metamask/controller-utils":1224,"@metamask/permission-controller":2090,lodash:4362},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.requestPermissionsHandler=void 0;var a=e("lodash"),n=e("@metamask/controller-utils"),r=e("@metamask/permission-controller"),i=e("@metamask/chain-agnostic-permission"),o=e("../../../../../shared/constants/permissions"),c=e("../../../controllers/permissions");s.requestPermissionsHandler={methodNames:[r.MethodNames.RequestPermissions],implementation:async function(e,t,s,l,{getAccounts:d,requestPermissionsForOrigin:u,getCaip25PermissionFromLegacyPermissionsForOrigin:h}){const{params:m}=e;if(!Array.isArray(m)||!(0,n.isPlainObject)(m[0]))return l((0,r.invalidParams)({data:{request:e}}));let[p]=m;delete p[i.Caip25EndowmentPermissionName];const f=(0,a.pick)(p,[o.RestrictedMethods.eth_accounts,c.PermissionNames.permittedChains]);delete p[o.RestrictedMethods.eth_accounts],delete p[c.PermissionNames.permittedChains];const g=Object.keys(f).length>0;if(g){const e=h(f);p={...p,...e}}let b={};const[y]=await u(p);if(b={...y},g){var w;const e=b[i.Caip25EndowmentPermissionName];if(!e)throw new Error(`could not find ${i.Caip25EndowmentPermissionName} permission.`);const t=null===(w=e.caveats)||void 0===w||null===(w=w.find(({type:e})=>e===i.Caip25CaveatType))||void 0===w?void 0:w.value;if(!t)throw new Error(`could not find ${i.Caip25CaveatType} in granted ${i.Caip25EndowmentPermissionName} permission.`);delete b[i.Caip25EndowmentPermissionName];const s=d(origin);b[o.RestrictedMethods.eth_accounts]={...e,parentCapability:o.RestrictedMethods.eth_accounts,caveats:[{type:o.CaveatTypes.restrictReturnedAccounts,value:s}]};const a=(0,i.getPermittedEthChainIds)(t);a.length>0&&(b[c.PermissionNames.permittedChains]={...e,parentCapability:c.PermissionNames.permittedChains,caveats:[{type:o.CaveatTypes.restrictNetworkSwitching,value:a}]})}return t.result=Object.values(b).filter(e=>e!==undefined),l()},hookNames:{getAccounts:!0,requestPermissionsForOrigin:!0,getCaip25PermissionFromLegacyPermissionsForOrigin:!0}}}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/wallet-requestPermissions.ts"}],[194,{"../../../../../shared/constants/permissions":5266,"../../../controllers/permissions":119,"@metamask/chain-agnostic-permission":1204,"@metamask/permission-controller":2090,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.revokePermissionsHandler=void 0;var a=e("@metamask/permission-controller"),n=e("@metamask/utils"),r=e("@metamask/chain-agnostic-permission"),i=e("../../../../../shared/constants/permissions"),o=e("../../../controllers/permissions");s.revokePermissionsHandler={methodNames:[a.MethodNames.RevokePermissions],implementation:function(e,t,s,c,{revokePermissionsForOrigin:l,rejectApprovalRequestsForOrigin:d}){const{params:u}=e,h=null==u?void 0:u[0];if(!h)return c((0,a.invalidParams)({data:{request:e}}));const m=Object.keys(h).filter(e=>e!==r.Caip25EndowmentPermissionName);if(!(0,n.isNonEmptyArray)(m))return c((0,a.invalidParams)({data:{request:e}}));const p=[i.RestrictedMethods.eth_accounts,o.PermissionNames.permittedChains],f=m.filter(e=>!p.includes(e));f.length!==m.length&&f.push(r.Caip25EndowmentPermissionName);return l(f),d(),t.result=null,c()},hookNames:{revokePermissionsForOrigin:!0,rejectApprovalRequestsForOrigin:!0,updateCaveat:!0}}}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/wallet-revokePermissions.ts"}],[195,{"../../../../../shared/constants/app":5244,"@metamask/controller-utils":1224,"@metamask/rpc-errors":2224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=e("@metamask/rpc-errors"),n=e("@metamask/controller-utils"),r=e("../../../../../shared/constants/app");const i={methodNames:[r.MESSAGE_TYPE.WATCH_ASSET,r.MESSAGE_TYPE.WATCH_ASSET_LEGACY],implementation:async function(e,t,s,r,{handleWatchAssetRequest:i}){try{const{params:{options:s,type:o},origin:c,networkClientId:l}=e,{tokenId:d}=s;return[n.ERC721,n.ERC1155].includes(o)&&d!==undefined&&"string"!=typeof d?r(a.rpcErrors.invalidParams({message:`Expected parameter 'tokenId' to be type 'string'. Received type '${typeof d}'`})):(await i({asset:s,type:o,origin:c??"",networkClientId:l??""}),t.result=!0,r())}catch(e){return r(e)}},hookNames:{handleWatchAssetRequest:!0}};s.default=i}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/watch-asset.ts"}],[196,{"./createMethodMiddleware":181,"./createUnsupportedMethodMiddleware":182},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0});var a=e("./createMethodMiddleware");Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&(e in s&&s[e]===a[e]||Object.defineProperty(s,e,{enumerable:!0,get:function(){return a[e]}}))});var n=e("./createUnsupportedMethodMiddleware");Object.keys(n).forEach(function(e){"default"!==e&&"__esModule"!==e&&(e in s&&s[e]===n[e]||Object.defineProperty(s,e,{enumerable:!0,get:function(){return n[e]}}))})}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/index.js"}],[1969,{"@metamask/base-controller":1140,events:3902,uuid:5195},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.AbstractMessageManager=void 0;const a=e("@metamask/base-controller"),n=e("events"),r=e("uuid"),i={unapprovedMessages:{persist:!1,anonymous:!1},unapprovedMessagesCount:{persist:!1,anonymous:!1}};class o extends a.BaseController{constructor({additionalFinishStatuses:e,messenger:t,name:s,securityProviderRequest:a,state:r={}}){super({messenger:t,metadata:i,name:s,state:{unapprovedMessages:{},unapprovedMessagesCount:0,...r}}),this.internalEvents=new n.EventEmitter,this.messages=[],this.securityProviderRequest=a,this.additionalFinishStatuses=e??[]}addRequestToMessageParams(e,t){const s={...e};return t&&(s.requestId=t.id,s.origin=t.origin),s}createUnapprovedMessage(e,t,s){return{id:(0,r.v1)(),messageParams:e,securityAlertResponse:s?.securityAlertResponse,status:"unapproved",time:Date.now(),type:t}}saveMessageList(e=!0){this.update(e=>{e.unapprovedMessages=this.getUnapprovedMessages(),e.unapprovedMessagesCount=this.getUnapprovedMessagesCount()}),e&&this.messagingSystem.publish(`${this.name}:updateBadge`)}setMessageStatus(e,t){const s=this.getMessage(e);if(!s)throw new Error(`${this.name}: Message not found for id: ${e}.`);const a={...s,status:t};this.updateMessage(a),this.internalEvents.emit(`${e}:${t}`,a),("rejected"===t||"signed"===t||"errored"===t||this.additionalFinishStatuses.includes(t))&&this.internalEvents.emit(`${e}:finished`,a)}updateMessage(e,t=!0){const s=this.messages.findIndex(t=>e.id===t.id);-1!==s&&(this.messages[s]=e),this.saveMessageList(t)}async securityCheck(e){if(this.securityProviderRequest){const t=await this.securityProviderRequest(e,e.type);return{...e,securityProviderResponse:t}}return e}clearUnapprovedMessages(){this.update(e=>{e.unapprovedMessages={},e.unapprovedMessagesCount=0})}getUnapprovedMessagesCount(){return Object.keys(this.getUnapprovedMessages()).length}getUnapprovedMessages(){return this.messages.filter(e=>"unapproved"===e.status).reduce((e,t)=>(e[t.id]=t,e),{})}async addMessage(e){const t=await this.securityCheck(e);this.messages.push(t),this.saveMessageList()}getMessage(e){return this.messages.find(t=>t.id===e)}getAllMessages(){return this.messages}approveMessage(e){return this.setMessageStatusApproved(e.metamaskId),this.prepMessageForSigning(e)}setMessageStatusApproved(e){this.setMessageStatus(e,"approved")}setMessageStatusInProgress(e){this.setMessageStatus(e,"inProgress")}setMessageStatusSigned(e,t){this.setMessageStatusAndResult(e,t,"signed")}setMessageStatusAndResult(e,t,s){this.setResult(e,t),this.setMessageStatus(e,s)}setResult(e,t){const s=this.getMessage(e);s&&this.updateMessage({...s,rawSig:t},!1)}setMetadata(e,t){const s=this.getMessage(e);if(!s)throw new Error(`${this.name}: Message not found for id: ${e}.`);this.updateMessage({...s,metadata:t},!1)}rejectMessage(e){this.setMessageStatus(e,"rejected")}async waitForFinishStatus(e,t){const{metamaskId:s,...a}=e;return new Promise((e,n)=>{this.internalEvents.once(`${s}:finished`,s=>{switch(s.status){case"signed":return e(s.rawSig);case"rejected":return n(new Error(`MetaMask ${t} Signature: User denied message signature.`));case"errored":return n(new Error(`MetaMask ${t} Signature: ${s.error}`));default:return n(new Error(`MetaMask ${t} Signature: Unknown problem: ${JSON.stringify(a)}`))}})})}}s.AbstractMessageManager=o,s.default=o}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/AbstractMessageManager.cjs"}],[197,{"./operation-safener":174,loglevel:4370,"webextension-polyfill":5227},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getRequestSafeReload=function(e){const t=new r.OperationSafener({op:async t=>{try{await e.set(t)}catch(e){n.default.error("MetaMask - Persistence failed",e),null==o||o.captureException(e)}},wait:1e3});return{update:async(...e)=>t.execute(...e),requestSafeReload:async()=>{await t.evacuate(),a.default.runtime.reload()}}};var a=i(e("webextension-polyfill")),n=i(e("loglevel")),r=e("./operation-safener");function i(e){return e&&e.__esModule?e:{default:e}}const{sentry:o}=global}}},{package:"$root$",file:"app/scripts/lib/safe-reload.ts"}],[1970,{"./AbstractMessageManager.cjs":1969,"./utils.cjs":1974,"@metamask/controller-utils":1224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.DecryptMessageManager=void 0;const a=e("@metamask/controller-utils"),n=e("./AbstractMessageManager.cjs"),r=e("./utils.cjs"),i="DecryptMessageManager";class o extends n.AbstractMessageManager{constructor({additionalFinishStatuses:e,messenger:t,securityProviderRequest:s,state:a}){super({additionalFinishStatuses:e,messenger:t,name:i,securityProviderRequest:s,state:a})}async addUnapprovedMessageAsync(e,t){(0,r.validateDecryptedMessageData)(e);const s=await this.addUnapprovedMessage(e,t);return new Promise((t,a)=>{this.internalEvents.once(`${s}:finished`,s=>{switch(s.status){case"decrypted":return t(s.rawSig);case"rejected":return a(new Error("MetaMask DecryptMessage: User denied message decryption."));case"errored":return a(new Error("MetaMask DecryptMessage: This message cannot be decrypted."));default:return a(new Error(`MetaMask DecryptMessage: Unknown problem: ${JSON.stringify(e)}`))}})})}async addUnapprovedMessage(e,t){const s=this.addRequestToMessageParams(e,t);e.data=(0,r.normalizeMessageData)(e.data);const n=this.createUnapprovedMessage(s,a.ApprovalType.EthDecrypt,t),o=n.id;return await this.addMessage(n),this.messagingSystem.publish(`${i}:unapprovedMessage`,{...s,metamaskId:o}),o}prepMessageForSigning(e){return delete e.metamaskId,Promise.resolve(e)}}s.DecryptMessageManager=o}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/DecryptMessageManager.cjs"}],[1971,{"./AbstractMessageManager.cjs":1969,"./utils.cjs":1974,"@metamask/controller-utils":1224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.EncryptionPublicKeyManager=void 0;const a=e("@metamask/controller-utils"),n=e("./AbstractMessageManager.cjs"),r=e("./utils.cjs");class i extends n.AbstractMessageManager{constructor({additionalFinishStatuses:e,messenger:t,securityProviderRequest:s,state:a}){super({additionalFinishStatuses:e,messenger:t,name:"EncryptionPublicKeyManager",securityProviderRequest:s,state:a})}async addUnapprovedMessageAsync(e,t){(0,r.validateEncryptionPublicKeyMessageData)(e);const s=await this.addUnapprovedMessage(e,t);return new Promise((t,a)=>{this.internalEvents.once(`${s}:finished`,s=>{switch(s.status){case"received":return t(s.rawSig);case"rejected":return a(new Error("MetaMask EncryptionPublicKey: User denied message EncryptionPublicKey."));default:return a(new Error(`MetaMask EncryptionPublicKey: Unknown problem: ${JSON.stringify(e)}`))}})})}async addUnapprovedMessage(e,t){const s=this.addRequestToMessageParams(e,t),n=this.createUnapprovedMessage(s,a.ApprovalType.EthGetEncryptionPublicKey,t),r=n.id;return await this.addMessage(n),this.messagingSystem.publish(`${this.name}:unapprovedMessage`,{...s,metamaskId:r}),r}prepMessageForSigning(e){return delete e.metamaskId,Promise.resolve({from:e.data})}}s.EncryptionPublicKeyManager=i,s.default=i}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/EncryptionPublicKeyManager.cjs"}],[1972,{"./AbstractMessageManager.cjs":1969,"./DecryptMessageManager.cjs":1970,"./EncryptionPublicKeyManager.cjs":1971,"./types.cjs":1973},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./AbstractMessageManager.cjs"),s),n(e("./EncryptionPublicKeyManager.cjs"),s),n(e("./DecryptMessageManager.cjs"),s),n(e("./types.cjs"),s)}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/index.cjs"}],[1973,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/types.cjs"}],[1974,{"@metamask/controller-utils":1224,"@metamask/utils":2632,buffer:3590},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.validateDecryptedMessageData=s.validateEncryptionPublicKeyMessageData=s.normalizeMessageData=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/utils"),r=/^[0-9A-Fa-f]+$/gu;function i(e,t){if(!e||"string"!=typeof e||!(0,a.isValidHexAddress)(e))throw new Error(`Invalid "${t}" address: ${e} must be a valid string.`)}s.normalizeMessageData=function(e){try{const t=(0,n.remove0x)(e);if(t.match(r))return(0,n.add0x)(t)}catch(e){}return(0,n.bytesToHex)(t.from(e,"utf8"))},s.validateEncryptionPublicKeyMessageData=function(e){const{from:t}=e;i(t,"from")},s.validateDecryptedMessageData=function(e){const{from:t}=e;i(t,"from")}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/message-manager",file:"node_modules/@metamask/message-manager/dist/utils.cjs"}],[198,{"../util":237,"@segment/loosely-validate-event":2710,buffer:3590,"is-retry-allowed":4175,lodash:4362,"remove-trailing-slash":4815,timers:3592},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t,a){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var n=l(e("remove-trailing-slash")),r=l(e("@segment/loosely-validate-event")),i=e("lodash"),o=l(e("is-retry-allowed")),c=e("../util");function l(e){return e&&e.__esModule?e:{default:e}}const d=()=>({});s.default=class{constructor(e,t={}){this.writeKey=e,this.host=(0,n.default)(t.host||"https://api.segment.io"),this.flushInterval=t.flushInterval||1e4,this.flushAt=t.flushAt||Math.max(t.flushAt,1)||20,this.queue=[],this.path="/v1/batch",this.maxQueueSize=460800,this.flushed=!1,this.retryCount=3,Object.defineProperty(this,"enable",{configurable:!1,writable:!1,enumerable:!0,value:!0})}_validate(e,t){(0,r.default)(e,t)}_message(e,t,s){return this._validate(t,e),this.enqueue(e,t,s),this}identify(e,t){return this._message("identify",e,t)}track(e,t){return this._message("track",e,t)}page(e,t){return this._message("page",e,t)}enqueue(e,t,s=d){if(!this.enable)return void a(s);const n={...t,type:e};if(n.context={...n.context,library:{name:"analytics-node"}},n.timestamp||(n.timestamp=new Date),n.messageId||(n.messageId=(0,c.generateRandomId)()),n.anonymousId&&!(0,i.isString)(n.anonymousId)&&(n.anonymousId=JSON.stringify(n.anonymousId)),n.userId&&!(0,i.isString)(n.userId)&&(n.userId=JSON.stringify(n.userId)),this.queue.push({message:n,callback:s}),!this.flushed)return this.flushed=!0,void this.flush();const r=this.queue.length>=this.flushAt,o=this.queue.reduce((e,t)=>e+JSON.stringify(t).length,0)>=this.maxQueueSize;(r||o)&&this.flush(),this.flushInterval&&!this.timer&&(this.timer=setTimeout(this.flush.bind(this),this.flushInterval))}flush(e=d){if(!this.enable)return a(e),Promise.resolve();if(this.timer&&(clearTimeout(this.timer),this.timer=null),!this.queue.length)return a(e),Promise.resolve();const s=this.queue.splice(0,this.flushAt),n=s.map(e=>e.callback),r={batch:s.map(e=>e.message),timestamp:new Date,sentAt:new Date},i={Authorization:`Basic ${t.from(this.writeKey,"utf8").toString("base64")}`};return this._sendRequest(`${this.host}${this.path}`,{method:"POST",body:JSON.stringify(r),headers:i},t=>{a(()=>{n.forEach(e=>e(t,r)),e(t,r)})},0)}_retryRequest(e,t,s,a){const n=100*Math.pow(2,a);setTimeout(()=>{this._sendRequest(e,t,s,a+1)},n)}async _sendRequest(e,t,s,a){return fetch(e,t).then(async n=>{if(n.ok)s();else if(this._isErrorRetryable({response:n})&&a<=this.retryCount)this._retryRequest(e,t,s,a);else{const e=new Error(n.statusText);s(e)}}).catch(n=>{this._isErrorRetryable(n)&&a<=this.retryCount?this._retryRequest(e,t,s,a):s(n)})}_isErrorRetryable(e){return!!function(e){return!e.response&&Boolean(e.code)&&"ECONNABORTED"!==e.code&&(0,o.default)(e)}(e)||!!e.response&&(e.response.status>=500&&e.response.status<=599||429===e.response.status)}}}).call(this)}).call(this,e("buffer").Buffer,e("timers").setImmediate)}}},{package:"$root$",file:"app/scripts/lib/segment/analytics.js"}],[1980,{"@metamask/account-api":1024},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},d=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAccountGroup=void 0;const u=e("@metamask/account-api"),h=e("@metamask/account-api");s.MultichainAccountGroup=class{constructor({groupIndex:e,wallet:t,providers:s}){a.set(this,void 0),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l(this,a,(0,h.toMultichainAccountGroupId)(t.id,e),"f"),l(this,r,e,"f"),l(this,n,t,"f"),l(this,i,s,"f"),l(this,o,new Map,"f"),l(this,c,new Map,"f"),this.sync()}sync(){d(this,c,"f").clear();for(const e of d(this,i,"f")){const t=[];for(const s of e.getAccounts())s.options.entropy.id===this.wallet.entropySource&&s.options.entropy.groupIndex===this.groupIndex&&t.push(s.id);d(this,o,"f").set(e,t);for(const s of t)d(this,c,"f").set(s,e)}}get id(){return d(this,a,"f")}get type(){return u.AccountGroupType.MultichainAccount}get wallet(){return d(this,n,"f")}get groupIndex(){return d(this,r,"f")}hasAccounts(){return d(this,c,"f").size>0}getAccounts(){const e=[];for(const[t,s]of d(this,o,"f").entries())for(const a of s){const s=t.getAccount(a);s&&e.push(s)}return e}getAccount(e){const t=d(this,c,"f").get(e);return t?t.getAccount(e):undefined}get(e){return(0,u.selectOne)(this.getAccounts(),e)}select(e){return(0,u.select)(this.getAccounts(),e)}async align(){(await Promise.allSettled(d(this,i,"f").map(e=>{const t=d(this,o,"f").get(e);return t&&0!==t.length?Promise.resolve():e.createAccounts({entropySource:this.wallet.entropySource,groupIndex:this.groupIndex})}))).some(e=>"rejected"===e.status)&&console.warn(`Failed to fully align multichain account group for entropy ID: ${this.wallet.entropySource} and group index: ${this.groupIndex}, some accounts might be missing`)}},a=new WeakMap,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/MultichainAccountGroup.cjs"}],[1981,{"./MultichainAccountWallet.cjs":1982,"./providers/AccountProviderWrapper.cjs":1984,"./providers/EvmAccountProvider.cjs":1986,"./providers/SolAccountProvider.cjs":1988,"@metamask/account-api":1024,"@metamask/keyring-controller":1924},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAccountService=s.serviceName=void 0;const m=e("@metamask/account-api"),p=e("@metamask/keyring-controller"),f=e("./MultichainAccountWallet.cjs"),g=e("./providers/AccountProviderWrapper.cjs"),b=e("./providers/EvmAccountProvider.cjs"),y=e("./providers/SolAccountProvider.cjs");s.serviceName="MultichainAccountService";s.MultichainAccountService=class{constructor({messenger:e,providers:t=[]}){a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),this.name=s.serviceName,u(this,n,e,"f"),u(this,i,new Map,"f"),u(this,o,new Map,"f"),u(this,r,[new b.EvmAccountProvider(h(this,n,"f")),new g.AccountProviderWrapper(h(this,n,"f"),new y.SolAccountProvider(h(this,n,"f"))),...t],"f"),h(this,n,"f").registerActionHandler("MultichainAccountService:getMultichainAccountGroup",(...e)=>this.getMultichainAccountGroup(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:getMultichainAccountGroups",(...e)=>this.getMultichainAccountGroups(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:getMultichainAccountWallet",(...e)=>this.getMultichainAccountWallet(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:getMultichainAccountWallets",(...e)=>this.getMultichainAccountWallets(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:createNextMultichainAccountGroup",(...e)=>this.createNextMultichainAccountGroup(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:createMultichainAccountGroup",(...e)=>this.createMultichainAccountGroup(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:setBasicFunctionality",(...e)=>this.setBasicFunctionality(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:alignWallets",(...e)=>this.alignWallets(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:alignWallet",(...e)=>this.alignWallet(...e)),h(this,n,"f").registerActionHandler("MultichainAccountService:getIsAlignmentInProgress",()=>this.getIsAlignmentInProgress()),h(this,n,"f").subscribe("AccountsController:accountAdded",e=>h(this,a,"m",c).call(this,e)),h(this,n,"f").subscribe("AccountsController:accountRemoved",e=>h(this,a,"m",l).call(this,e))}init(){h(this,i,"f").clear(),h(this,o,"f").clear();const{keyrings:e}=h(this,n,"f").call("KeyringController:getState");for(const t of e)if(t.type===p.KeyringTypes.hd){const e=t.metadata.id,s=new f.MultichainAccountWallet({entropySource:e,providers:h(this,r,"f")});h(this,i,"f").set(s.id,s);for(const e of s.getMultichainAccountGroups())for(const t of e.getAccounts())h(this,o,"f").set(t.id,{wallet:s,group:e})}}getAccountContext(e){return h(this,o,"f").get(e)}getMultichainAccountWallet({entropySource:e}){return h(this,a,"m",d).call(this,e)}getMultichainAccountWallets(){return Array.from(h(this,i,"f").values())}getMultichainAccountGroup({entropySource:e,groupIndex:t}){const s=h(this,a,"m",d).call(this,e).getMultichainAccountGroup(t);if(!s)throw new Error(`No multichain account for index: ${t}`);return s}getMultichainAccountGroups({entropySource:e}){return h(this,a,"m",d).call(this,e).getMultichainAccountGroups()}async createNextMultichainAccountGroup({entropySource:e}){return await h(this,a,"m",d).call(this,e).createNextMultichainAccountGroup()}async createMultichainAccountGroup({groupIndex:e,entropySource:t}){return await h(this,a,"m",d).call(this,t).createMultichainAccountGroup(e)}async setBasicFunctionality(e){for(const t of h(this,r,"f"))(0,g.isAccountProviderWrapper)(t)&&t.setEnabled(e);e&&await this.alignWallets()}getIsAlignmentInProgress(){return Array.from(h(this,i,"f").values()).some(e=>e.getIsAlignmentInProgress())}async alignWallets(){const e=this.getMultichainAccountWallets();await Promise.all(e.map(e=>e.alignGroups()))}async alignWallet(e){const t=this.getMultichainAccountWallet({entropySource:e});await t.alignGroups()}},n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){if(!(0,m.isBip44Account)(e))return;let t=!0,s=h(this,i,"f").get((0,m.toMultichainAccountWalletId)(e.options.entropy.id));s||(s=new f.MultichainAccountWallet({entropySource:e.options.entropy.id,providers:h(this,r,"f")}),h(this,i,"f").set(s.id,s),t=!1);let a=s.getMultichainAccountGroup(e.options.entropy.groupIndex);a||(t&&s.sync(),a=s.getMultichainAccountGroup(e.options.entropy.groupIndex),t=!1),a&&(t&&a.sync(),h(this,o,"f").set(e.id,{wallet:s,group:a}))},l=function(e){const t=h(this,o,"f").get(e);if(t){const{wallet:e}=t;e.sync()}h(this,o,"f").delete(e)},d=function(e){const t=h(this,i,"f").get((0,m.toMultichainAccountWalletId)(e));if(!t)throw new Error("Unknown wallet, no wallet matching this entropy source");return t}}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/MultichainAccountService.cjs"}],[1982,{"./MultichainAccountGroup.cjs":1980,"@metamask/account-api":1024},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAccountWallet=void 0;const d=e("@metamask/account-api"),u=e("@metamask/account-api"),h=e("@metamask/account-api"),m=e("./MultichainAccountGroup.cjs");s.MultichainAccountWallet=class{constructor({providers:e,entropySource:t}){a.set(this,void 0),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,!1),c(this,a,(0,d.toMultichainAccountWalletId)(t),"f"),c(this,n,e,"f"),c(this,r,t,"f"),c(this,i,new Map,"f"),this.sync()}sync(){for(const e of l(this,n,"f"))for(const t of e.getAccounts()){const{entropy:e}=t.options;if(e.id!==this.entropySource)continue;let s=l(this,i,"f").get(e.groupIndex);s||(s=new m.MultichainAccountGroup({groupIndex:e.groupIndex,wallet:this,providers:l(this,n,"f")}),l(this,i,"f").set(e.groupIndex,s))}for(const[e,t]of l(this,i,"f").entries())t.sync(),t.hasAccounts()||l(this,i,"f").delete(e)}get id(){return l(this,a,"f")}get type(){return h.AccountWalletType.Entropy}get entropySource(){return l(this,r,"f")}getAccountGroup(e){if(e===(0,u.toDefaultAccountGroupId)(this.id))return l(this,i,"f").get(0);if(!(0,d.isMultichainAccountGroupId)(e))return undefined;const t=(0,d.getGroupIndexFromMultichainAccountGroupId)(e);return l(this,i,"f").get(t)}getAccountGroups(){return this.getMultichainAccountGroups()}getMultichainAccountGroup(e){return l(this,i,"f").get(e)}getMultichainAccountGroups(){return Array.from(l(this,i,"f").values())}getNextGroupIndex(){return Math.max(-1,...l(this,i,"f").keys())+1}async createMultichainAccountGroup(e){const t=this.getNextGroupIndex();if(e>t)throw new Error(`You cannot use a group index that is higher than the next available one: expected <=${t}, got ${e}`);let s=this.getMultichainAccountGroup(e);if(s)return s.sync(),s;const a=await Promise.allSettled(l(this,n,"f").map(t=>t.createAccounts({entropySource:l(this,r,"f"),groupIndex:e})));if(a.some(e=>"rejected"===e.status)){const t=`Unable to create multichain account group for index: ${e}`;let s=`${t}:`;for(const e of a)"rejected"===e.status&&(s+=`\n- ${e.reason}`);throw console.warn(s),new Error(t)}return s=this.getMultichainAccountGroup(e),s||(s=new m.MultichainAccountGroup({wallet:this,providers:l(this,n,"f"),groupIndex:e})),l(this,i,"f").set(e,s),s}async createNextMultichainAccountGroup(){return this.createMultichainAccountGroup(this.getNextGroupIndex())}getIsAlignmentInProgress(){return l(this,o,"f")}async alignGroups(){if(!l(this,o,"f")){c(this,o,!0,"f");try{const e=this.getMultichainAccountGroups();await Promise.all(e.map(e=>e.align()))}finally{c(this,o,!1,"f")}}}async alignGroup(e){if(!l(this,o,"f")){c(this,o,!0,"f");try{const t=this.getMultichainAccountGroup(e);t&&await t.align()}finally{c(this,o,!1,"f")}}}},a=new WeakMap,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/MultichainAccountWallet.cjs"}],[1983,{"./MultichainAccountGroup.cjs":1980,"./MultichainAccountService.cjs":1981,"./MultichainAccountWallet.cjs":1982,"./providers/index.cjs":1989},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAccountService=s.MultichainAccountGroup=s.MultichainAccountWallet=s.SnapAccountProvider=s.BaseBip44AccountProvider=s.AccountProviderWrapper=void 0;var a=e("./providers/index.cjs");Object.defineProperty(s,"AccountProviderWrapper",{enumerable:!0,get:function(){return a.AccountProviderWrapper}}),Object.defineProperty(s,"BaseBip44AccountProvider",{enumerable:!0,get:function(){return a.BaseBip44AccountProvider}}),Object.defineProperty(s,"SnapAccountProvider",{enumerable:!0,get:function(){return a.SnapAccountProvider}});var n=e("./MultichainAccountWallet.cjs");Object.defineProperty(s,"MultichainAccountWallet",{enumerable:!0,get:function(){return n.MultichainAccountWallet}});var r=e("./MultichainAccountGroup.cjs");Object.defineProperty(s,"MultichainAccountGroup",{enumerable:!0,get:function(){return r.MultichainAccountGroup}});var i=e("./MultichainAccountService.cjs");Object.defineProperty(s,"MultichainAccountService",{enumerable:!0,get:function(){return i.MultichainAccountService}})}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/index.cjs"}],[1984,{"./BaseBip44AccountProvider.cjs":1985},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isAccountProviderWrapper=s.AccountProviderWrapper=void 0;const a=e("./BaseBip44AccountProvider.cjs");class n extends a.BaseBip44AccountProvider{constructor(e,t){super(e),this.isEnabled=!0,this.provider=t}setEnabled(e){this.isEnabled=e}getAccounts(){return this.isEnabled?this.provider.getAccounts():[]}getAccount(e){if(!this.isEnabled)throw new Error("Provider is disabled");return this.provider.getAccount(e)}isAccountCompatible(e){return this.provider.isAccountCompatible(e)}async createAccounts(e){return this.isEnabled?this.provider.createAccounts(e):[]}async discoverAndCreateAccounts(e){return this.isEnabled?this.provider.discoverAndCreateAccounts(e):[]}}s.AccountProviderWrapper=n,s.isAccountProviderWrapper=function(e){return e instanceof n}}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/AccountProviderWrapper.cjs"}],[1985,{"@metamask/account-api":1024},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BaseBip44AccountProvider=s.assertAreBip44Accounts=s.assertIsBip44Account=void 0;const i=e("@metamask/account-api");function o(e){if(!(0,i.isBip44Account)(e))throw new Error("Created account is not BIP-44 compatible")}s.assertIsBip44Account=o,s.assertAreBip44Accounts=function(e){e.forEach(o)};s.BaseBip44AccountProvider=class{constructor(e){a.add(this),this.messenger=e}getAccounts(){return r(this,a,"m",n).call(this)}getAccount(e){const[t]=r(this,a,"m",n).call(this,t=>t.id===e);if(!t)throw new Error(`Unable to find account: ${e}`);return t}async withKeyring(e,t){return await this.messenger.call("KeyringController:withKeyring",e,({keyring:e,metadata:s})=>t({keyring:e,metadata:s}))}},a=new WeakSet,n=function(e=()=>!0){const t=[];for(const s of this.messenger.call("AccountsController:listMultichainAccounts"))(0,i.isBip44Account)(s)&&this.isAccountCompatible(s)&&e(s)&&t.push(s);return t}}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/BaseBip44AccountProvider.cjs"}],[1986,{"./BaseBip44AccountProvider.cjs":1985,"@metamask/keyring-api":1914,"@metamask/keyring-controller":1924},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.EvmAccountProvider=void 0;const a=e("@metamask/keyring-api"),n=e("@metamask/keyring-controller"),r=e("./BaseBip44AccountProvider.cjs");class i extends r.BaseBip44AccountProvider{isAccountCompatible(e){return e.type===a.EthAccountType.Eoa&&e.metadata.keyring.type===n.KeyringTypes.hd}async createAccounts({entropySource:e,groupIndex:t}){const[s]=await this.withKeyring({id:e},async({keyring:e})=>{const s=await e.getAccounts();if(t<s.length)return[s[t]];if(t!==s.length)throw new Error("Trying to create too many accounts");return await e.addAccounts(1)}),a=this.messenger.call("AccountsController:getAccountByAddress",s);!function(e){if(!e)throw new Error("Internal account does not exist")}(a);const n=[a];return(0,r.assertAreBip44Accounts)(n),n}async discoverAndCreateAccounts(e){return[]}}s.EvmAccountProvider=i}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/EvmAccountProvider.cjs"}],[1987,{"./BaseBip44AccountProvider.cjs":1985,"@metamask/keyring-controller":1924},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isSnapAccountProvider=s.SnapAccountProvider=void 0;const a=e("@metamask/keyring-controller"),n=e("./BaseBip44AccountProvider.cjs");class r extends n.BaseBip44AccountProvider{constructor(e,t){super(t),this.snapId=e}async getRestrictedSnapAccountCreator(){const e=await this.withKeyring({type:a.KeyringTypes.snap},async({keyring:e})=>e.createAccount.bind(e));return t=>e(this.snapId,t,{displayAccountNameSuggestion:!1,displayConfirmation:!1,setSelectedAccount:!1})}}s.SnapAccountProvider=r;s.isSnapAccountProvider=e=>e instanceof r}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/SnapAccountProvider.cjs"}],[1988,{"./BaseBip44AccountProvider.cjs":1985,"./SnapAccountProvider.cjs":1987,"@metamask/keyring-api":1914,"@metamask/keyring-controller":1924},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SolAccountProvider=void 0;const a=e("@metamask/keyring-api"),n=e("@metamask/keyring-controller"),r=e("./BaseBip44AccountProvider.cjs"),i=e("./SnapAccountProvider.cjs");class o extends i.SnapAccountProvider{constructor(e){super(o.SOLANA_SNAP_ID,e)}isAccountCompatible(e){return e.type===a.SolAccountType.DataAccount&&e.metadata.keyring.type===n.KeyringTypes.snap}async createAccounts({entropySource:e,groupIndex:t}){const s=await this.getRestrictedSnapAccountCreator(),n=`m/44'/501'/${t}'/0'`,i=await s({entropySource:e,derivationPath:n});i.options.entropy={type:a.KeyringAccountEntropyTypeOption.Mnemonic,id:e,groupIndex:t,derivationPath:n};const o=[i];return(0,r.assertAreBip44Accounts)(o),o}async discoverAndCreateAccounts(e){return[]}}s.SolAccountProvider=o,o.SOLANA_SNAP_ID="npm:@metamask/solana-wallet-snap"}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/SolAccountProvider.cjs"}],[1989,{"./AccountProviderWrapper.cjs":1984,"./BaseBip44AccountProvider.cjs":1985,"./EvmAccountProvider.cjs":1986,"./SnapAccountProvider.cjs":1987,"./SolAccountProvider.cjs":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./BaseBip44AccountProvider.cjs"),s),n(e("./SnapAccountProvider.cjs"),s),n(e("./AccountProviderWrapper.cjs"),s),n(e("./SolAccountProvider.cjs"),s),n(e("./EvmAccountProvider.cjs"),s)}}},{package:"@metamask/multichain-account-service",file:"node_modules/@metamask/multichain-account-service/dist/providers/index.cjs"}],[199,{"../../../../shared/constants/time":5277,"./analytics":198},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.segment=s.createSegmentMock=void 0;var a,n=e("../../../../shared/constants/time"),r=(a=e("./analytics"))&&a.__esModule?a:{default:a};const i="XdGJ17zKf3NjBPCDQ2UDjJjkx6FYBMGP",o=undefined,c=5*n.SECOND,l=(e=o)=>{const t={queue:[],flush(){t.queue.forEach(([e,t])=>{t()}),t.queue=[]},track(s,a=()=>undefined){t.queue.push([s,a]),t.queue.length>=e&&t.flush()},page(){},identify(){}};return t};s.createSegmentMock=l;s.segment=i?new r.default(i,{host:null,flushAt:o,flushInterval:c}):l(o)}}},{package:"$root$",file:"app/scripts/lib/segment/index.js"}],[1990,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainApiNotifications=void 0,function(e){e.sessionChanged="wallet_sessionChanged",e.walletNotify="wallet_notify"}(a||(s.MultichainApiNotifications=a={}))}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/handlers/types.cjs"}],[1991,{"@metamask/chain-agnostic-permission":1204,"@metamask/controller-utils":1224,"@metamask/permission-controller":2090,"@metamask/rpc-errors":2224,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.walletCreateSession=void 0;const a=e("@metamask/chain-agnostic-permission"),n=e("@metamask/controller-utils"),r=e("@metamask/permission-controller"),i=e("@metamask/rpc-errors"),o=e("@metamask/utils");s.walletCreateSession={methodNames:["wallet_createSession"],implementation:async function(e,t,s,c,l){if(!(0,o.isPlainObject)(e.params))return c((0,r.invalidParams)({data:{request:e}}));const{requiredScopes:d,optionalScopes:u,sessionProperties:h}=e.params;if(h&&0===Object.keys(h).length)return c(new i.JsonRpcError(5302,"Invalid sessionProperties requested"));const m=Object.fromEntries(Object.entries(h??{}).filter(([e])=>(0,a.isKnownSessionPropertyValue)(e)));try{const{normalizedRequiredScopes:e,normalizedOptionalScopes:s}=(0,a.validateAndNormalizeScopes)(d||{},u||{}),r=(0,a.getSupportedScopeObjects)(e,{getNonEvmSupportedMethods:l.getNonEvmSupportedMethods}),h=(0,a.getSupportedScopeObjects)(s,{getNonEvmSupportedMethods:l.getNonEvmSupportedMethods}),p=e=>{try{return l.findNetworkClientIdByChainId(e),!0}catch{return!1}},f=(0,a.isNamespaceInScopesObject)(r,o.KnownCaipNamespace.Solana)||(0,a.isNamespaceInScopesObject)(h,o.KnownCaipNamespace.Solana);let g=!1;if(f){g=0===l.getNonEvmAccountAddresses("solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp").length}const{supportedScopes:b}=(0,a.bucketScopes)(r,{isEvmChainIdSupported:p,isEvmChainIdSupportable:()=>!1,getNonEvmSupportedMethods:l.getNonEvmSupportedMethods,isNonEvmScopeSupported:l.isNonEvmScopeSupported}),{supportedScopes:y}=(0,a.bucketScopes)(h,{isEvmChainIdSupported:p,isEvmChainIdSupportable:()=>!1,getNonEvmSupportedMethods:l.getNonEvmSupportedMethods,isNonEvmScopeSupported:l.isNonEvmScopeSupported}),w=(0,a.getCaipAccountIdsFromScopesObjects)([b,y]),v=(0,a.getAllScopesFromScopesObjects)([b,y]),k=l.listAccounts().map(e=>e.address),T=w.filter(e=>{const{address:t,chain:{namespace:s},chainId:a}=(0,o.parseCaipAccountId)(e);return s===o.KnownCaipNamespace.Eip155.toString()?k.some(e=>(0,n.isEqualCaseInsensitive)(t,e)):l.getNonEvmAccountAddresses(a).some(t=>e===t)}),S={requiredScopes:(0,a.getInternalScopesObject)(b),optionalScopes:(0,a.getInternalScopesObject)(y),isMultichainOrigin:!0,sessionProperties:m},P=(0,a.setNonSCACaipAccountIdsInCaip25CaveatValue)(S,T);if(0===v.length){if(!g)return c(new i.JsonRpcError(5100,"Requested scopes are not supported"));P.optionalScopes[o.KnownCaipNamespace.Wallet]={accounts:[]}}const[_]=await l.requestPermissionsForOrigin({[a.Caip25EndowmentPermissionName]:{caveats:[{type:a.Caip25CaveatType,value:P}]}},{metadata:{promptToCreateSolanaAccount:g}}),E=_[a.Caip25EndowmentPermissionName],C=E?.caveats?.find(e=>e.type===a.Caip25CaveatType)?.value;if(!C)throw i.rpcErrors.internal();const A=(0,a.getSessionScopes)(C,{getNonEvmSupportedMethods:l.getNonEvmSupportedMethods}),{sessionProperties:M={}}=C;return l.trackSessionCreatedEvent?.(C),t.result={sessionScopes:A,sessionProperties:M},c()}catch(e){return c(e)}},hookNames:{findNetworkClientIdByChainId:!0,listAccounts:!0,requestPermissionsForOrigin:!0,getNonEvmSupportedMethods:!0,isNonEvmScopeSupported:!0,getNonEvmAccountAddresses:!0,trackSessionCreatedEvent:!0}}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/handlers/wallet-createSession.cjs"}],[1992,{"@metamask/chain-agnostic-permission":1204},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.walletGetSession=void 0;const a=e("@metamask/chain-agnostic-permission");s.walletGetSession={methodNames:["wallet_getSession"],implementation:async function(e,t,s,n,r){let i;try{i=r.getCaveatForOrigin(a.Caip25EndowmentPermissionName,a.Caip25CaveatType)}catch{}return i?(t.result={sessionScopes:(0,a.getSessionScopes)(i.value,{getNonEvmSupportedMethods:r.getNonEvmSupportedMethods})},n()):(t.result={sessionScopes:{}},n())},hookNames:{getCaveatForOrigin:!0,getNonEvmSupportedMethods:!0}}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/handlers/wallet-getSession.cjs"}],[1993,{"@metamask/chain-agnostic-permission":1204,"@metamask/rpc-errors":2224,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.walletInvokeMethod=void 0;const a=e("@metamask/chain-agnostic-permission"),n=e("@metamask/rpc-errors"),r=e("@metamask/utils");s.walletInvokeMethod={methodNames:["wallet_invokeMethod"],implementation:async function(e,t,s,i,o){const{scope:c,request:l}=e.params;let d;(0,a.assertIsInternalScopeString)(c);try{d=o.getCaveatForOrigin(a.Caip25EndowmentPermissionName,a.Caip25CaveatType)}catch{}if(!d?.value?.isMultichainOrigin)return i(n.providerErrors.unauthorized());const u=(0,a.getSessionScopes)(d.value,{getNonEvmSupportedMethods:o.getNonEvmSupportedMethods})[c];if(!u?.methods?.includes(l.method))return i(n.providerErrors.unauthorized());const{namespace:h,reference:m}=(0,a.parseScopeString)(c),p=h===r.KnownCaipNamespace.Wallet&&(!m||m===r.KnownCaipNamespace.Eip155)||h===r.KnownCaipNamespace.Eip155,f={...e,scope:c,method:l.method,params:l.params};if(p){let t;return h===r.KnownCaipNamespace.Wallet?t=o.getSelectedNetworkClientId():h===r.KnownCaipNamespace.Eip155&&m&&(t=o.findNetworkClientIdByChainId((0,r.numberToHex)(parseInt(m,10)))),t?(Object.assign(e,{...f,networkClientId:t}),s()):(console.error("failed to resolve network client for wallet_invokeMethod",e),i(n.rpcErrors.internal()))}try{t.result=await o.handleNonEvmRequestForOrigin({connectedAddresses:u.accounts,scope:c,request:f})}catch(e){return i(e)}return i()},hookNames:{getCaveatForOrigin:!0,findNetworkClientIdByChainId:!0,getSelectedNetworkClientId:!0,getNonEvmSupportedMethods:!0,handleNonEvmRequestForOrigin:!0}}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/handlers/wallet-invokeMethod.cjs"}],[1994,{"@metamask/chain-agnostic-permission":1204,"@metamask/permission-controller":2090,"@metamask/rpc-errors":2224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.walletRevokeSession=void 0;const a=e("@metamask/chain-agnostic-permission"),n=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors");s.walletRevokeSession={methodNames:["wallet_revokeSession"],implementation:async function(e,t,s,i,o){try{o.revokePermissionForOrigin(a.Caip25EndowmentPermissionName)}catch(e){if(!(e instanceof n.UnrecognizedSubjectError||e instanceof n.PermissionDoesNotExistError))return console.error(e),i(r.rpcErrors.internal())}return t.result=!0,i()},hookNames:{revokePermissionForOrigin:!0}}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/handlers/wallet-revokeSession.cjs"}],[1995,{"./handlers/types.cjs":1990,"./handlers/wallet-createSession.cjs":1991,"./handlers/wallet-getSession.cjs":1992,"./handlers/wallet-invokeMethod.cjs":1993,"./handlers/wallet-revokeSession.cjs":1994,"./middlewares/MultichainMiddlewareManager.cjs":1996,"./middlewares/MultichainSubscriptionManager.cjs":1997,"./middlewares/multichainMethodCallValidatorMiddleware.cjs":1998},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainApiNotifications=s.MultichainSubscriptionManager=s.MultichainMiddlewareManager=s.multichainMethodCallValidatorMiddleware=s.walletRevokeSession=s.walletInvokeMethod=s.walletGetSession=s.walletCreateSession=void 0;var a=e("./handlers/wallet-createSession.cjs");Object.defineProperty(s,"walletCreateSession",{enumerable:!0,get:function(){return a.walletCreateSession}});var n=e("./handlers/wallet-getSession.cjs");Object.defineProperty(s,"walletGetSession",{enumerable:!0,get:function(){return n.walletGetSession}});var r=e("./handlers/wallet-invokeMethod.cjs");Object.defineProperty(s,"walletInvokeMethod",{enumerable:!0,get:function(){return r.walletInvokeMethod}});var i=e("./handlers/wallet-revokeSession.cjs");Object.defineProperty(s,"walletRevokeSession",{enumerable:!0,get:function(){return i.walletRevokeSession}});var o=e("./middlewares/multichainMethodCallValidatorMiddleware.cjs");Object.defineProperty(s,"multichainMethodCallValidatorMiddleware",{enumerable:!0,get:function(){return o.multichainMethodCallValidatorMiddleware}});var c=e("./middlewares/MultichainMiddlewareManager.cjs");Object.defineProperty(s,"MultichainMiddlewareManager",{enumerable:!0,get:function(){return c.MultichainMiddlewareManager}});var l=e("./middlewares/MultichainSubscriptionManager.cjs");Object.defineProperty(s,"MultichainSubscriptionManager",{enumerable:!0,get:function(){return l.MultichainSubscriptionManager}});var d=e("./handlers/types.cjs");Object.defineProperty(s,"MultichainApiNotifications",{enumerable:!0,get:function(){return d.MultichainApiNotifications}})}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/index.cjs"}],[1996,{"@metamask/rpc-errors":2224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},l=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainMiddlewareManager=void 0;const d=e("@metamask/rpc-errors"),u=["eth_subscribe","eth_unsubscribe"];s.MultichainMiddlewareManager=class{constructor(){a.add(this),n.set(this,[])}addMiddleware(e){const{scope:t,origin:s,tabId:i}=e;c(this,a,"m",r).call(this,{scope:t,origin:s,tabId:i})||c(this,n,"f").push(e)}removeMiddlewareByScope(e){c(this,n,"f").forEach(t=>{t.scope===e&&c(this,a,"m",o).call(this,t)})}removeMiddlewareByScopeAndOrigin(e,t){c(this,n,"f").forEach(s=>{s.scope===e&&s.origin===t&&c(this,a,"m",o).call(this,s)})}removeMiddlewareByOriginAndTabId(e,t){c(this,n,"f").forEach(s=>{s.origin===e&&s.tabId===t&&c(this,a,"m",o).call(this,s)})}generateMultichainMiddlewareForOriginAndTabId(e,t){const s=(s,n,i,o)=>{const{scope:l}=s,h=c(this,a,"m",r).call(this,{scope:l,origin:e,tabId:t});return u.includes(s.method)?h?(h.middleware(s,n,i,o),undefined):o(d.rpcErrors.methodNotFound()):i()};return s.destroy=this.removeMiddlewareByOriginAndTabId.bind(this,e,t),s}},n=new WeakMap,a=new WeakSet,r=function({scope:e,origin:t,tabId:s}){return c(this,n,"f").find(a=>a.scope===e&&a.origin===t&&a.tabId===s)},i=function({scope:e,origin:t,tabId:s}){l(this,n,c(this,n,"f").filter(a=>a.scope!==e||a.origin!==t||a.tabId!==s),"f")},o=function(e){Promise.resolve(e.middleware.destroy?.()).catch(()=>{}),c(this,a,"m",i).call(this,e)}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/middlewares/MultichainMiddlewareManager.cjs"}],[1997,{"../handlers/types.cjs":1990,"@metamask/controller-utils":1224,"@metamask/eth-json-rpc-filters/subscriptionManager.js":1634,"@metamask/safe-event-emitter":2226,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainSubscriptionManager=void 0;const m=e("@metamask/controller-utils"),p=h(e("@metamask/eth-json-rpc-filters/subscriptionManager.js")),f=h(e("@metamask/safe-event-emitter")),g=e("@metamask/utils"),b=e("../handlers/types.cjs");class y extends f.default{constructor(e){super(),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,[]),d(this,n,e.findNetworkClientIdByChainId,"f"),d(this,r,e.getNetworkClientById,"f")}notify({scope:e,origin:t,tabId:s},{method:a,params:n}){this.emit("notification",t,s,{method:b.MultichainApiNotifications.walletNotify,params:{scope:e,notification:{method:a,params:n}}})}subscribe(e){const t=u(this,a,"m",o).call(this,e);if(t)return t.subscriptionManager;const s=u(this,n,"f").call(this,(0,m.toHex)((0,g.parseCaipChainId)(e.scope).reference)),c=u(this,r,"f").call(this,s),d=(0,p.default)({blockTracker:c.blockTracker,provider:c.provider});d.events.on("notification",t=>{this.notify(e,t)});const h={...e,subscriptionManager:d};return d.destroy=d.middleware.destroy,d.middleware.destroy=u(this,a,"m",l).bind(this,h),u(this,i,"f").push(h),d}unsubscribeByScope(e){u(this,i,"f").forEach(t=>{t.scope===e&&u(this,a,"m",l).call(this,t)})}unsubscribeByScopeAndOrigin(e,t){u(this,i,"f").forEach(s=>{s.scope===e&&s.origin===t&&u(this,a,"m",l).call(this,s)})}unsubscribeByOriginAndTabId(e,t){u(this,i,"f").forEach(s=>{s.origin===e&&s.tabId===t&&u(this,a,"m",l).call(this,s)})}}s.MultichainSubscriptionManager=y,n=new WeakMap,r=new WeakMap,i=new WeakMap,a=new WeakSet,o=function({scope:e,origin:t,tabId:s}){return u(this,i,"f").find(a=>a.scope===e&&a.origin===t&&a.tabId===s)},c=function({scope:e,origin:t,tabId:s}){d(this,i,u(this,i,"f").filter(a=>a.scope!==e||a.origin!==t||a.tabId!==s),"f")},l=function(e){e.subscriptionManager.destroy?.(),u(this,a,"m",c).call(this,e)}}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/middlewares/MultichainSubscriptionManager.cjs"}],[1998,{"@metamask/api-specs":2001,"@metamask/json-rpc-engine":1863,"@metamask/rpc-errors":2224,"@metamask/utils":2632,"@open-rpc/schema-utils-js/build/dereference-document.js":2690,"@open-rpc/schema-utils-js/build/parse-open-rpc-document.js":2691,jsonschema:4197},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.multichainMethodCallValidatorMiddleware=void 0;const n=e("@metamask/api-specs"),r=e("@metamask/json-rpc-engine"),i=e("@metamask/rpc-errors"),o=e("@metamask/utils"),c=a(e("@open-rpc/schema-utils-js/build/dereference-document.js")),l=e("@open-rpc/schema-utils-js/build/parse-open-rpc-document.js"),d=e("jsonschema"),u=(e,t,s)=>{const a=`${t.name}${e.path.length>0?`.${e.path.join(".")}`:""} ${e.message}`;return i.rpcErrors.invalidParams({message:a,data:{param:t.name,path:e.path,schema:e.schema,got:s}})},h=new d.Validator,m=(0,c.default)(n.MultiChainOpenRPCDocument,(0,l.makeCustomResolver)({}));s.multichainMethodCallValidatorMiddleware=(0,r.createAsyncMiddleware)(async(e,t,s)=>{const a=await(async(e,t)=>{const s=(await m).methods.find(t=>t.name===e);if(!s||!(0,o.isObject)(s)||!("params"in s))return[i.rpcErrors.methodNotFound({data:{method:e}})];const a=[];for(const e of s.params){if(!(0,o.isObject)(t))return[i.rpcErrors.invalidParams()];const s=e,n=t[s.name],r=h.validate(n,s.schema,{required:s.required});r.errors&&a.push(...r.errors.map(e=>u(e,s,n)))}return a})(e.method,e.params);if(a.length>0)throw i.rpcErrors.invalidParams({data:a});return await s()})}}},{package:"@metamask/multichain-api-middleware",file:"node_modules/@metamask/multichain-api-middleware/dist/middlewares/multichainMethodCallValidatorMiddleware.cjs"}],[1999,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={openrpc:"1.2.4",info:{title:"MetaMask MultiChain API",version:"1.0.0",description:"This provides the specs for the MultiChain API Layer for the MetaMask API"},methods:[{name:"wallet_notify",paramStructure:"by-name",params:[{name:"scope",description:"a valid `scope` string that has been previously authorized via `provider_authorize`",required:!0,schema:{$ref:"#/components/schemas/ScopeString"}},{name:"notification",description:"an object containing a JSON-RPC notification with `method` and `params`",deprecated:!1,required:!0,schema:{type:"object",properties:{method:{type:"string"},params:!0}}}]},{name:"wallet_invokeMethod",paramStructure:"by-name",params:[{name:"scope",description:"a valid `scope` string that has been previously authorized via `provider_authorize`",required:!0,schema:{$ref:"#/components/schemas/ScopeString"}},{name:"request",description:"an object containing a JSON-RPC request with `method` and `params`",deprecated:!1,required:!0,schema:{type:"object",properties:{method:{type:"string"},params:!0}}}],result:{name:"wallet_invokeMethodResult",schema:!0},examples:[{name:"wallet_invokeMethodExample",params:[{name:"scope",value:"eip155:1"},{name:"request",value:{method:"eth_getBalance",params:[]}}],result:{name:"wallet_invokeMethodResult",value:"0x1"}}]},{name:"wallet_revokeSession",description:"The `wallet_revokeSession` method revokes the entire active session.",params:[],result:{name:"wallet_revokeSessionResult",schema:{type:"boolean"}},examples:[{name:"wallet_revokeSessionExample",params:[],result:{name:"wallet_revokeSessionExampleResult",value:!0}}],errors:[{$ref:"#/components/errors/UnknownError"}]},{name:"wallet_sessionChanged",paramStructure:"by-name",description:"This notification is published by the wallet to notify the callers of updates to a shared session's authorization scopes. The event payload contains the new `sessionScopes`.",params:[{name:"sessionScopes",schema:{$ref:"#/components/schemas/SessionScopes"}}],examples:[{name:"wallet_sessionChangedExample",description:"Example of a wallet_sessionChanged notification.",params:[{name:"sessionScopes",value:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain"],notifications:[]}}}]}]},{name:"wallet_getSession",description:"The `wallet_getSession` method returns an active session.",params:[],result:{name:"wallet_getSessionResult",schema:{type:"object",properties:{sessionScopes:{$ref:"#/components/schemas/SessionScopes"}}}},examples:[{name:"wallet_getSessionExample",description:"Example of a getSession request.",params:[],result:{name:"wallet_getSessionResultExample",value:{sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain"],notifications:[]}}}}}]},{name:"wallet_createSession",paramStructure:"by-name",params:[{name:"requiredScopes",description:"Scopes that the wallet must support in order to be used with this provider.",schema:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}}},{name:"optionalScopes",description:"Scopes that the wallet may support in order to be used with this provider.",schema:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}}},{name:"sessionProperties",description:"Properties that the wallet may use to determine if the session is valid.",schema:{type:"object"}}],result:{name:"wallet_createSessionResult",schema:{type:"object",properties:{sessionScopes:{$ref:"#/components/schemas/SessionScopes"},sessionProperties:{type:"object"}}}},examples:[{name:"wallet_createSessionEthExample",description:"Example of a createSession request.",params:[{name:"optionalScopes",value:{"eip155:1337":{methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{methods:["wallet_addEthereumChain"],notifications:[]}}}],result:{name:"wallet_createSessionResultExample",value:{sessionProperties:{},sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain"],notifications:[]}}}}},{name:"wallet_createSessionEthUnsupportedMethodsExample",description:"Example of a createSession request with unsupported eip155 methods.",params:[{name:"optionalScopes",value:{"eip155:1337":{methods:["not_supported"],notifications:[]},wallet:{methods:[],notifications:[]},"wallet:eip155":{methods:[],notifications:[]}}}],result:{name:"wallet_createSessionEthUnsupportedMethodsResultExample",value:{sessionProperties:{},sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain"],notifications:[]}}}}},{name:"wallet_createSessionUnsupportedScopesExample",description:"Example of a createSession request with unsupported scopes.",params:[{name:"optionalScopes",value:{foobar:{methods:["eth_getBalance"],notifications:["eth_subscription"]},"eip155:1":{accounts:["eip155:1:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]}}}],result:{name:"wallet_createSessionUnsupportedScopesResultExample",value:{sessionProperties:{},sessionScopes:{"eip155:1":{accounts:["eip155:1:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["personal_sign","eth_signTypedData_v4","wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","wallet_swapAsset","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]}}}}}],errors:[{$ref:"#/components/errors/UnknownError"},{code:5100,message:"Requested networks are not supported"},{code:5101,message:"Requested methods are not supported"},{code:5102,message:"Requested notifications are not supported"},{code:5300,message:"Invalid scopedProperties requested"},{code:5301,message:"scopedProperties can only be outside of sessionScopes"},{code:5302,message:"Invalid sessionProperties requested"}]}],components:{errors:{UnknownError:{code:5e3,message:"Unknown error with request"}},schemas:{SessionScopes:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}},ScopeString:{type:"string",pattern:"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?"},Scope:{type:"object",title:"Scope",description:"Scope for a multi-chain connection",additionalProperties:!0,required:["notifications","methods"],properties:{scopes:{type:"array",items:{$ref:"#/components/schemas/ScopeString"}},methods:{description:"Methods that the wallet must support in order to be used with this provider.",type:"array",items:{type:"string"}},notifications:{description:"Notifications that the wallet must support in order to be used with this provider.",type:"array",items:{type:"string"}},rpcEndpoints:{description:"JSON-RPC endpoints for this namespace.",type:"array",items:{type:"string",format:"uri"}},rpcDocuments:{type:"array",description:"OpenRPC documents that define RPC methods in which to anchor the methods authorized in a CAIP-25 interaction.",items:{type:"string",format:"uri"}}}}}}}}}},{package:"@metamask/multichain-api-middleware>@metamask/api-specs",file:"node_modules/@metamask/multichain-api-middleware/node_modules/@metamask/api-specs/dist/build/multichain-openrpc.json"}],[20,{"../../../../shared/lib/delegation":5321,"@metamask/delegation-controller":1231,"@metamask/transaction-controller":2587},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.DelegationControllerInit=void 0,s.awaitDeleteDelegationEntry=o;var a=e("@metamask/delegation-controller"),n=e("@metamask/transaction-controller"),r=e("../../../../shared/lib/delegation");const i=e=>(0,r.getDeleGatorEnvironment)(Number(e));async function o(e,t,{hash:s,txMeta:a,entryToStore:r}){let{id:i}=a,o="continue";const c=({transactionMeta:a})=>{if(a.id===i)if(a.status===n.TransactionStatus.dropped&&a.replacedById)i=a.replacedById;else{switch(a.type){case n.TransactionType.contractInteraction:case n.TransactionType.retry:switch(a.status){case n.TransactionStatus.confirmed:o="delete";break;case n.TransactionStatus.dropped:case n.TransactionStatus.failed:case n.TransactionStatus.rejected:o="unsubscribe";break;default:return}break;case n.TransactionType.cancel:o="unsubscribe";break;default:return void console.warn("awaitDeleteDelegationEntry: Unexpected tx type",a.type)}"delete"===o&&(e.delete(s),r&&e.store({entry:r})),"unsubscribe"!==o&&"delete"!==o||t.unsubscribe("TransactionController:transactionStatusUpdated",c)}};t.subscribe("TransactionController:transactionStatusUpdated",c)}s.DelegationControllerInit=({controllerMessenger:e,persistedState:t,initMessenger:s})=>{const n=new a.DelegationController({messenger:e,state:t.DelegationController,hashDelegation:r.getDelegationHashOffchain,getDelegationEnvironment:i});return e.registerActionHandler("DelegationController:signDelegation",n.signDelegation.bind(n)),{controller:n,api:{signDelegation:n.signDelegation.bind(n),storeDelegationEntry:n.store.bind(n),listDelegationEntries:n.list.bind(n),getDelegationEntry:n.retrieve.bind(n),getDelegationEntryChain:n.chain.bind(n),deleteDelegationEntry:n.delete.bind(n),awaitDeleteDelegationEntry:o.bind(null,n,s)}}}}}},{package:"$root$",file:"app/scripts/controller-init/delegation/delegation-controller-init.ts"}],[2e3,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={openrpc:"1.2.4",info:{title:"JSON-RPC API",version:"1.0.0",description:"This section provides an interactive reference for MetaMask's Wallet JSON-RPC API. The API builds on a set of standard Ethereum methods with MetaMask-specific enhancements, and is designed for seamless integration into dapps."},methods:[{name:"wallet_addEthereumChain",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Multichain"}],summary:"Adds an Ethereum chain to the wallet.",description:"Creates a confirmation asking the user to add the specified chain to the wallet application. The caller must specify a chain ID and some chain metadata. Specified by [EIP-3085](https://eips.ethereum.org/EIPS/eip-3085).",params:[{name:"Chain",schema:{$ref:"#/components/schemas/AddEthereumChainParameter"}}],errors:[{code:-32602,message:"Expected null or array with at least one valid string HTTPS URL 'blockExplorerUrl'. Received: ${blockExplorerUrls}"},{code:-32602,message:"Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${chainId}"},{code:-32602,message:'Invalid chain ID "${_chainId}": numerical value greater than max safe value. Received:\n${chainId}'},{code:-32602,message:"May not specify default MetaMask chain."},{code:-32602,message:"Expected 2-6 character string 'nativeCurrency.symbol'. Received:\n${ticker}"},{code:-32602,message:"nativeCurrency.symbol does not match currency symbol for a network the user already has added with the same chainId. Received:\n${ticker}"}],result:{name:"Null response",description:"This method returns `null` if the chain is added.",schema:{type:"null"}},examples:[{name:"wallet_addEthereumChain example",params:[{name:"Chain",value:{chainId:"0x64",chainName:"Gnosis",rpcUrls:["https://rpc.gnosischain.com"],iconUrls:["https://xdaichain.com/fake/example/url/xdai.svg","https://xdaichain.com/fake/example/url/xdai.png"],nativeCurrency:{name:"XDAI",symbol:"XDAI",decimals:18},blockExplorerUrls:["https://blockscout.com/poa/xdai/"]}}],result:{name:"Null response",value:"null"}}]},{name:"wallet_switchEthereumChain",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Switches the wallet's active Ethereum chain.",description:"Requests that the wallet switches its active Ethereum chain. Specified by [EIP-3326](https://eips.ethereum.org/EIPS/eip-3326).",params:[{name:"Chain",schema:{title:"Chain",description:"Object containing the chain ID to switch to.",type:"object",required:["chainId"],properties:{chainId:{description:"The chain ID as a `0x`-prefixed hexadecimal string, as returned by the `eth_chainId` method.",type:"string"}}}}],result:{name:"Null response",description:"This method returns `null` if the active chain is switched.",schema:{type:"null"}},errors:[{code:4902,message:"Unrecognized chain ID. Try adding the chain using wallet_addEthereumChain first."}],examples:[{name:"wallet_switchEthereumChain example",params:[{name:"Chain",value:{chainId:"0x64"}}],result:{name:"Null response",value:"null"}}]},{name:"wallet_getPermissions",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Gets the user's permissions.",description:"Gets the user's permissions. Specified by [EIP-2255](https://eips.ethereum.org/EIPS/eip-2255).",params:[],result:{name:"Permissions list",schema:{$ref:"#/components/schemas/PermissionsList"}},examples:[{name:"wallet_getPermissions example",params:[],result:{name:"Permission list",value:{eth_accounts:{}}}}]},{name:"wallet_requestPermissions",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Requests additional permissions.",description:"Requests additional permissions from the user. This method accepts a single permission per call. Specified by [EIP-2255](https://eips.ethereum.org/EIPS/eip-2255).",params:[{name:"Permission",required:!0,schema:{title:"Permission",description:"Object containing the permission to request.",type:"object",properties:{permission_name:{type:"object",description:"The permission object. `permission_name` is the name of the permission being requested.",additionalProperties:!0}}}}],result:{name:"Permissions list",schema:{$ref:"#/components/schemas/PermissionsList"}},examples:[{name:"wallet_requestPermissions example",params:[{name:"Permission",value:{eth_accounts:{}}}],result:{name:"Permission list",value:{eth_accounts:{}}}}],errors:[{$ref:"#/components/errors/UserRejected"}]},{name:"wallet_revokePermissions",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Experimental"}],summary:"Revokes the current dapp permissions.",description:"Revokes previously granted permissions for the current dapp identified by its origin. This method accepts a single permission per call. Specified by [MIP-2](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md) and only available for the MetaMask browser extension.",params:[{name:"Permission",required:!0,schema:{title:"Permission",description:"Object containing the permission to revoke.",type:"object",properties:{permission_name:{type:"object",description:"The permission object. `permission_name` is the name of the permission being revoked.",additionalProperties:!0}}}}],result:{name:"Null response",description:"This method returns `null` if the permission is revoked.",schema:{type:"null"}},errors:[],examples:[{name:"wallet_revokePermissions example",params:[{name:"Permission",value:{eth_accounts:{}}}],result:{name:"Null response",value:"null"}}]},{name:"personal_sign",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],summary:"Presents a plain text signature challenge to the user.",description:"Presents a plain text signature challenge to the user and returns the signed response. Prepends a safe prefix to the signed message to prevent the challenge tricking users into signing a financial transaction. <br><br> MetaMask implements `personal_sign` similarly to the Go Ethereum client's `eth_sign` implementation. MetaMask's `personal_sign` doesn't accept a password. <br><br> This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",deprecated:!1,params:[{name:"Challenge",required:!0,description:"A hex-encoded UTF-8 string to present to the user. See how to encode a string like this in the [`browser-string-hexer`](https://github.com/danfinlay/browser-string-hexer) module.",schema:{type:"string",pattern:"^0x[a-fA-F\\d]+$"}},{name:"Address",required:!0,description:"The address of the requested signing account.",schema:{type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}}],result:{name:"Signature",description:"A hex-encoded signature.",schema:{type:"string",pattern:"^0x[0-9a-f]*$"}},examples:[{name:"personal_sign example",params:[{name:"Challenge",value:"0x506c65617365207369676e2074686973206d65737361676520746f20636f6e6669726d20796f7572206964656e746974792e"},{name:"Address",value:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7"}],result:{name:"Signature",value:"0x43d7215ebe96c09a5adac69fc76dea5647286b501954ea273e417cf65e6c80e1db4891826375a7de02467a3e01caf125f64c851a8e9ee9467fd6f7e83523b2115bed8e79d527a85e28a36807d79b85fc551b5c15c1ead2e43456c31f565219203db2aed86cb3601b33ec3b410836d4be7718c6148dc9ac82ecc0a04c5edecd8914"}}]},{name:"eth_signTypedData_v4",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],summary:"Presents a structured data message for the user to sign.",description:"Presents a data message for the user to sign in a structured and readable format and returns the signed response. Introduced by [EIP-712](https://eips.ethereum.org/EIPS/eip-712). This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",params:[{name:"Address",required:!0,description:"The address of the requested signing account.",schema:{type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}},{name:"Typed data",required:!0,schema:{$ref:"#/components/schemas/TypedData"}}],result:{name:"Signature",description:"A hex-encoded signature.",schema:{type:"string",pattern:"^0x[0-9a-f]*$"}},examples:[{name:"eth_SignTypedData_v4 example",params:[{name:"Address",value:"0x0000000000000000000000000000000000000000"},{name:"Typed data",value:{types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Person:[{name:"name",type:"string"},{name:"wallet",type:"address"}],Mail:[{name:"from",type:"Person"},{name:"to",type:"Person"},{name:"contents",type:"string"}]},primaryType:"Mail",domain:{name:"Ether Mail",version:"1",chainId:1,verifyingContract:"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"},message:{from:{name:"Cow",wallet:"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"},to:{name:"Bob",wallet:"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"},contents:"Hello, Bob!"}}}],result:{name:"Signature",value:"0x4355c47d63924e8a72e509b65029052eb6c299d53a04e167c5775fd466751c9d07299936d304c153f6443dfa05f40ff007d72911b6f72307f996231605b915621c"}}]},{name:"wallet_registerOnboarding",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Multichain"}],summary:"Redirects the user back to the site after onboarding.",description:"Registers the requesting site with MetaMask as the initiator of onboarding, enabling MetaMask to redirect the user back to the site after onboarding. Returns a promise that resolves to `true`, or rejects the request if there's an error. Instead of calling this method directly, you should use the [`@metamask/onboarding`](https://github.com/MetaMask/metamask-onboarding) library.",params:[],result:{name:"Registered",description:"`true` if the request was successful, `false` otherwise.",schema:{type:"boolean"}},examples:[{name:"wallet_registerOnboarding example",params:[],result:{name:"Registered",value:!0}}]},{name:"wallet_watchAsset",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Experimental"},{$ref:"#/components/tags/Multichain"}],summary:"Tracks a token in MetaMask.",description:"Requests that the user track the specified token in MetaMask. Returns a boolean indicating if the token was successfully added. Once added, the token is indistinguishable from those added using legacy methods, such as a centralized registry. Introduced by [EIP-747](https://eips.ethereum.org/EIPS/eip-747).",paramStructure:"by-name",params:[{name:"type",schema:{type:"string",description:"The token type (`ERC20`, `ERC721`, or `ERC1155`). Support for ERC-721 and ERC-1155 tokens is experimental and currently only available on the extension (not on mobile). See [MIP-1](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-1.md) and the [MIP proposal lifecycle](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/PROCESS-GUIDE.md#proposal-lifecycle) for more information.",enum:["ERC20","ERC721","ERC1155"]},required:!0},{name:"options",schema:{description:"An object containing information about the token.",type:"object",required:["address"],properties:{address:{description:"The address of the token contract.",type:"string"},symbol:{description:"A ticker symbol or shorthand, up to 11 characters (optional for ERC-20 tokens).",minLength:2,maxLength:11,type:"string"},decimals:{description:"The number of token decimals (optional for ERC-20 tokens).",type:"number"},image:{description:"A string URL of the token logo (optional for ERC-20 tokens).",type:"string"},tokenId:{description:"The unique identifier of the NFT (required for ERC-721 and ERC-1155 tokens).",type:"string"}}}}],errors:[{code:-32602,message:"Must specify address, symbol, and decimals."},{code:-32602,message:"Invalid symbol: not a string."},{code:-32602,message:"Invalid symbol '${symbol}': longer than 11 characters."},{code:-32602,message:"Invalid decimals '${decimals}': must be 0 <= 36."},{code:-32602,message:"Invalid address '${address}'."},{code:-32602,message:"Asset type is required."},{code:-32602,message:"Both address and tokenId are required."},{code:-32602,message:"Invalid address."},{code:-32e3,message:"Suggested NFT is not owned by the selected account."},{code:-32e3,message:"Suggested NFT of type ${standard} does not match received type ${type}."},{code:-32002,message:"Unable to verify ownership. Possibly because the standard is not supported or the user's currently selected network does not match the chain of the asset in question."}],result:{name:"Added",description:"`true` if the token was added, `false` otherwise.",schema:{type:"boolean"}},examples:[{name:"wallet_watchAsset ERC-20 example",params:[{name:"type",value:"ERC20"},{name:"options",value:{address:"0xb60e8dd61c5d32be8058bb8eb970870f07233155",symbol:"FOO",decimals:18,image:"https://foo.io/token-image.svg"}}],result:{name:"Added",value:!0}},{name:"wallet_watchAsset ERC-721 example",params:[{name:"type",value:"ERC721"},{name:"options",value:{address:"0x123456789abcdef0123456789abcdef01234567",tokenId:"42"}}],result:{name:"Added",value:!0}},{name:"wallet_watchAsset ERC-1155 example",params:[{name:"type",value:"ERC1155"},{name:"options",value:{address:"0xabcdef0123456789abcdef0123456789abcdef01",tokenId:"1337"}}],result:{name:"Added",value:!0}}]},{name:"wallet_scanQRCode",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Mobile"},{$ref:"#/components/tags/Multichain"}],summary:"Requests that the user scan a QR code.",description:"Requests that the user scan a QR code using their device camera. Introduced by [EIP-945](https://github.com/ethereum/EIPs/issues/945).",params:[{name:"Regex",required:!1,description:"A regular expression (regex) string for matching arbitrary QR code strings.",schema:{type:"string",title:"regex"}}],result:{name:"QR code string",description:"A string corresponding to the scanned QR code. If a regex string is provided, the resulting string matches it. If no regex string is provided, the resulting string matches an Ethereum address. If neither condition is met, the method returns an error.",schema:{type:"string",title:"QR code string"}}},{name:"wallet_sendCalls",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Sends a batch of calls.",description:"Requests that the wallet submits a batch of calls. Specified by [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).",params:[{name:"Calls",required:!0,schema:{$ref:"#/components/schemas/SendCallsParameter"}}],result:{name:"Batch result",schema:{description:"An object containing information about the sent batch.",type:"object",properties:{id:{description:"The ID of the batch of calls.",type:"string"},capabilities:{description:"Wallets can use this object to attach capability-specific metadata.",type:"object"}}}},errors:[{$ref:"#/components/errors/InvalidParams"},{code:-32e3,message:"Version not supported."},{$ref:"#/components/errors/UserRejected"},{$ref:"#/components/errors/Unauthorized"},{code:5700,message:"The wallet does not support a capability that was not marked as optional."},{code:5710,message:"EIP-7702 not supported on the specified chain ID."},{code:5720,message:"There is already a batch submitted with the specified batch ID."},{code:5740,message:"The batch is too large for the wallet to process."},{code:5750,message:"EIP-7702 upgrade rejected for this chain and account."}],examples:[{name:"wallet_sendCalls example",params:[{name:"Calls",value:{version:"2.0.0",from:"0xd46e8dd67c5d32be8058bb8eb970870f07244567",chainId:"0xaa36a7",atomicRequired:!0,calls:[{to:"0x54f1C1965B355e1AB9ec3465616136be35bb5Ff7",value:"0x0"},{to:"0x2D48e6f5Ae053e4E918d2be53570961D880905F2",value:"0x0"}]}}],result:{name:"Batch result",value:{id:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}}}]},{name:"wallet_getCallsStatus",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Gets the status of a call batch.",description:"Gets the status of a batch of calls that was previously sent using `wallet_sendCalls`. Specified by [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).",params:[{name:"Batch ID",required:!0,description:"The ID of a batch of calls (the `id` value returned by `wallet_sendCalls`).",schema:{type:"string"}}],result:{name:"Batch status",schema:{description:"An object containing status information of the batch of calls.",type:"object",properties:{version:{description:"The version of the API format.",type:"string"},id:{description:"The ID of the batch of calls.",$ref:"#/components/schemas/uint"},chainId:{description:"The chain ID of the calls.",$ref:"#/components/schemas/uint"},status:{description:"The status code of the batch of calls. Possible values are: <br> <ul>\n  <li>`100` - Pending</li>\n  <li>`200` - Confirmed</li>\n  <li>`400` - Failed offchain</li>\n  <li>`500` - Reverted</li>\n  <li>`600` - Partially reverted</li>\n</ul>",type:"number"},atomic:{description:"`true` if the wallet executed the calls atomically. `false` if the wallet executed the calls non-atomically.",type:"boolean"},receipts:{description:"An array of transaction receipts. If the wallet executed the calls atomically, a single receipt or an array of receipts may be returned, corresponding to how the batch of calls were included onchain.",type:"array",items:{title:"Receipt",description:"A transaction receipt object.",type:"object",properties:{logs:{description:"An array of log objects.",type:"array",items:{title:"Log",description:"An object containing information about the log.",type:"object",properties:{address:{description:"The address that generated the log.",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"},data:{description:"The data of the log.",type:"string",pattern:"^0x[0-9a-f]*$"},topics:{description:"An array of log topics.",type:"array",items:{title:"Topic",description:"A log topic.",type:"string",pattern:"^0x[0-9a-f]*$"}}}}},status:{description:"The status of the transaction. `0x1` indicates success, and `0x0` indicates failure.",type:"string",pattern:"^0x[0-1]$"},blockHash:{description:"The hash of the block containing the transaction.",type:"string",pattern:"^0x[0-9a-f]{64}$"},blockNumber:{description:"The number of the block containing the transaction.",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},gasUsed:{description:"The amount of gas used by the transaction.",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},transactionHash:{description:"The hash of the transaction.",type:"string",pattern:"^0x[0-9a-f]{64}$"}},additionalProperties:!0}},capabilities:{description:"Capabilities associated with the batch of calls.",type:"object",additionalProperties:!0}}}},errors:[{$ref:"#/components/errors/InvalidParams"},{$ref:"#/components/errors/Unauthorized"},{code:5730,message:"No matching bundle found."}],examples:[{name:"wallet_getCallsStatus example",params:[{name:"Batch ID",value:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}],result:{name:"Batch status",value:{version:"2.0.0",chainId:"0xaa36a7",id:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331",status:200,atomic:!0,receipts:[{logs:[{address:"0xa922b54716264130634d6ff183747a8ead91a40b",topics:["0x5a2a90727cc9d000dd060b1132a5c977c9702bb3a52afe360c9c22f0e9451a68"],data:"0xabcd"}],status:"0x1",blockHash:"0xf19bbafd9fd0124ec110b848e8de4ab4f62bf60c189524e54213285e7f540d4a",blockNumber:"0xabcd",gasUsed:"0xdef",transactionHash:"0x9b7bb827c2e5e3c1a0a44dc53e573aa0b3af3bd1f9f5ed03071b100bb039eaff"}]}}}]},{name:"wallet_getCapabilities",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Gets the capabilities of the wallet.",description:"Returns information about the wallet's support for the `atomic` capability. The `atomic` capability specifies how the wallet will execute batches of transactions sent using `wallet_sendCalls`. `wallet_getCapabilities` is specified by [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).",params:[{name:"Address",description:"A wallet address.",required:!0,schema:{type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}},{name:"Chain IDs",description:"An array of chain IDs to get capabilities for.",schema:{type:"array",items:{title:"Chain ID",description:"An [EIP-155](https://eips.ethereum.org/EIPS/eip-155) chain ID in hexadecimal format.",$ref:"#/components/schemas/uint"}}}],result:{name:"Capabilities",schema:{description:"An object specifying the status of the `atomic` capability for specific [EIP-155](https://eips.ethereum.org/EIPS/eip-155) chain IDs. For each chain, the `atomic` capability can have a `status` of: <br> <ul>\n  <li>`supported` - The wallet will execute calls sent using\n        `wallet_sendCalls` atomically.</li>\n  <li>`ready` - The wallet can upgrade to `supported` pending user\n          approval to upgrade their account via EIP-7702.</li>\n</ul> If the `atomic` capability is not `supported` or `ready` for a specified chain ID, the wallet will not return anything for that chain ID.",type:"object"}},errors:[{$ref:"#/components/errors/InvalidParams"},{$ref:"#/components/errors/Unauthorized"}],examples:[{name:"wallet_getCapabilities example",params:[{name:"Address",value:"0xd46e8dd67c5d32be8058bb8eb970870f07244567"},{name:"Chain IDs",value:["0xaa36a7"]}],result:{name:"Capabilities",value:{"0xaa36a7":{atomic:{status:"ready"}}}}}]},{name:"eth_requestAccounts",tags:[{$ref:"#/components/tags/MetaMask"}],description:"Requests that the user provide access to one or more Ethereum addresses. This method is specified by [EIP-1102](https://eips.ethereum.org/EIPS/eip-1102). Internally, this method calls `wallet_requestPermissions` for permission to call `eth_accounts`.",summary:"Requests that the user provide access to addresses.",params:[],result:{name:"Address list",schema:{type:"array",description:"An array of Ethereum addresses that the user has authorized the dapp to access.",items:{title:"Address",description:"A hex-encoded address.",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}}},errors:[{$ref:"#/components/errors/UserRejected"}],examples:[{name:"eth_requestAccounts example",params:[],result:{name:"Address list",value:["0xa77392123a1085f75e62eec7dea7e0e1e5142d5f"]}}]},{name:"eth_accounts",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"}],description:"Returns a list of addresses that the user has authorized the dapp to access. This method requires calling `wallet_requestPermissions` for permission. We recommend using `eth_requestAccounts`, which internally calls `wallet_requestPermission`.",summary:"Gets a list of authorized addresses.",params:[],result:{name:"Address list",schema:{type:"array",description:"An array of Ethereum addresses that the user has authorized the dapp to access.",items:{title:"Address",description:"A hex-encoded address.",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}}},examples:[{name:"eth_accounts example",params:[],result:{name:"Address list",value:["0xa77392123a1085f75e62eec7dea7e0e1e5142d5f"]}}]},{name:"eth_sendTransaction",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],description:"Creates a new wallet confirmation to make an Ethereum transaction from the user's account. This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",summary:"Initiates a new transaction.",params:[{name:"Transaction",required:!0,description:"The transaction object to sign and send.",schema:{type:"object",title:"Transaction",description:"The parameters to customize a transaction. If a `to` address is not provided, the transaction is assumed to be a contract creation transaction, and the `data` field is used as the contract initialization code. `gasPrice` cannot be used together with `maxPriorityFeePerGas` and `maxFeePerGas`.",required:["from"],if:{properties:{to:{not:{type:"string"}}}},then:{required:["data"]},properties:{to:{description:"The recipient's address.",$ref:"#/components/schemas/address"},from:{description:"The sender's address.",$ref:"#/components/schemas/address"},gas:{description:"The maximum amount of gas the transaction is allowed to use.",$ref:"#/components/schemas/uint"},value:{description:"The amount to transfer in wei.",$ref:"#/components/schemas/uint"},data:{description:"The data to include in the transaction. Used for contract creation transactions.",$ref:"#/components/schemas/bytes"},gasPrice:{description:"The gas price the sender is willing to pay to miners in wei. Used in pre-1559 transactions.",$ref:"#/components/schemas/uint"},maxPriorityFeePerGas:{description:"Maximum fee per gas the sender is willing to pay to miners in wei. Used in 1559 transactions.",$ref:"#/components/schemas/uint"},maxFeePerGas:{description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei. Used in 1559 transactions.",$ref:"#/components/schemas/uint"}}}}],result:{name:"Transaction hash",description:"The transaction hash of the sent transaction.",schema:{type:"string",pattern:"^0x[0-9a-f]{64}$"}},errors:[{code:4100,message:"The requested account and/or method has not been authorized by the user."}],examples:[{name:"sendTransaction",params:[{name:"Transaction",value:{to:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7",from:"0xDeaDbeefdEAdbeefdEadbEEFdeadbeefDEADbEEF",gas:"0x76c0",value:"0x8ac7230489e80000",data:"0x",gasPrice:"0x4a817c800"}}],result:{name:"eth_sendTransactionExampleResult",value:"0x4e306b5a5a37532e1734503f7d2427a86f2c992fbe471f5be403b9f734e667c8"}}]},{name:"eth_decrypt",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Deprecated"}],summary:"Decrypts an encrypted message.",description:"This method is deprecated and may be removed in the future.\n\n Requests that MetaMask decrypt the specified encrypted message.\n The message must have been encrypted using the public encryption key of the specified Ethereum address.\n Returns a promise that resolves to the decrypted message, or rejects if the decryption attempt fails.",params:[{name:"EncryptedMessage",required:!0,description:"The encrypted message to decrypt.",schema:{type:"string"}},{name:"Address",required:!0,description:"The address of the Ethereum account that can decrypt the message.",schema:{$ref:"#/components/schemas/address"}}],result:{name:"PermissionsList",schema:{$ref:"#/components/schemas/PermissionsList"}},errors:[{code:4100,message:"The requested account and/or method has not been authorized by the user."}],examples:[{name:"decryptExample",params:[{name:"EncryptedMessage",value:"0x7b2276657273696f6e223a227832353531392d7873616c736132302d706f6c7931333035222c226e6f6e6365223a2243533967507076467071765358704655416679726a7179774e35302b7a747766222c22657068656d5075626c69634b6579223a224372774b61456d2f4b356d6d714239764c376f5872636d6441417757764479324f784c3333527135576e553d222c2263697068657274657874223a2248347a65336e7177572b753174663956343945506167454e343872774f766b6952676244566e47587a38493d227d"},{name:"Address",value:"0xD1F5279BE4B4dD94133A23deE1B23F5bfC0Db1d0"}],result:{name:"eth_decryptExampleResult",value:"Hello, Ethereum!"}}]},{name:"eth_getEncryptionPublicKey",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Deprecated"}],summary:"Gets a public key used for encryption.",description:"This method is deprecated and may be removed in the future.\n\n Requests that the user share their public encryption key.\n Returns a public encryption key, or rejects if the user denies the request.\n The public key is computed from entropy associated with the specified user account, using the NaCl implementation of the `X25519_XSalsa20_Poly1305` algorithm.",params:[{name:"Address",required:!0,description:"The address of the Ethereum account that can decrypt the message.",schema:{$ref:"#/components/schemas/address"}}],result:{name:"EncryptionKey",schema:{type:"string"}},examples:[{name:"eth_getEncryptionPublicKey",params:[{name:"Address",value:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7"}],result:{name:"eth_getEncryptionPublicKeyExampleResult",value:"0x04bfcab3b7ca7e8b3f3b62b2f7f77e9e4b68080bbf8f0f4a1c8f890864d2c7c1d3c45d8b2e3f5f1c27dfeea4c2f5733e90bfc7484e2a690aa9b8ac4559d2e6a8d7"}}]},{name:"web3_clientVersion",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],description:"Returns the current MetaMask client version. This differs slightly per client. For example, the browser extension returns a string like `MetaMask/v10.33.1`, while the mobile app returns a string like `MetaMask/8.1.2/Mobile`.",summary:"Current client version.",params:[],examples:[{name:"MetaMaskClientVersionExample",description:"Example version response from MetaMask.",params:[],result:{name:"MetaMaskClientVersion",description:"The current client version.",value:"MetaMask/v10.33.1"}},{name:"MetaMaskMobileClientVersionExample",description:"Example version response from MetaMask Mobile.",params:[],result:{name:"MetaMaskClientVersion",description:"The current client version.",value:"MetaMask/8.1.2/Mobile"}}],result:{name:"CurrentVersion",description:"The current client version.",schema:{title:"CurrentClientVersion",type:"string"}}},{name:"eth_subscribe",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],summary:"Subscribes to specific Ethereum events, returning a subscription ID used to receive notifications.",description:"Subscribes to specific events on the Ethereum network, such as new blocks, or logs. When an event occurs, a notification is sent to the client with the corresponding data. To stop receiving notifications, the client can unsubscribe using `eth_unsubscribe`.",params:[{name:"subscriptionType",required:!0,schema:{title:"subscriptionType",type:"string",enum:["newHeads","logs"],description:"The type of subscription to create. Must be one of the following:\n1. `newHeads` - New block headers.\n2. `logs` - Logs matching a filter object."}},{name:"filterOptions",required:!1,schema:{title:"filterOptions",type:"object",description:"(Optional) An object containing filter options specific to the subscription type. Only applicable for the `logs` subscription type.",required:["topics"],properties:{address:{type:"string",description:"(Optional) A single address or an array of addresses to filter the logs by."},topics:{type:"array",description:"An array of topics to filter the logs by.",items:{type:"string"}}}}}],result:{name:"subscriptionId",schema:{type:"string"},description:"A unique subscription ID that can be used to unsubscribe or identify incoming notifications."},examples:[{name:"eth_subscribe example",params:[{name:"subscriptionType",value:"newHeads"}],result:{name:"eth_subscribeExampleResult",value:"0x1b84f2cdf29a204b79e450c1939b30c1"}}]},{name:"eth_unsubscribe",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],summary:"Unsubscribes from a specific Ethereum event, using the subscription ID provided by `eth_subscribe`.",description:"Unsubscribes from specific events on the Ethereum network, to which the client has been previously subscribed using `eth_subscribe`. The client must provide the subscription ID obtained from `eth_subscribe` to stop receiving notifications for the corresponding event.",params:[{name:"subscriptionId",required:!0,schema:{type:"string",description:"The unique subscription ID obtained from `eth_subscribe`, used to identify the subscription to be unsubscribed."}}],result:{name:"unsubscribed",schema:{type:"boolean"},description:"A boolean value indicating whether the unsubscription was successful."},examples:[{name:"eth_unsubscribe example",params:[{name:"subscriptionId",value:"0x1b84f2cdf29a204b79e450c1939b30c1"}],result:{name:"eth_unsubscribeExampleResult",value:!0}}]},{name:"eth_blockNumber",summary:"Returns the number of most recent block.",params:[],result:{name:"Block number",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_blockNumber example",params:[],result:{name:"Block number",value:"0x2377"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_call",summary:"Executes a new message call immediately without creating a transaction on the block chain.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/GenericTransaction"}},{name:"Block",required:!1,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Return data",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_call example",params:[{name:"Transaction",value:{to:"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",value:"0x1"}},{name:"Block",value:"latest"}],result:{name:"Return data",value:"0x"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_chainId",summary:"Returns the chain ID of the current network.",params:[],result:{name:"Chain ID",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_chainId example",params:[],result:{name:"Chain ID",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_coinbase",summary:"Returns the client coinbase address.",params:[],result:{name:"Coinbase address",schema:{$ref:"#/components/schemas/address"}},examples:[{name:"eth_coinbase example",params:[],result:{name:"Coinbase address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_estimateGas",summary:"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/GenericTransaction"}},{name:"Block",required:!1,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Gas used",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_estimateGas example",params:[{name:"Transaction",value:{from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",to:"0x44aa93095d6749a706051658b970b941c72c1d53",value:"0x1"}}],result:{name:"Gas used",value:"0x5208"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_feeHistory",summary:"Transaction fee history",description:"Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",params:[{name:"blockCount",description:"Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",required:!0,schema:{$ref:"#/components/schemas/uint"}},{name:"newestBlock",description:"Highest block of the requested range.",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"rewardPercentiles",description:"A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",required:!0,schema:{title:"rewardPercentiles",type:"array",items:{title:"rewardPercentile",description:"Floating point value between 0 and 100.",type:"number"}}}],result:{name:"Fee history result",description:"Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",schema:{title:"feeHistoryResults",description:"Fee history results.",type:"object",required:["oldestBlock","baseFeePerGas","gasUsedRatio"],additionalProperties:!1,properties:{oldestBlock:{title:"oldestBlock",description:"Lowest number block of returned range.",$ref:"#/components/schemas/uint"},baseFeePerGas:{title:"baseFeePerGasArray",description:"An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",type:"array",items:{$ref:"#/components/schemas/uint"}},baseFeePerBlobGas:{title:"baseFeePerBlobGasArray",description:"An array of block base fees per blob gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-4844 blocks.",type:"array",items:{$ref:"#/components/schemas/uint"}},gasUsedRatio:{title:"gasUsedRatio",description:"An array of block gas used ratios. These are calculated as the ratio of gasUsed and gasLimit.",type:"array",items:{$ref:"#/components/schemas/ratio"}},blobGasUsedRatio:{title:"blobGasUsedRatio",description:"An array of block blob gas used ratios. These are calculated as the ratio of blobGasUsed and the max blob gas per block.",type:"array",items:{$ref:"#/components/schemas/ratio"}},reward:{title:"rewardArray",description:"A two-dimensional array of effective priority fees per gas at the requested block percentiles.",type:"array",items:{title:"rewardPercentile",description:"An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",type:"array",items:{title:"rewardPercentile",description:"A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty.",$ref:"#/components/schemas/uint"}}}}}},examples:[{name:"eth_feeHistory example",params:[{name:"blockCount",value:"0x5"},{name:"newestblock",value:"latest"},{name:"rewardPercentiles",value:[20,30]}],result:{name:"Fee history result",value:{oldestblock:"0x10b52f",baseFeePerGas:["0x3fa63a3f","0x37f999ee","0x3e36f20a","0x4099f79a","0x430d532d","0x46fcd4a4"],baseFeePerBlobGas:["0x7b7609c19","0x6dbe41789","0x7223341d4","0x6574a002c","0x7223341d4","0x6574a002c"],gasUsedRatio:[.017712333333333333,.9458865666666667,.6534561,.6517375666666667,.7347769666666667],blobGasUsedRatio:[0,.6666666666666666,0,1,0],reward:[["0x3b9aca00","0x59682f00"],["0x3a13012","0x3a13012"],["0x3a13012","0x3a13012"],["0xf4240","0xf4240"],["0xf4240","0xf4240"]]}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_gasPrice",summary:"Returns the current price per gas in wei.",params:[],result:{name:"Gas price",schema:{title:"Gas price",$ref:"#/components/schemas/uint"}},examples:[{name:"eth_gasPrice example",params:[],result:{name:"Gas price",value:"0x3e8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBalance",summary:"Returns the balance of the account of given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Balance",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_getBalance example",params:[{name:"Address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{name:"Block",value:"latest"}],result:{name:"Balance",value:"0x1cfe56f3795885980000"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockByHash",summary:"Returns information about a block by hash.",params:[{name:"Block hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}},{name:"Hydrated transactions",required:!0,schema:{title:"hydrated",type:"boolean"}}],result:{name:"Block information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/Block"}]}},examples:[{name:"eth_getBlockByHash example",params:[{name:"Block hash",value:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c"},{name:"Hydrated transactions",value:!1}],result:{name:"Block information",value:{number:"0x68b3",hash:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",mixHash:"0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",parentHash:"0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",nonce:"0x378da40ff335b070",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",logsBloom:"0xtransactionsRoot:"0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",stateRoot:"0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",receiptsRoot:"0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",miner:"0xb42b6c4a95406c78ff892d270ad20b22642e102d",difficulty:"0x66e619a",totalDifficulty:"0x1e875d746ae",extraData:"0xd583010502846765746885676f312e37856c696e7578",size:"0x334",gasLimit:"0x47e7c4",gasUsed:"0x37993",timestamp:"0x5835c54d",uncles:[],transactions:["0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc","0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"],baseFeePerGas:"0x7",withdrawalsRoot:"0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",withdrawals:[{index:"0x0",validatorIndex:"0x9d8c0",address:"0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",amount:"0x11a33e3760"}],blobGasUsed:"0x0",excessBlobGas:"0x0",parentBeaconBlockRoot:"0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockByNumber",summary:"Returns information about a block by number.",params:[{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"Hydrated transactions",required:!0,schema:{title:"hydrated",type:"boolean"}}],result:{name:"Block information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/Block"}]}},examples:[{name:"eth_getBlockByNumber example",params:[{name:"block",value:"0x68b3"},{name:"Hydrated transactions",value:!1}],result:{name:"Block information",value:{number:"0x68b3",hash:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",mixHash:"0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",parentHash:"0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",nonce:"0x378da40ff335b070",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",logsBloom:"0xtransactionsRoot:"0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",stateRoot:"0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",receiptsRoot:"0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",miner:"0xb42b6c4a95406c78ff892d270ad20b22642e102d",difficulty:"0x66e619a",totalDifficulty:"0x1e875d746ae",extraData:"0xd583010502846765746885676f312e37856c696e7578",size:"0x334",gasLimit:"0x47e7c4",gasUsed:"0x37993",timestamp:"0x5835c54d",uncles:[],transactions:["0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc","0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"],baseFeePerGas:"0x7",withdrawalsRoot:"0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",withdrawals:[{index:"0x0",validatorIndex:"0x9d8c0",address:"0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",amount:"0x11a33e3760"}],blobGasUsed:"0x0",excessBlobGas:"0x0",parentBeaconBlockRoot:"0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockTransactionCountByHash",summary:"Returns the number of transactions in a block from a block matching the given block hash.",params:[{name:"Block hash",schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Transaction count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Transaction count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getBlockTransactionCountByHash example",params:[{name:"Block hash",value:"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"}],result:{name:"Transaction count",value:"0x8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockTransactionCountByNumber",summary:"Returns the number of transactions in a block matching the given block number.",params:[{name:"Block",schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Transaction count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Transaction count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getBlockTransactionCountByNumber example",params:[{name:"Block",value:"0xe8"}],result:{name:"Transaction count",value:"0x8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getCode",summary:"Returns code at a given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Bytecode",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_getCode example",params:[{name:"Address",value:"0xa50a51c09a5c451c52bb714527e1974b686d8e77"},{name:"Block",value:"latest"}],result:{name:"Bytecode",value:"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getFilterChanges",summary:"Polling method for the filter with the given ID (created using `eth_newFilter`). Returns an array of logs which occurred since last poll.",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getFilterChanges example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getFilterLogs",summary:"Returns an array of all logs matching the filter with the given ID (created using `eth_newFilter`).",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getFilterLogs example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getLogs",summary:"Returns an array of all logs matching the specified filter.",params:[{name:"Filter",schema:{$ref:"#/components/schemas/Filter"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getLogs example",params:[{name:"Filter",value:{fromBlock:"0x137d3c2",toBlock:"0x137d3c3",address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",topics:[]}}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getProof",summary:"Returns the merkle proof for a given account and optionally some storage keys.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"StorageKeys",required:!0,schema:{title:"Storage keys",type:"array",items:{$ref:"#/components/schemas/bytesMax32"}}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Account",schema:{$ref:"#/components/schemas/AccountProof"}},examples:[{name:"eth_getProof example",params:[{name:"Address",value:"0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"},{name:"StorageKeys",value:["0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"]},{name:"Block",value:"latest"}],result:{name:"Account",value:{accountProof:["0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280","0xf90211a0d360be1e1da1a0c32bc4c105833bd531e59d110684007b7c50fb2709002973eca0cf6dd1e350a7031b4e2ab49c899fd8bd47551c8565d8fd8d1d7796c83820c3b1a0eb0a88c29bb33989a589156f7bf07d9efc74034dd9d3f5b73385c3b45c3249bea02783c25f97a6ddb8dc07adf4b176991836d39184b1f678adeda832fff15e3664a00a4e288060045e587774d8a64993a7add73068b16863145e1e8eeb4602e18e19a0340851f4046ad1298962d6e47d05c66329549c839c158748aaad7ae00b943aefa085b127bc2a3bd17604283de21b2b3c9aa8f1d4b7b85c94d8105a46fe32c77688a00f531d62b3c5435324c01009c284fe31277e8d38302b75ea01be89f09e205969a00011c8351c0e3d639ac54b9d3a59de630b16a67de8270d7d6064d0a67e93f9cca048780d32b7f2db88650b51c46f46fd0a68795edee1fd5ecee6eb3595741d9669a0c91afd74eaf8e08a997061a62b354e2516fdc494e8e26cc50ceeb8f4a175608ba0e2c07f1b48fab80eecb340f5882e8c7b32ee416e4045c61f1df646a133487303a01a1eff78435a7a29a29463bdc3486ae81364b00bea82ba0fdf67a110770f2261a04f2eb440ba71c72da5fd7f0e439018d6671dc809f747213a1ea755848124e994a074ff9f37fce99daa3ed01dd763076450022996fc729be2cc43c61ec5182c2366a0b80b36b7b621112592f52390b89748d422e9b1517c4b0203b8176a53f89d4a6680","0xf90211a0b25f283bd01a8c8b2418049f9585bc37ff2c1e2e12eab4b7f64ae1f26647389aa02ad96c150d7c3c9c194d30315456852cf6a0a940e0191ae5d04007454823d4e9a0b220cf7a855e2dbcc0b973134e2e119b982d7d40dbb1b27d99816c41f40e829aa049224431da84cbf1b7ae813abcc9ef4c1dfc1760f6ddc5d57f7354bf3cbf6cc4a015191f879ac115b362f0257fd3eedb789537e836574a5b1abf1c9982ebe3bdfea07913c1b6e7282569d2d421e9fa2257f5d1698e93303bc49b941704287d7aaefea0a526576981ce6fd9f2bd48dd2ca6d5272f2fbdc85f0ee35a295f6ccd97ae8765a0313fad407f0c737c29024c02a890c4ecc12d7771c05ab7b435e5087a7cdef4d9a0d2044603cba9d4afdaf6fd2470e729ef3a65242de71276f20d59accfa6b53a7ca0457caacb9370c09b15f7d904adefd2308be94e23669ba5f43241ffff5f438a0aa09fb2dd45a383a0cc088a72b14117e1e9b7d6889218f3ac7631e8de644c5cb76da0c675dcd4d3fb692b514851c6106e2b09e6f5661d56a0a32ae02e2efc1515c235a074949a59ff1bdba87548510d6e404ec4532f4456dfdec8e753d92fda11a3088ba0a328c6ab1ab8f70db4d23e95bb163c13ba0c508f063a5b1393a4efd7ff375f05a0c722fe3ce796998269373cbb2fc229b2bdf2c43c6c2df003309422e043ce6c03a024e69343286eec44fa4744f6907209116e5383cff3fa98fe81ba06e7e8d4366680","0xf90211a00e99ba2198124b8241ea304551fe973215829e2fbc0438d67922707a2a847432a0bb9ce24fd527879c5fe6dbbec1ef5a05ed9d1ca88e921d140bafbec1112f6a6aa099787fd6c7a1989229c4291ef5267335e66152ce417daea46e66d19cb6f81d1ca0e430ff4b8d5621baa5978673344e78b4d8b4df51431b6e63785267c98a24ce18a0bb3e91a825fe3d42ed270a93e9ad1aabd566c40cb28e622f7f1d7ee967c8afd6a0aa364b0056870c6507bc3262a5f851ecb13684088bdb13996d3cb2db401ce3ffa0a3732eba4c7a6e062665ab5be08acb986c3db87556fb138548cc900ff1e56995a026b088e90c9738b8ce16e853107a937a50d52726a24f9f6ce60f587762eb45a2a006c9d5bc3c064b5c1fb565bff91cace9161c64ae653a329610c1dcf34d434429a06c16df2edc70656d322d0c2403bad7d45bc790ffc3e7adeef856d98ea6afc91ba0ae05ed5d6c34b5da29c2e94d7880aeba0906f95f4ec10b132a1d4766a0701c98a01470a86aa350d1ada0c082eac75de828a851f9c8c7c4aa49b1556fe3a5574966a0334eef025100a6da1033710dd98e0475f29d3d7e397caf618ca71c336c5f4f49a0ef0b3abbebcff34d6a8a8f5cdbfbd154ab3452b58dcb09de58ec983644963675a041857e865ec38e200a13bc1a3cb71c7d69aeef7ffdee8be515c9a5b691ce091fa059edd0eb3bbec36bbf38a19802d4646c00ba821ab55fdeea12e15bab62c4e1e580","0xf90211a0af0c7fa65ffcb84c31e68c1cf00e1a20bf8bb497c39883e19b66a99975b03431a0c492cab3623eb7926069794c3c718733e16c5fd0d4a13fb7c752ee9809aac7ada05003cea7132aa70d6f36731d60640a90bcd8f4fd493e4540d5ab1b4943679c0ca0fd700683405b1d2306b586dd3b5b2f92f1692fae20d17cd8b8e59d09b9c6670da01db8683910e46e56e8afeb9fe2b7c35382e5a0914d7b0dd8f0e8cb9981ba7435a0fa7f75d73aa73c35824387bec81388315caa4aee3f4f5562f971beb256c62d49a0ee478e420d83f413e8568dacfd5d83f83a5dd7c45f494b504828e5dc962f0e3ea094b95444a917ac94a675681f6bf851172ad0969801a783a63a71edafed45e7a7a0a0c46586e109abe80fe50361dd582e3f143cb416828239faa43bb2b890869501a0ae051d5d43634c68bf9c97823256cc68580f194dfdbd0c301140c7ca5853430ca0660b9365bb77ec9cdc6eb95516c162dca20727c6f828dbbeb1ae110dde4d3134a09feb1b75e84ff6722e4d837bfb6d207b6ee3b21b86844a01140ce293813b49a1a0ed58a70b04efa3bdc0babe2abfa20824a75d61d52291bfdb5cf08597800764d6a020a2d5d3a83f9e35ad9fd1c448626d90af0eb3efefaa4f2f93207b4096ef5507a0fc8efc4484dcf0a54f0574de9aaade0dcff6ec3599edb9f82efb26b6566dcaeaa032f7e79856db3fd984f72bb2c93d4dab328198d355a61c975fab1f08bdb2046580"],balance:"0x0",codeHash:"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",nonce:"0x0",storageHash:"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",storageProof:[{key:"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",proof:["0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280","0xf90191a0f0c5b800b542001597f2b7a8e106ac0e2849d2cc1df1727ac35c4ea3965f1c9180a08537f2e248702a6ae2a57e9110a5740f5772c876389739ac90debd6a0692713ea00b3a26a05b5494fb3ff6f0b3897688a5581066b20b07ebab9252d169d928717fa0a9a54d84976d134d6dba06a65064c7f3a964a75947d452db6f6bb4b6c47b43aaa01e2a1ed3d1572b872bbf09ee44d2ed737da31f01de3c0f4b4e1f046740066461a076f251d160b9a02eb0b5c1d83b61c9cdd4f37361705e79a45529bf49801fb824a0774a01a624cb14a50d17f2fe4b7ae6af8a67bbb029177ccc3dd729a734484d3ea05921b8a19aebe4fff5a36071e311778f9b93459183fdf7f6d870b401fa25dcbba0c8d71dd13d2806e2865a5c2cfa447f626471bf0b66182a8fd07230434e1cad2680a0e9864fdfaf3693b2602f56cd938ccd494b8634b1f91800ef02203a3609ca4c21a0c69d174ad6b6e58b0bd05914352839ec60915cd066dd2bee2a48016139687f21a0513dd5514fd6bad56871711441d38de2821cc6913cb192416b0385f025650731808080"],value:"0x1"}]}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getStorageAt",summary:"Returns the value from a storage position at a given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Storage slot",required:!0,schema:{$ref:"#/components/schemas/uint256"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Value",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_getStorageAt example",params:[{name:"Address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{name:"Storage slot",value:"0x0"},{name:"Block",value:"latest"}],result:{name:"Value",value:"0x0000000000000000000000000000000000000000000000000000000000000000"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByBlockHashAndIndex",summary:"Returns information about a transaction by block hash and transaction index position.",params:[{name:"Block hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}},{name:"Transaction index",required:!0,schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByBlockHashAndIndex example",params:[{name:"Block hash",value:"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7"},{name:"Transaction index",value:"0x2"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByBlockNumberAndIndex",summary:"Returns information about a transaction by block number and transaction index position.",params:[{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"Transaction index",required:!0,schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByBlockNumberAndIndex example",params:[{name:"Block",value:"0x1442e"},{name:"Transaction index",value:"0x2"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByHash",summary:"Returns the information about a transaction requested by transaction hash.",params:[{name:"Transaction hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByHash example",params:[{name:"Transaction hash",value:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionCount",summary:"Returns the number of transactions sent from an address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Transaction count",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_getTransactionCount example",params:[{name:"Address",value:"0xc94770007dda54cF92009BFF0dE90c06F603a09f"},{name:"Block",value:"latest"}],result:{name:"Transaction count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionReceipt",summary:"Returns the receipt of a transaction by transaction hash.",params:[{name:"Transaction hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Receipt information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/ReceiptInfo"}]}},examples:[{name:"eth_getTransactionReceipt example",params:[{name:"Transaction hash",value:"0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"}],result:{name:"Receipt information",value:{blockHash:"0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",blockNumber:"0x50",contractAddress:null,cumulativeGasUsed:"0x5208",from:"0x627306090abab3a6e1400e9345bc60c78a8bef57",gasUsed:"0x5208",blobGasUsed:"0x20000",effectiveGasPrice:"0x1",blobGasPrice:"0x3",logs:[],logsBloom:"0xstatus:"0x1",to:"0xf17f52151ebef6c7334fad080c5704d77216b732",transactionHash:"0xc00e97af59c6f88de163306935f7682af1a34c67245e414537d02e422815efc3",transactionIndex:"0x0"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getUncleCountByBlockHash",summary:"Returns the number of uncles in a block from a block matching the given block hash.",params:[{name:"Block hash",schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Uncle count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Uncle count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getUncleCountByBlockHash example",params:[{name:"Block hash",value:"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"}],result:{name:"Uncle count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getUncleCountByBlockNumber",summary:"Returns the number of transactions in a block matching the given block number.",params:[{name:"Block",schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Uncle count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Uncle count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getUncleCountByBlockNumber example",params:[{name:"Block",value:"0xe8"}],result:{name:"Uncle count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newBlockFilter",summary:"Creates a filter in the node, to notify when a new block arrives.",params:[],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newBlockFilter example",params:[],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newFilter",summary:"Creates a filter object, based on filter options, to notify when the state changes (logs).",params:[{name:"Filter",schema:{$ref:"#/components/schemas/Filter"}}],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newFilter example",params:[{name:"Filter",value:{fromBlock:"0x137d3c2",toBlock:"0x137d3c3",address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",topics:[]}}],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newPendingTransactionFilter",summary:"Creates a filter in the node, to notify when new pending transactions arrive.",params:[],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newPendingTransactionFilter example",params:[],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_sendRawTransaction",summary:"Submits a raw transaction. You can create and sign a transaction externally using a library such as [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.org/). For [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) transactions, the raw form must be the network form. This means it includes the blobs, KZG commitments, and KZG proofs.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/bytes"}}],result:{name:"Transaction hash",schema:{$ref:"#/components/schemas/hash32"}},examples:[{name:"eth_sendRawTransaction example",params:[{name:"Transaction",value:"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"}],result:{name:"Transaction hash",value:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_syncing",summary:"Returns an object with data about the sync status or false.",params:[],result:{name:"Syncing status",schema:{$ref:"#/components/schemas/SyncingStatus"}},examples:[{name:"eth_syncing example",params:[],result:{name:"Syncing status",value:{startingBlock:"0x0",currentBlock:"0x1518",highestBlock:"0x9567a3"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_uninstallFilter",summary:"Uninstalls a filter with given id.",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Success",schema:{type:"boolean"}},examples:[{name:"eth_uninstallFilter example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Success",value:!0}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]}],components:{errors:{UserRejected:{code:4001,message:"User rejected the request."},InvalidParams:{code:-32602,message:"The wallet cannot parse the request."},Unauthorized:{code:4100,message:"The requested account and/or method has not been authorized by the user."}},schemas:{TypedData:{title:"Typed data",description:"Object containing information about the typed data to sign.",type:"object",required:["types","primaryType","domain","message"],properties:{types:{type:"object",description:"Object containing type information.",required:["EIP712Domain"],properties:{EIP712Domain:{type:"array",items:{type:"object",title:"Domain separator value",description:"Object containing information about the domain separator value.",properties:{name:{type:"string",description:"Name of the domain separator value."},type:{type:"string",description:"Data type of the domain separator value."}}},description:"An array specifying one or more of the following domain separator values: <br><br> <ul>\n  <li>`name` - The user-readable name of the signing domain, that is, the name of the dapp or the protocol.</li>\n  <li>`version` - The current major version of the signing domain.</li>\n  <li>`chainId` - The chain ID of the network.</li>\n  <li>`verifyingContract` - The address of the contract that will verify the signature.</li>\n  <li>`salt` - A disambiguating salt for the protocol.</li>\n</ul>"}},additionalProperties:{type:"array",required:["name","type"],items:{type:"object",properties:{name:{type:"string"},type:{type:"string"}}}}},domain:{type:"object",description:"Object containing the domain separator values specified in the `EIP712Domain` type."},primaryType:{type:"string",description:"The primary type of the message."},message:{type:"object",description:"The message you're proposing the user to sign."}}},SendCallsParameter:{title:"Calls",description:"An object containing information about a batch of calls.",type:"object",required:["version","from","chainId","atomicRequired","calls"],properties:{version:{description:"The version of the API format. This must be `2.0.0`.",type:"string"},id:{description:"The ID of the batch of calls.",type:"string"},from:{description:"The sender's address.",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"},chainId:{description:"The [EIP-155](https://eips.ethereum.org/EIPS/eip-155) chain ID of the calls. This must match the currently selected network in the wallet.",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},atomicRequired:{description:"`true` if the wallet must execute all calls atomically. If `false`, the wallet may execute the calls sequentially without atomicity. If `false` and the wallet is capable of executing the calls atomically, it may do so.",type:"boolean"},calls:{type:"array",description:"An array of call objects.",items:{title:"Call",description:"An object containing information about the call.",type:"object",properties:{to:{description:"The address of the call's recipient.",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"},data:{description:"The data to send with the call.",type:"string",pattern:"^0x[0-9a-f]*$"},value:{description:"The value to send with the call.",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},capabilities:{description:"Dapps can use this object to communicate with the wallet about supported capabilities.",type:"object"}}}},capabilities:{description:"Dapps can use this object to communicate with the wallet about supported capabilities.",type:"object"}}},AddEthereumChainParameter:{title:"Chain",description:"Object containing information about the chain to add.",type:"object",required:["chainId","chainName","nativeCurrency","rpcUrls"],properties:{chainId:{description:"The chain ID as a `0x`-prefixed hexadecimal string, per the `eth_chainId` method. MetaMask compares this chain ID value with the `eth_chainId` return value. If these values aren't identical, MetaMask rejects the request.",type:"string"},blockExplorerUrls:{description:"(Optional) An array of one or more URLs pointing to block explorer sites for the chain.",type:"array",items:{type:"string",description:"Block explorer URL."}},chainName:{description:"A human-readable name for the chain.",type:"string"},iconUrls:{description:"(Optional) An array of one or more URLs pointing to icons that can be used to visually identify the chain. Note: MetaMask will not currently display these icons. You can still include icon URLs so they are used if MetaMask incorporates them into the display of custom networks in the future.",type:"array",items:{format:"uri",type:"string",description:"Icon URL."}},nativeCurrency:{$ref:"#/components/schemas/NativeCurrency"},rpcUrls:{description:"An array of one or more URLs pointing to RPC endpoints that can be used to communicate with the chain. At least one item is required, and only the first item is used.",type:"array",minItems:1,items:{format:"uri",type:"string",description:"RPC URL."}}}},NativeCurrency:{title:"NativeCurrency",type:"object",description:"An object containing information about the native currency of the chain.",required:["decimals","symbol"],properties:{decimals:{description:"A non-negative integer representing the number of decimals the native currency uses.",minimum:0,type:"integer"},name:{description:"A human-readable name of the native currency.",type:"string"},symbol:{description:"A human-readable symbol of the native currency.",type:"string"}}},Caveats:{title:"Caveats",description:"An array of caveats that specify restrictions on the permission.",type:"array",items:{title:"Caveat",description:"Object containing information about the caveat.",type:"object",properties:{type:{title:"Type",type:"string",description:"Type of caveat."},value:{title:"CaveatValue",description:"Value of the caveat."},name:{title:"Name",type:"string",description:"Name of the caveat."}}}},Permission:{title:"Permission",description:"Object containing information about the permission.",type:"object",properties:{id:{description:"The permission ID.",type:"string"},parentCapability:{description:"The name of the permission being granted. For example, `eth_accounts` or `endowment:permitted-chains`.",type:"string"},invoker:{description:"The URI of the dapp being granted this permission.",type:"string"},caveats:{$ref:"#/components/schemas/Caveats"},date:{description:"The timestamp of the permission request.",type:"number"}}},PermissionsList:{title:"Permissions list",description:"An array of the user's permissions.",type:"array",items:{$ref:"#/components/schemas/Permission"}},address:{title:"hex encoded address",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"},addresses:{title:"hex encoded address",type:"array",items:{$ref:"#/components/schemas/address"}},byte:{title:"hex encoded byte",type:"string",pattern:"^0x([0-9a-fA-F]?){1,2}$"},bytes:{title:"hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]*$"},bytesMax32:{title:"32 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{0,64}$"},bytes8:{title:"8 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{16}$"},bytes32:{title:"32 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{64}$"},bytes48:{title:"48 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{96}$"},bytes96:{title:"96 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{192}$"},bytes256:{title:"256 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{512}$"},bytes65:{title:"65 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{130}$"},ratio:{title:"normalized ratio",type:"number",minimum:0,maximum:1},uint:{title:"hex encoded unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},uint64:{title:"hex encoded 64 bit unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]{0,15})|0$"},uint256:{title:"hex encoded 256 bit unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]{0,31})|0$"},hash32:{title:"32 byte hex value",type:"string",pattern:"^0x[0-9a-f]{64}$"},notFound:{title:"Not Found (null)",type:"null"},Block:{title:"Block object",type:"object",required:["hash","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","number","gasLimit","gasUsed","timestamp","extraData","mixHash","nonce","size","transactions","uncles"],additionalProperties:!1,properties:{hash:{title:"Hash",$ref:"#/components/schemas/hash32"},parentHash:{title:"Parent block hash",$ref:"#/components/schemas/hash32"},sha3Uncles:{title:"Ommers hash",$ref:"#/components/schemas/hash32"},miner:{title:"Coinbase",$ref:"#/components/schemas/address"},stateRoot:{title:"State root",$ref:"#/components/schemas/hash32"},transactionsRoot:{title:"Transactions root",$ref:"#/components/schemas/hash32"},receiptsRoot:{title:"Receipts root",$ref:"#/components/schemas/hash32"},logsBloom:{title:"Bloom filter",$ref:"#/components/schemas/bytes256"},difficulty:{title:"Difficulty",$ref:"#/components/schemas/uint"},number:{title:"Number",$ref:"#/components/schemas/uint"},gasLimit:{title:"Gas limit",$ref:"#/components/schemas/uint"},gasUsed:{title:"Gas used",$ref:"#/components/schemas/uint"},timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint"},extraData:{title:"Extra data",$ref:"#/components/schemas/bytes"},mixHash:{title:"Mix hash",$ref:"#/components/schemas/hash32"},nonce:{title:"Nonce",$ref:"#/components/schemas/bytes8"},baseFeePerGas:{title:"Base fee per gas",$ref:"#/components/schemas/uint"},withdrawalsRoot:{title:"Withdrawals root",$ref:"#/components/schemas/hash32"},blobGasUsed:{title:"Blob gas used",$ref:"#/components/schemas/uint"},excessBlobGas:{title:"Excess blob gas",$ref:"#/components/schemas/uint"},parentBeaconBlockRoot:{title:"Parent Beacon Block Root",$ref:"#/components/schemas/hash32"},size:{title:"Block size",$ref:"#/components/schemas/uint"},transactions:{anyOf:[{title:"Transaction hashes",type:"array",items:{$ref:"#/components/schemas/hash32"}},{title:"Full transactions",type:"array",items:{$ref:"#/components/schemas/TransactionInfo"}}]},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/Withdrawal"}},uncles:{title:"Uncles",type:"array",items:{$ref:"#/components/schemas/hash32"}}}},BlockTag:{title:"Block tag",type:"string",enum:["earliest","finalized","safe","latest","pending"],description:"`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"},BlockNumberOrTag:{title:"Block number or tag",oneOf:[{title:"Block number",$ref:"#/components/schemas/uint"},{title:"Block tag",$ref:"#/components/schemas/BlockTag"}]},BlockNumberOrTagOrHash:{title:"Block number, tag, or block hash",anyOf:[{title:"Block number",$ref:"#/components/schemas/uint"},{title:"Block tag",$ref:"#/components/schemas/BlockTag"},{title:"Block hash",$ref:"#/components/schemas/hash32"}]},BadBlock:{title:"Bad block",type:"object",required:["block","hash","rlp"],additionalProperties:!1,properties:{block:{title:"Block",$ref:"#/components/schemas/Block"},hash:{title:"Hash",$ref:"#/components/schemas/hash32"},rlp:{title:"RLP",$ref:"#/components/schemas/bytes"}}},SyncingStatus:{title:"Syncing status",oneOf:[{title:"Syncing progress",type:"object",additionalProperties:!1,properties:{startingBlock:{title:"Starting block",$ref:"#/components/schemas/uint"},currentBlock:{title:"Current block",$ref:"#/components/schemas/uint"},highestBlock:{title:"Highest block",$ref:"#/components/schemas/uint"}}},{title:"Not syncing",description:"Should always return false if not syncing.",type:"boolean"}]},FilterResults:{title:"Filter results",oneOf:[{title:"new block or transaction hashes",type:"array",items:{$ref:"#/components/schemas/hash32"}},{title:"new logs",type:"array",items:{$ref:"#/components/schemas/Log"}}]},Filter:{title:"filter",type:"object",additionalProperties:!1,properties:{fromBlock:{title:"from block",$ref:"#/components/schemas/uint"},toBlock:{title:"to block",$ref:"#/components/schemas/uint"},address:{title:"Address(es)",oneOf:[{title:"Any Address",type:"null"},{title:"Address",$ref:"#/components/schemas/address"},{title:"Addresses",$ref:"#/components/schemas/addresses"}]},topics:{title:"Topics",$ref:"#/components/schemas/FilterTopics"}}},FilterTopics:{title:"Filter Topics",oneOf:[{title:"Any Topic Match",type:"null"},{title:"Specified Filter Topics",type:"array",items:{$ref:"#/components/schemas/FilterTopic"}}]},FilterTopic:{title:"Filter Topic List Entry",oneOf:[{title:"Single Topic Match",$ref:"#/components/schemas/bytes32"},{title:"Multiple Topic Match",type:"array",items:{$ref:"#/components/schemas/bytes32"}}]},Log:{title:"log",type:"object",required:["transactionHash"],additionalProperties:!1,properties:{removed:{title:"removed",type:"boolean"},logIndex:{title:"log index",$ref:"#/components/schemas/uint"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"},transactionHash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},address:{title:"address",$ref:"#/components/schemas/address"},data:{title:"data",$ref:"#/components/schemas/bytes"},topics:{title:"topics",type:"array",items:{$ref:"#/components/schemas/bytes32"}}}},ReceiptInfo:{type:"object",title:"Receipt information",required:["blockHash","blockNumber","from","cumulativeGasUsed","gasUsed","logs","logsBloom","transactionHash","transactionIndex","effectiveGasPrice"],additionalProperties:!1,properties:{type:{title:"type",$ref:"#/components/schemas/byte"},transactionHash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"},blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},from:{title:"from",$ref:"#/components/schemas/address"},to:{title:"to",description:"Address of the receiver or null in a contract creation transaction.",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Recipient Address",$ref:"#/components/schemas/address"}]},cumulativeGasUsed:{title:"cumulative gas used",description:"The sum of gas used by this transaction and all preceding transactions in the same block.",$ref:"#/components/schemas/uint"},gasUsed:{title:"gas used",description:"The amount of gas used for this specific transaction alone.",$ref:"#/components/schemas/uint"},blobGasUsed:{title:"blob gas used",description:"The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844.",$ref:"#/components/schemas/uint"},contractAddress:{title:"contract address",description:"The contract address created, if the transaction was a contract creation, otherwise null.",oneOf:[{$ref:"#/components/schemas/address"},{title:"Null",type:"null"}]},logs:{title:"logs",type:"array",items:{$ref:"#/components/schemas/Log"}},logsBloom:{title:"logs bloom",$ref:"#/components/schemas/bytes256"},root:{title:"state root",description:"The post-transaction state root. Only specified for transactions included before the Byzantium upgrade.",$ref:"#/components/schemas/hash32"},status:{title:"status",description:"Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade.",$ref:"#/components/schemas/uint"},effectiveGasPrice:{title:"effective gas price",description:"The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas).",$ref:"#/components/schemas/uint"},blobGasPrice:{title:"blob gas price",description:"The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844.",$ref:"#/components/schemas/uint"}}},AccountProof:{title:"Account proof",type:"object",required:["address","accountProof","balance","codeHash","nonce","storageHash","storageProof"],additionalProperties:!1,properties:{address:{title:"address",$ref:"#/components/schemas/address"},accountProof:{title:"accountProof",type:"array",items:{$ref:"#/components/schemas/bytes"}},balance:{title:"balance",$ref:"#/components/schemas/uint256"},codeHash:{title:"codeHash",$ref:"#/components/schemas/hash32"},nonce:{title:"nonce",$ref:"#/components/schemas/uint64"},storageHash:{title:"storageHash",$ref:"#/components/schemas/hash32"},storageProof:{title:"Storage proofs",type:"array",items:{$ref:"#/components/schemas/StorageProof"}}}},StorageProof:{title:"Storage proof",type:"object",required:["key","value","proof"],additionalProperties:!1,properties:{key:{title:"key",$ref:"#/components/schemas/bytesMax32"},value:{title:"value",$ref:"#/components/schemas/uint256"},proof:{title:"proof",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},Transaction4844Unsigned:{type:"object",title:"EIP-4844 transaction.",required:["type","nonce","to","gas","value","input","maxPriorityFeePerGas","maxFeePerGas","maxFeePerBlobGas","accessList","blobVersionedHashes","chainId"],properties:{type:{title:"type",$ref:"#/components/schemas/byte"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",$ref:"#/components/schemas/address"},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},maxFeePerBlobGas:{title:"max fee per blob gas",description:"The maximum total fee per gas the sender is willing to pay for blob gas in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},blobVersionedHashes:{title:"blobVersionedHashes",description:"List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",type:"array",items:{$ref:"#/components/schemas/hash32"}},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},AccessListEntry:{title:"Access list entry",type:"object",additionalProperties:!1,properties:{address:{$ref:"#/components/schemas/address"},storageKeys:{type:"array",items:{$ref:"#/components/schemas/hash32"}}}},AccessList:{title:"Access list",type:"array",items:{$ref:"#/components/schemas/AccessListEntry"}},Transaction1559Unsigned:{type:"object",title:"EIP-1559 transaction.",required:["type","nonce","gas","value","input","maxFeePerGas","maxPriorityFeePerGas","gasPrice","chainId","accessList"],properties:{type:{title:"type",type:"string",pattern:"^0x2$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},gasPrice:{title:"gas price",description:"The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},Transaction2930Unsigned:{type:"object",title:"EIP-2930 transaction.",required:["type","nonce","gas","value","input","gasPrice","chainId","accessList"],properties:{type:{title:"type",type:"string",pattern:"^0x1$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},TransactionLegacyUnsigned:{type:"object",title:"Legacy transaction.",required:["type","nonce","gas","value","input","gasPrice"],properties:{type:{title:"type",type:"string",pattern:"^0x0$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},TransactionUnsigned:{oneOf:[{$ref:"#/components/schemas/Transaction4844Unsigned"},{$ref:"#/components/schemas/Transaction1559Unsigned"},{$ref:"#/components/schemas/Transaction2930Unsigned"},{$ref:"#/components/schemas/TransactionLegacyUnsigned"}]},Transaction4844Signed:{title:"Signed 4844 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction4844Unsigned"},{title:"EIP-4844 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},Transaction1559Signed:{title:"Signed 1559 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction1559Unsigned"},{title:"EIP-1559 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},v:{title:"v",description:"For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},Transaction2930Signed:{title:"Signed 2930 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction2930Unsigned"},{title:"EIP-2930 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},v:{title:"v",description:"For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},TransactionLegacySigned:{title:"Signed Legacy Transaction",type:"object",allOf:[{$ref:"#/components/schemas/TransactionLegacyUnsigned"},{title:"Legacy transaction signature properties.",required:["v","r","s"],properties:{v:{title:"v",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},TransactionSigned:{oneOf:[{$ref:"#/components/schemas/Transaction4844Signed"},{$ref:"#/components/schemas/Transaction1559Signed"},{$ref:"#/components/schemas/Transaction2930Signed"},{$ref:"#/components/schemas/TransactionLegacySigned"}]},TransactionInfo:{type:"object",title:"Transaction information",allOf:[{title:"Contextual information",required:["blockHash","blockNumber","from","hash","transactionIndex"],unevaluatedProperties:!1,properties:{blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},from:{title:"from address",$ref:"#/components/schemas/address"},hash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"}}},{$ref:"#/components/schemas/TransactionSigned"}]},GenericTransaction:{type:"object",title:"Transaction object generic to all types",additionalProperties:!1,properties:{type:{title:"type",$ref:"#/components/schemas/byte"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},from:{title:"from address",$ref:"#/components/schemas/address"},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},maxFeePerBlobGas:{title:"max fee per blob gas",description:"The maximum total fee per gas the sender is willing to pay for blob gas in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},blobVersionedHashes:{title:"blobVersionedHashes",description:"List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",type:"array",items:{$ref:"#/components/schemas/hash32"}},blobs:{title:"blobs",description:"Raw blob data.",type:"array",items:{$ref:"#/components/schemas/bytes"}},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},Withdrawal:{type:"object",title:"Validator withdrawal",required:["index","validatorIndex","address","amount"],additionalProperties:!1,properties:{index:{title:"index of withdrawal",$ref:"#/components/schemas/uint64"},validatorIndex:{title:"index of validator that generated withdrawal",$ref:"#/components/schemas/uint64"},address:{title:"recipient address for withdrawal value",$ref:"#/components/schemas/address"},amount:{title:"value contained in withdrawal",$ref:"#/components/schemas/uint256"}}},ForkchoiceStateV1:{title:"Forkchoice state object V1",type:"object",required:["headBlockHash","safeBlockHash","finalizedBlockHash"],properties:{headBlockHash:{title:"Head block hash",$ref:"#/components/schemas/hash32"},safeBlockHash:{title:"Safe block hash",$ref:"#/components/schemas/hash32"},finalizedBlockHash:{title:"Finalized block hash",$ref:"#/components/schemas/hash32"}}},ForkchoiceUpdatedResponseV1:{title:"Forkchoice updated response",type:"object",required:["payloadStatus"],properties:{payloadStatus:{title:"Payload status",$ref:"#/components/schemas/RestrictedPayloadStatusV1"},payloadId:{title:"Payload id",$ref:"#/components/schemas/bytes8"}}},PayloadAttributesV1:{title:"Payload attributes object V1",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient"],properties:{timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint64"},prevRandao:{title:"Previous randao value",$ref:"#/components/schemas/bytes32"},suggestedFeeRecipient:{title:"Suggested fee recipient",$ref:"#/components/schemas/address"}}},PayloadAttributesV2:{title:"Payload attributes object V2",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient","withdrawals"],properties:{timestamp:{$ref:"#/components/schemas/PayloadAttributesV1/properties/timestamp"},prevRandao:{$ref:"#/components/schemas/PayloadAttributesV1/properties/prevRandao"},suggestedFeeRecipient:{$ref:"#/components/schemas/PayloadAttributesV1/properties/suggestedFeeRecipient"},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/WithdrawalV1"}}}},PayloadAttributesV3:{title:"Payload attributes object V3",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient","withdrawals","parentBeaconBlockRoot"],properties:{timestamp:{$ref:"#/components/schemas/PayloadAttributesV2/properties/timestamp"},prevRandao:{$ref:"#/components/schemas/PayloadAttributesV2/properties/prevRandao"},suggestedFeeRecipient:{$ref:"#/components/schemas/PayloadAttributesV2/properties/suggestedFeeRecipient"},withdrawals:{$ref:"#/components/schemas/PayloadAttributesV2/properties/withdrawals"},parentBeaconBlockRoot:{title:"Parent beacon block root",$ref:"#/components/schemas/hash32"}}},PayloadStatusV1:{title:"Payload status object V1",type:"object",required:["status"],properties:{status:{title:"Payload validation status",type:"string",enum:["VALID","INVALID","SYNCING","ACCEPTED","INVALID_BLOCK_HASH"]},latestValidHash:{title:"The hash of the most recent valid block",$ref:"#/components/schemas/hash32"},validationError:{title:"Validation error message",type:"string"}}},RestrictedPayloadStatusV1:{$ref:"#/components/schemas/PayloadStatusV1",properties:{status:{$ref:"#/components/schemas/PayloadStatusV1/properties/status",description:"Set of possible values is restricted to VALID, INVALID, SYNCING",enum:["VALID","INVALID","SYNCING"]},latestValidHash:{$ref:"#/components/schemas/PayloadStatusV1/properties/latestValidHash"},validationError:{$ref:"#/components/schemas/PayloadStatusV1/properties/validationError"}}},PayloadStatusNoInvalidBlockHash:{$ref:"#/components/schemas/PayloadStatusV1",title:"Payload status object deprecating INVALID_BLOCK_HASH status",properties:{status:{$ref:"#/components/schemas/PayloadStatusV1/properties/status",enum:["VALID","INVALID","SYNCING","ACCEPTED"]},latestValidHash:{$ref:"#/components/schemas/PayloadStatusV1/properties/latestValidHash"},validationError:{$ref:"#/components/schemas/PayloadStatusV1/properties/validationError"}}},ExecutionPayloadV1:{title:"Execution payload object V1",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions"],properties:{parentHash:{title:"Parent block hash",$ref:"#/components/schemas/hash32"},feeRecipient:{title:"Recipient of transaction priority fees",$ref:"#/components/schemas/address"},stateRoot:{title:"State root",$ref:"#/components/schemas/hash32"},receiptsRoot:{title:"Receipts root",$ref:"#/components/schemas/hash32"},logsBloom:{title:"Bloom filter",$ref:"#/components/schemas/bytes256"},prevRandao:{title:"Previous randao value",$ref:"#/components/schemas/bytes32"},blockNumber:{title:"Block number",$ref:"#/components/schemas/uint64"},gasLimit:{title:"Gas limit",$ref:"#/components/schemas/uint64"},gasUsed:{title:"Gas used",$ref:"#/components/schemas/uint64"},timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint64"},extraData:{title:"Extra data",$ref:"#/components/schemas/bytesMax32"},baseFeePerGas:{title:"Base fee per gas",$ref:"#/components/schemas/uint256"},blockHash:{title:"Block hash",$ref:"#/components/schemas/hash32"},transactions:{title:"Transactions",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},WithdrawalV1:{title:"Withdrawal object V1",type:"object",required:["index","validatorIndex","address","amount"],properties:{index:{title:"Withdrawal index",$ref:"#/components/schemas/uint64"},validatorIndex:{title:"Validator index",$ref:"#/components/schemas/uint64"},address:{title:"Withdrawal address",$ref:"#/components/schemas/address"},amount:{title:"Withdrawal amount",$ref:"#/components/schemas/uint64"}}},ExecutionPayloadV2:{title:"Execution payload object V2",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/transactions"},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/WithdrawalV1"}}}},ExecutionPayloadV3:{title:"Execution payload object V3",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals","blobGasUsed","excessBlobGas"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/transactions"},withdrawals:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/withdrawals"},blobGasUsed:{title:"Blob gas used",$ref:"#/components/schemas/uint64"},excessBlobGas:{title:"Excess blob gas",$ref:"#/components/schemas/uint64"}}},ExecutionPayloadV4:{title:"Execution payload object V4",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals","blobGasUsed","excessBlobGas","depositRequests","withdrawalRequests","consolidationRequests"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/transactions"},withdrawals:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/withdrawals"},blobGasUsed:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blobGasUsed"},excessBlobGas:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/excessBlobGas"},depositRequests:{title:"Deposit requests",type:"array",items:{$ref:"#/components/schemas/DepositRequestV1"}},withdrawalRequests:{title:"Withdrawals requests",type:"array",items:{$ref:"#/components/schemas/WithdrawalRequestV1"}},consolidationRequests:{title:"Consolidation requests",type:"array",items:{$ref:"#/components/schemas/ConsolidationRequestV1"}}}},ExecutionPayloadBodyV1:{title:"Execution payload body object V1",type:"object",required:["transactions"],properties:{transactions:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/transactions"},withdrawals:{title:"Withdrawals",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalV1"}}}},ExecutionPayloadBodyV2:{title:"Execution payload body object V2",type:"object",required:["transactions"],properties:{transactions:{title:"Transactions",type:"array",items:{$ref:"#/components/schemas/bytes"}},withdrawals:{title:"Withdrawals",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalV1"}},depositRequests:{title:"Deposit requests",type:["array","null"],items:{$ref:"#/components/schemas/DepositRequestV1"}},withdrawalRequests:{title:"Withdrawals requests",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalRequestV1"}},consolidationRequests:{title:"Consolidation requests - array - 'null'",items:{$ref:"#/components/schemas/ConsolidationRequestV1"}}}},BlobsBundleV1:{title:"Blobs bundle object V1",type:"object",required:["commitments","proofs","blobs"],properties:{commitments:{title:"Commitments",type:"array",items:{$ref:"#/components/schemas/bytes48"}},proofs:{title:"Proofs",type:"array",items:{$ref:"#/components/schemas/bytes48"}},blobs:{title:"Blobs",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},DepositRequestV1:{title:"Deposit request object V1",type:"object",required:["pubkey","withdrawalCredentials","amount","signature","index"],properties:{pubkey:{title:"Public key",$ref:"#/components/schemas/bytes48"},withdrawalCredentials:{title:"Withdrawal credentials",$ref:"#/components/schemas/bytes32"},amount:{title:"Deposit amount",$ref:"#/components/schemas/uint64"},signature:{title:"Deposit signature",$ref:"#/components/schemas/bytes96"},index:{title:"Deposit index",$ref:"#/components/schemas/uint64"}}},WithdrawalRequestV1:{title:"Withdrawal request object V1",type:"object",required:["sourceAddress","validatorPubkey","amount"],properties:{sourceAddress:{title:"Source address",$ref:"#/components/schemas/address"},validatorPubkey:{title:"Validator public key",$ref:"#/components/schemas/bytes48"},amount:{title:"Withdraw amount",$ref:"#/components/schemas/uint64"}}},ConsolidationRequestV1:{title:"Consolidation request object V1",type:"object",required:["sourceAddress","sourcePubkey","targetPubkey"],properties:{sourceAddress:{title:"Source address",$ref:"#/components/schemas/address"},sourcePubkey:{title:"Source validator public key",$ref:"#/components/schemas/bytes48"},targetPubkey:{title:"Target validator public key",$ref:"#/components/schemas/bytes48"}}},TransitionConfigurationV1:{title:"Transition configuration object",type:"object",required:["terminalTotalDifficulty","terminalBlockHash","terminalBlockNumber"],properties:{terminalTotalDifficulty:{title:"Terminal total difficulty",$ref:"#/components/schemas/uint256"},terminalBlockHash:{title:"Terminal block hash",$ref:"#/components/schemas/hash32"},terminalBlockNumber:{title:"Terminal block number",$ref:"#/components/schemas/uint64"}}}},tags:{MetaMask:{name:"MetaMask",description:"MetaMask-specific methods."},Restricted:{name:"Restricted",description:"Restricted methods. If a method is restricted, the caller must have the corresponding permission via `wallet_requestPermissions` in order to call it."},Mobile:{name:"Mobile",description:"Mobile-specific methods."},Experimental:{name:"Experimental",description:"Experimental methods."},Deprecated:{name:"Deprecated",description:"Deprecated methods."},Ethereum:{name:"Ethereum API",description:"Ethereum execution API methods."},Multichain:{name:"Multichain API",description:"Multichain API methods."}},contentDescriptors:{},examplePairings:{},links:{},examples:{}}}}}},{package:"@metamask/multichain-api-middleware>@metamask/api-specs",file:"node_modules/@metamask/multichain-api-middleware/node_modules/@metamask/api-specs/dist/build/openrpc.json"}],[2001,{"./build/multichain-openrpc.json":1999,"./build/openrpc.json":2e3},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.MultiChainOpenRPCDocument=s.MetaMaskOpenRPCDocument=void 0;const n=a(e("./build/openrpc.json"));s.MetaMaskOpenRPCDocument=n.default;const r=a(e("./build/multichain-openrpc.json"));s.MultiChainOpenRPCDocument=r.default,s.default=n.default}}},{package:"@metamask/multichain-api-middleware>@metamask/api-specs",file:"node_modules/@metamask/multichain-api-middleware/node_modules/@metamask/api-specs/dist/index.js"}],[201,{"../../../../shared/lib/trace":5342},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.addPersonalMessage=async function({signatureParams:e,signatureController:t}){return n(e,t,"newUnsignedPersonalMessage")},s.addTypedMessage=async function({signatureParams:e,signatureController:t}){return n(e,t,"newUnsignedTypedMessage")};var a=e("../../../../shared/lib/trace");async function n(e,t,s){const[,n]=e,{id:r}=n,i=null==r?void 0:r.toString();(0,a.endTrace)({name:a.TraceName.Middleware,id:i});const o=await t[s](...e);return(0,a.endTrace)({name:a.TraceName.Signature,id:i}),o}}}},{package:"$root$",file:"app/scripts/lib/signature/util.ts"}],[202,{"../../../../shared/constants/app":5244,"../../../../shared/constants/smartTransactions":5271,"../../../../shared/modules/conversion.utils":5354,"../../../../shared/modules/selectors":5370,"../../../../shared/modules/transaction.utils":5377,"../transaction/hooks/delegation-7702-publish":227,"../transaction/util":232,"@metamask/smart-transactions-controller/dist/types":2266,"@metamask/transaction-controller":2587,loglevel:4370},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.publishBatchSmartTransactionHook=function({transactionController:e,smartTransactionsController:t,hookControllerMessenger:s,flatState:a,transactions:n}){const r=n[n.length-1],i=(0,m.getTransactionById)(r.id??"",e);if(!i)throw new Error(`publishBatchSmartTransactionHook: Could not find transaction with id ${r.id}`);const{isSmartTransaction:o,featureFlags:c,isHardwareWalletAccount:l}=Y(a,i.chainId);if(!o)return undefined;return J({transactions:n,transactionController:e,smartTransactionsController:t,controllerMessenger:s,isSmartTransaction:o,isHardwareWallet:l,featureFlags:c,transactionMeta:i})},s.publishSmartTransactionHook=async function({flatState:e,initMessenger:t,signedTx:s,smartTransactionsController:a,transactionController:n,transactionMeta:r}){const{isSmartTransaction:i,featureFlags:o,isHardwareWalletAccount:c}=Y(e,r.chainId);if(i){const e=await z({transactionMeta:r,signedTransactionInHex:s,transactionController:n,smartTransactionsController:a,controllerMessenger:t,isSmartTransaction:i,isHardwareWallet:c,featureFlags:o});if(null!=e&&e.transactionHash)return e}const l=new h.Delegation7702PublishHook({isAtomicBatchSupported:n.isAtomicBatchSupported.bind(n),messenger:t}).getHook();return await l(r,s)},s.submitSmartTransactionHook=s.submitBatchSmartTransactionHook=void 0;var a,n=e("@metamask/smart-transactions-controller/dist/types"),r=e("@metamask/transaction-controller"),i=(a=e("loglevel"))&&a.__esModule?a:{default:a},o=e("../../../../shared/modules/conversion.utils"),c=e("../../../../shared/constants/smartTransactions"),l=e("../../../../shared/modules/transaction.utils"),d=e("../../../../shared/constants/app"),u=e("../../../../shared/modules/selectors"),h=e("../transaction/hooks/delegation-7702-publish"),m=e("../transaction/util");function p(e,t,s){f(e,t),t.set(e,s)}function f(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function g(e,t){return e.get(y(e,t))}function b(e,t,s){return e.set(y(e,t),s),s}function y(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}var w=new WeakMap,v=new WeakMap,k=new WeakMap,T=new WeakMap,S=new WeakMap,P=new WeakMap,_=new WeakMap,E=new WeakMap,C=new WeakMap,A=new WeakMap,M=new WeakMap,I=new WeakMap,x=new WeakMap,O=new WeakMap,j=new WeakSet;class N{constructor(e){!function(e,t){f(e,t),t.add(e)}(this,j),p(this,w,void 0),p(this,v,void 0),p(this,k,void 0),p(this,T,void 0),p(this,S,void 0),p(this,P,void 0),p(this,_,void 0),p(this,E,void 0),p(this,C,void 0),p(this,A,void 0),p(this,M,void 0),p(this,I,void 0),p(this,x,void 0),p(this,O,void 0);const{transactionMeta:t,signedTransactionInHex:s,smartTransactionsController:a,transactionController:n,isSmartTransaction:i,controllerMessenger:o,featureFlags:c,transactions:l}=e;b(v,this,""),b(w,this,!1),b(A,this,t),b(M,this,s),b(E,this,a),b(C,this,n),b(_,this,i),b(T,this,o),b(S,this,c),b(P,this,t.origin!==d.ORIGIN_METAMASK),b(k,this,t.chainId),b(x,this,t.txParams),b(I,this,l),b(O,this,Boolean(t.type!==r.TransactionType.bridge||g(I,this)&&g(I,this).length>0))}async submit(){const e=!!g(A,this).type&&[r.TransactionType.swapAndSend,r.TransactionType.swapApproval,r.TransactionType.bridgeApproval].includes(g(A,this).type),t={transactionHash:undefined};if(!g(_,this)||e||(0,l.isLegacyTransaction)(g(A,this)))return t;let s;g(O,this)&&await y(j,this,B).call(this);try{s=await g(E,this).getFees({...g(x,this),chainId:g(k,this)},undefined,{networkClientId:g(A,this).networkClientId})}catch(e){return i.default.error("Error in smart transaction publish hook, falling back to regular transaction submission",e),y(j,this,F).call(this),t}try{var a;const e=await y(j,this,q).call(this,{getFeesResponse:s}),t=null==e?void 0:e.uuid;if(!t)throw new Error("No smart transaction UUID");await y(j,this,D).call(this,t);let n;if(n=(null===(a=g(S,this))||void 0===a||null===(a=a.smartTransactions)||void 0===a?void 0:a.extensionReturnTxHashAsap)&&null!=e&&e.txHash?e.txHash:await y(j,this,G).call(this,{uuid:t}),null===n)throw new Error("Transaction does not have a transaction hash, there was a problem");return{transactionHash:n}}catch(e){throw i.default.error("Error in smart transaction publish hook",e),y(j,this,F).call(this),e}}async submitBatch(){if(!g(_,this))throw new Error("submitBatch: Smart Transaction is required for batch submissions");g(O,this)&&await y(j,this,B).call(this);try{const e=await y(j,this,q).call(this),t=null==e?void 0:e.uuid;if(!t)throw new Error("submitBatch: No smart transaction UUID");await y(j,this,D).call(this,t);if(null===await y(j,this,G).call(this,{uuid:t}))throw new Error("submitBatch: Transaction does not have a transaction hash, there was a problem");let s;return s=null!=e&&e.txHashes?{results:e.txHashes.map(e=>({transactionHash:e}))}:{results:[]},s}catch(e){throw i.default.error("submitBatch: Error in smart transaction publish batch hook",e),y(j,this,F).call(this),e}}}async function R(e){try{await g(T,this).call("ApprovalController:endFlow",{id:e})}catch(e){}}async function $(e){try{await y(j,this,R).call(this,e),await g(T,this).call("ApprovalController:acceptRequest",e),K._=""}catch(e){i.default.error("Error ending existing approval flow",e)}}async function B(){K._&&await y(j,this,$).call(this,K._);const{id:e}=await g(T,this).call("ApprovalController:startFlow");b(v,this,e),K._=e}async function D(e){g(O,this)&&(y(j,this,U).call(this,{uuid:e}),y(j,this,L).call(this,{uuid:e}))}function F(){g(O,this)&&!g(w,this)&&(b(w,this,!0),y(j,this,R).call(this,g(v,this)),K._===g(v,this)&&(K._=""))}function U({uuid:e}){const t=()=>{y(j,this,F).call(this)};g(T,this).call("ApprovalController:addRequest",{id:g(v,this),origin:origin,type:d.SMART_TRANSACTION_CONFIRMATION_TYPES.showSmartTransactionStatusPage,requestState:{smartTransaction:{status:n.SmartTransactionStatuses.PENDING,creationTime:Date.now(),uuid:e},isDapp:g(P,this),txId:g(A,this).id}},!0).then(t,t)}async function H({smartTransaction:e}){return await g(T,this).call("ApprovalController:updateRequestState",{id:g(v,this),requestState:{smartTransaction:e,isDapp:g(P,this),txId:g(A,this).id}})}async function L({uuid:e}){g(T,this).subscribe("SmartTransactionsController:smartTransaction",async t=>{if(t.uuid===e){const{status:e}=t;if(!e||e===n.SmartTransactionStatuses.PENDING)return;g(w,this)||await y(j,this,H).call(this,{smartTransaction:t})}})}function G({uuid:e}){return new Promise(t=>{g(T,this).subscribe("SmartTransactionsController:smartTransaction",async s=>{if(s.uuid===e){const{status:e,statusMetadata:a}=s;if(!e||e===n.SmartTransactionStatuses.PENDING)return;i.default.debug("Smart Transaction: ",s),null!=a&&a.minedHash?(i.default.debug("Smart Transaction - Received tx hash: ",null==a?void 0:a.minedHash),t(a.minedHash)):t(null)}})})}async function q({getFeesResponse:e}={}){let t=[];if(g(I,this)&&Array.isArray(g(I,this))&&g(I,this).length>0)t=g(I,this).filter(e=>null==e?void 0:e.signedTx).map(e=>e.signedTx);else if(g(M,this))t=[g(M,this)];else if(e){var s;t=await y(j,this,V).call(this,(null===(s=e.tradeTxFees)||void 0===s?void 0:s.fees)??[],!1)}return await g(E,this).submitSignedTransactions({signedTransactions:t,signedCanceledTransactions:[],txParams:g(x,this),transactionMeta:g(A,this),networkClientId:g(A,this).networkClientId})}function W(e,t){if(!g(x,this))throw new Error("Transaction params are required");const s={...g(x,this),maxFeePerGas:`0x${(0,o.decimalToHex)(e.maxFeePerGas)}`,maxPriorityFeePerGas:`0x${(0,o.decimalToHex)(e.maxPriorityFeePerGas)}`,gas:t?`0x${(0,o.decimalToHex)(c.CANCEL_GAS_LIMIT_DEC)}`:g(x,this).gas};return t&&(s.to=s.from,s.data="0x"),s}async function V(e,t){if(!g(x,this)||!g(k,this))throw new Error("Transaction params and chainId are required");const s=e.map(e=>y(j,this,W).call(this,e,t)).map(e=>({...e,chainId:e.chainId||g(k,this)}));return await g(C,this).approveTransactionsWithSameNonce(s,{hasNonce:!0})}var K={_:""};const z=e=>new N(e).submit();s.submitSmartTransactionHook=z;const J=e=>new N(e).submitBatch();function Y(e,t){const s=function(e){return{metamask:e}}(e);return{isSmartTransaction:(0,u.getIsSmartTransaction)(s,t),featureFlags:(0,u.getFeatureFlagsByChainId)(s,t),isHardwareWalletAccount:(0,u.isHardwareWallet)(s)}}s.submitBatchSmartTransactionHook=J}}},{package:"$root$",file:"app/scripts/lib/smart-transaction/smart-transactions.ts"}],[203,{"./snap-keyring":206,"./utils":207},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),Object.defineProperty(s,"getAccountsBySnapId",{enumerable:!0,get:function(){return n.getAccountsBySnapId}}),Object.defineProperty(s,"snapKeyringBuilder",{enumerable:!0,get:function(){return a.snapKeyringBuilder}});var a=e("./snap-keyring"),n=e("./utils")}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/index.ts"}],[204,{"@metamask/keyring-api":1914,"@metamask/permission-controller":2090},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isProtocolAllowed=d,s.keyringSnapPermissionsBuilder=function(e,t){return()=>{if("metamask"===t)return i;if(r.includes(t))return c;const s=e.getSubjectMetadata(t);return(null==s?void 0:s.subjectType)===n.SubjectType.Website&&d(t)?o:[]}};var a=e("@metamask/keyring-api"),n=e("@metamask/permission-controller");const r=["https://app.metamask.io"],i=[a.KeyringRpcMethod.ListAccounts,a.KeyringRpcMethod.GetAccount,a.KeyringRpcMethod.FilterAccountChains,a.KeyringRpcMethod.DeleteAccount,a.KeyringRpcMethod.ListRequests,a.KeyringRpcMethod.GetRequest,a.KeyringRpcMethod.SubmitRequest,a.KeyringRpcMethod.RejectRequest],o=[a.KeyringRpcMethod.ListAccounts,a.KeyringRpcMethod.GetAccount,a.KeyringRpcMethod.CreateAccount,a.KeyringRpcMethod.FilterAccountChains,a.KeyringRpcMethod.UpdateAccount,a.KeyringRpcMethod.DeleteAccount,a.KeyringRpcMethod.ExportAccount,a.KeyringRpcMethod.ListRequests,a.KeyringRpcMethod.GetRequest,a.KeyringRpcMethod.ApproveRequest,a.KeyringRpcMethod.RejectRequest],c=[a.KeyringRpcMethod.ListAccounts,a.KeyringRpcMethod.GetAccount,a.KeyringRpcMethod.GetAccountBalances,a.KeyringRpcMethod.SubmitRequest],l=["https:"];function d(e){try{const t=new URL(e);return l.includes(t.protocol)}catch(e){return!1}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/keyring-snaps-permissions.ts"}],[205,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getSnapAndHardwareInfoForMetrics=async function(e,t,s,a){var n,r,i;if(!a)return{};const o=a.call("AccountsController:getSelectedAccount"),c=o.address;let l;var d;null!==(n=o.metadata.snap)&&void 0!==n&&n.id&&(l=a.call("SnapController:get",null===(d=o.metadata.snap)||void 0===d?void 0:d.id));return{account_type:await e(c),device_model:await t(c),account_hardware_type:await s(c),account_snap_type:null===(r=l)||void 0===r?void 0:r.id,account_snap_version:null===(i=l)||void 0===i?void 0:i.version}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/metrics.ts"}],[206,{"../../../../shared/constants/app":5244,"../../../../shared/constants/metametrics":5259,"../../../../shared/lib/accounts":5284,"../../../../shared/lib/accounts/snaps":5286,"../../../../shared/lib/snaps/snaps":5337,"../../../../shared/lib/translate":5347,"../../../../ui/components/component-library/icon":5918,"./utils/isBlockedUrl":208,"./utils/showResult":209,"@metamask/eth-snap-keyring":1788,"@metamask/snaps-utils":2516,"webextension-polyfill":5227},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.showAccountCreationDialog=k,s.showAccountNameSuggestionDialog=T,s.snapKeyringBuilder=function(e,t){const s=()=>new n.SnapKeyring({messenger:e,callbacks:new A(e,t)});return s.type=n.SnapKeyring.type,s};var a,n=e("@metamask/eth-snap-keyring"),r=(a=e("webextension-polyfill"))&&a.__esModule?a:{default:a},i=e("@metamask/snaps-utils"),o=e("../../../../shared/constants/metametrics"),c=e("../../../../shared/constants/app"),l=e("../../../../shared/lib/translate"),d=e("../../../../ui/components/component-library/icon"),u=e("../../../../shared/lib/accounts"),h=e("../../../../shared/lib/snaps/snaps"),m=e("../../../../shared/lib/accounts/snaps"),p=e("./utils/isBlockedUrl"),f=e("./utils/showResult");function g(e,t,s){b(e,t),t.set(e,s)}function b(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function y(e,t){return e.get(v(e,t))}function w(e,t,s){return e.set(v(e,t),s),s}function v(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}async function k(e,t){try{return Boolean(await t.call("ApprovalController:addRequest",{origin:e,type:c.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountCreation},!0))}catch(e){throw new Error(`Error occurred while showing account creation dialog.\n${e}`)}}async function T(e,t,s){try{return await t.call("ApprovalController:addRequest",{origin:e,type:c.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showNameSnapAccount,requestData:{snapSuggestedAccountName:s}},!0)}catch(e){throw new Error(`Error occurred while showing name account dialog.\n${e}`)}}var S=new WeakMap,P=new WeakMap,_=new WeakMap,E=new WeakMap,C=new WeakSet;class A{constructor(e,{trackEvent:t,persistKeyringHelper:s,removeAccountHelper:a}){!function(e,t){b(e,t),t.add(e)}(this,C),g(this,S,void 0),g(this,P,void 0),g(this,_,void 0),g(this,E,void 0),w(S,this,e),w(P,this,t),w(_,this,s),w(E,this,a)}async addressExists(e){return(await y(S,this).call("KeyringController:getAccounts")).includes(e.toLowerCase())}async redirectUser(e,t,s){if(t.length>0||s.length>0){const a=await(0,p.isBlockedUrl)(t,async()=>await y(S,this).call("PhishingController:maybeUpdateState"),e=>y(S,this).call("PhishingController:testOrigin",e)),n=await y(S,this).call("ApprovalController:addRequest",{origin:e,requestData:{url:t,message:s,isBlockedUrl:a},type:c.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showSnapAccountRedirect},!0);Boolean(n)&&t.length>0?r.default.tabs.create({url:t}):console.log("User refused snap account redirection to:",t)}else console.log("Error occurred when redirecting snap account. url or message must be defined")}async saveState(){await y(_,this).call(this)}async addAccount(e,t,s,a,r="",{displayConfirmation:o,displayAccountNameSuggestion:c,setSelectedAccount:l}=(0,n.getDefaultInternalOptions)()){(0,i.assertIsValidSnapId)(t);const d=(0,h.isSnapPreinstalled)(t)&&!o,u=(0,h.isSnapPreinstalled)(t)&&!c,m=(0,h.isSnapPreinstalled)(t)&&!l,{accountName:p}=await v(C,this,O).call(this,{snapId:t,skipConfirmationDialog:d,skipAccountNameSuggestionDialog:u,accountNameSuggestion:r,handleUserInput:s});v(C,this,j).call(this,{address:e,snapId:t,skipConfirmationDialog:d,skipSetSelectedAccountStep:m,accountName:p,onceSaved:a,defaultAccountNameChosen:Boolean(r)&&p===r})}async removeAccount(e,t,s){(0,i.assertIsValidSnapId)(t);const a=(0,m.getSnapName)(t,y(S,this)),{id:n}=y(S,this).call("ApprovalController:startFlow"),r="https://support.metamask.io/managing-my-wallet/accounts-and-addresses/how-to-remove-an-account-from-your-metamask-wallet/",u=e=>{y(P,this).call(this,{event:e,category:o.MetaMetricsEventCategory.Accounts,properties:{account_type:o.MetaMetricsEventAccountType.Snap,snap_id:t,snap_name:a}})};let h=!1;try{if(h=Boolean(await y(S,this).call("ApprovalController:addRequest",{origin:t,type:c.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountRemoval,requestData:{publicAddress:e}},!0)),!h)throw await s(h),new Error("User denied account removal");try{await y(E,this).call(this,e),await s(h),await y(_,this).call(this),u(o.MetaMetricsEventName.RemoveSnapAccountSuccessViewed),await(0,f.showError)(y(S,this),t,{icon:d.IconName.UserCircleRemove,title:(0,l.t)("snapAccountRemoved")},{message:(0,l.t)("snapAccountRemovedDescription"),learnMoreLink:r}),u(o.MetaMetricsEventName.RemoveSnapAccountSuccessClicked)}catch(e){const s=e.message;throw await(0,f.showError)(y(S,this),t,{icon:d.IconName.UserCircleRemove,title:(0,l.t)("snapAccountRemovalFailed")},{message:(0,l.t)("snapAccountRemovalFailedDescription",a),learnMoreLink:r,error:s}),u(o.MetaMetricsEventName.AccountRemoveFailed),new Error(`Error occurred while removing snap account: ${s}`)}}finally{h&&u(o.MetaMetricsEventName.AccountRemoved),y(S,this).call("ApprovalController:endFlow",{id:n})}}}async function M(e){const{id:t}=y(S,this).call("ApprovalController:startFlow");try{return await e(t)}finally{y(S,this).call("ApprovalController:endFlow",{id:t})}}async function I(e,t){const{success:s,name:a}=await T(e,y(S,this),t);return{success:s,accountName:a}}async function x(e){const t=await y(S,this).call("AccountsController:listMultichainAccounts");return{success:!0,accountName:(0,u.getUniqueAccountName)(t,e)}}async function O({snapId:e,skipConfirmationDialog:t,skipAccountNameSuggestionDialog:s,handleUserInput:a,accountNameSuggestion:n}){return await v(C,this,M).call(this,async r=>{{const s=t||await k(e,y(S,this));if(!s)throw await a(s),new Error("User denied account creation")}{const{success:t,accountName:r}=s?await v(C,this,x).call(this,n):await v(C,this,I).call(this,e,n);if(await a(t),!t)throw new Error("User denied account creation");return{accountName:r}}})}async function j({address:e,snapId:t,skipConfirmationDialog:s,skipSetSelectedAccountStep:a,accountName:n,onceSaved:r,defaultAccountNameChosen:i}){const c="https://support.metamask.io/managing-my-wallet/accounts-and-addresses/how-to-add-accounts-in-your-wallet/",u=(0,m.getSnapName)(t,y(S,this)),h=e=>{y(P,this).call(this,{event:e,category:o.MetaMetricsEventCategory.Accounts,properties:{account_type:o.MetaMetricsEventAccountType.Snap,snap_id:t,snap_name:u,...e===o.MetaMetricsEventName.AccountAdded&&{is_suggested_name:i}}})};await v(C,this,M).call(this,async i=>{try{const i=await r;a||y(S,this).call("AccountsController:setSelectedAccount",i),n&&y(S,this).call("AccountsController:setAccountName",i,n),s||(h(o.MetaMetricsEventName.AddSnapAccountSuccessViewed),await(0,f.showSuccess)(y(S,this),t,{icon:d.IconName.UserCircleAdd,title:(0,l.t)("snapAccountCreated")},{message:(0,l.t)("snapAccountCreatedDescription"),address:e,learnMoreLink:c}),h(o.MetaMetricsEventName.AddSnapAccountSuccessClicked)),h(o.MetaMetricsEventName.AccountAdded)}catch(e){const s=e.message;await(0,f.showError)(y(S,this),t,{icon:d.IconName.UserCircleAdd,title:(0,l.t)("snapAccountCreationFailed")},{message:(0,l.t)("snapAccountCreationFailedDescription",u),learnMoreLink:c,error:s}),console.error("Error occurred while creating snap account:",s)}})}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/snap-keyring.ts"}],[2068,{"./push-utils.cjs":2069},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createSubscribeToPushNotifications=s.deleteRegToken=s.createRegToken=void 0;var a=e("./push-utils.cjs");Object.defineProperty(s,"createRegToken",{enumerable:!0,get:function(){return a.createRegToken}}),Object.defineProperty(s,"deleteRegToken",{enumerable:!0,get:function(){return a.deleteRegToken}}),Object.defineProperty(s,"createSubscribeToPushNotifications",{enumerable:!0,get:function(){return a.createSubscribeToPushNotifications}})}}},{package:"@metamask/notification-services-controller",file:"node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/web/index.cjs"}],[2069,{"../../NotificationServicesController/index.cjs":2042,"../../shared/to-raw-notification.cjs":2073,"firebase/app":3952,"firebase/messaging":3953,"firebase/messaging/sw":3954,loglevel:4370},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.createSubscribeToPushNotifications=s.deleteRegToken=s.createRegToken=s.supportedCache=void 0;const n=e("firebase/app"),r=e("firebase/messaging"),i=e("firebase/messaging/sw"),o=a(e("loglevel")),c=e("../../NotificationServicesController/index.cjs"),l=e("../../shared/to-raw-notification.cjs");s.supportedCache=null;const d=async e=>{if(!await(async()=>(s.supportedCache??(s.supportedCache=await(0,i.isSupported)()),s.supportedCache))())return null;const t=await(async e=>{try{return(0,n.getApp)()}catch{const t={apiKey:e.apiKey,authDomain:e.authDomain,storageBucket:e.storageBucket,projectId:e.projectId,messagingSenderId:e.messagingSenderId,appId:e.appId,measurementId:e.measurementId};return(0,n.initializeApp)(t)}})(e);return(0,i.getMessaging)(t)};s.createRegToken=async function(e){try{const t=await d(e);if(!t)return null;return await(0,r.getToken)(t,{serviceWorkerRegistration:self.registration,vapidKey:e.vapidKey})}catch{return null}},s.deleteRegToken=async function(e){try{const t=await d(e);return!t||(await(0,r.deleteToken)(t),!0)}catch{return!1}},s.createSubscribeToPushNotifications=function(e){return async function(t){const s=await async function(e,t){const s=await d(e);if(!s)return null;const a=(0,i.onBackgroundMessage)(s,async e=>{try{const s=e?.data?.data?JSON.parse(e?.data?.data):undefined;if(!s)return;const a=(0,l.toRawOnChainNotification)(s),n=c.Processors.processNotification(a);await t(n)}catch(t){throw o.default.error("Unable to send push notification:",{notification:e?.data?.data,error:t}),new Error("Unable to send push notification")}});return()=>a()}(t,async t=>{e.messenger.publish("NotificationServicesPushController:onNewNotifications",t),await e.onReceivedHandler(t)}),a=function(e){const t=t=>{const s=t?.notification?.data;e(t,s)};return self.addEventListener("notificationclick",t),()=>self.removeEventListener("notificationclick",t)}((t,s)=>{e.messenger.publish("NotificationServicesPushController:pushNotificationClicked",s),e.onClickHandler(t,s)});return()=>{s?.(),a()}}}}}},{package:"@metamask/notification-services-controller",file:"node_modules/@metamask/notification-services-controller/dist/NotificationServicesPushController/web/push-utils.cjs"}],[207,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getAccountsBySnapId=void 0;s.getAccountsBySnapId=async(e,t)=>{const s=await e();return await s.getAccountsBySnapId(t)}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/utils.ts"}],[2079,{"./ObservableStore":2081},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ComposedStore=void 0;const a=e("./ObservableStore");class n extends a.ObservableStore{constructor(e){super({}),this._children=e||{},Object.keys(this._children).forEach(e=>{const t=this._children[e];this._addChild(e,t)})}_addChild(e,t){const s=t=>{const s=this.getState();s[e]=t,this.putState(s)};t.subscribe(s),s(t.getState())}}s.ComposedStore=n}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/ComposedStore.js"}],[208,{"../keyring-snaps-permissions":204},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isBlockedUrl=void 0;var a=e("../keyring-snaps-permissions");s.isBlockedUrl=async(e,t,s)=>{try{return!(0,a.isProtocolAllowed)(e)||(await t(),s(e).result)}catch(e){return console.error("Invalid URL passed into snap-keyring:",e),!1}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/utils/isBlockedUrl.ts"}],[2080,{"./ObservableStore":2081},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MergedStore=void 0;const a=e("./ObservableStore");class n extends a.ObservableStore{constructor(e=[]){super({}),this._children=e,e.forEach(e=>this._addChild(e)),this._updateWholeState()}_addChild(e){e.subscribe(()=>this._updateWholeState())}_updateWholeState(){const e=this._children.map(e=>e.getState()),t=Object.assign({},...e);this.putState(t)}}s.MergedStore=n}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/MergedStore.js"}],[2081,{"@metamask/safe-event-emitter":2226},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.ObservableStore=void 0;const n=a(e("@metamask/safe-event-emitter"));class r extends n.default{constructor(e){super(),e===undefined?this._state={}:this._state=e}getState(){return this._getState()}putState(e){this._putState(e),this.emit("update",e)}updateState(e){if(e&&"object"==typeof e){const t=this.getState();this.putState(Object.assign(Object.assign({},t),e))}else this.putState(e)}subscribe(e){this.on("update",e)}unsubscribe(e){this.removeListener("update",e)}_getState(){return this._state}_putState(e){this._state=e}}s.ObservableStore=r}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/ObservableStore.js"}],[2082,{"readable-stream":4805},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.storeAsStream=void 0;const a=e("readable-stream");class n extends a.Duplex{constructor(e){super({objectMode:!0}),this.resume(),this.handler=e=>this.push(e),this.obsStore=e,this.obsStore.subscribe(this.handler)}pipe(e,t){const s=super.pipe(e,t);return e.write(this.obsStore.getState()),s}_write(e,t,s){this.obsStore.putState(e),s()}_read(e){return undefined}_destroy(e,t){this.obsStore.unsubscribe(this.handler),super._destroy(e,t)}}s.storeAsStream=function(e){return new n(e)}}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/asStream.js"}],[2083,{"./ComposedStore":2079,"./MergedStore":2080,"./ObservableStore":2081,"./asStream":2082,"./transform":2084},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[s]}})}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./asStream"),s),n(e("./ComposedStore"),s),n(e("./MergedStore"),s),n(e("./ObservableStore"),s),n(e("./transform"),s)}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/index.js"}],[2084,{"readable-stream":4805},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.storeTransformStream=void 0;const a=e("readable-stream");s.storeTransformStream=function(e){return new a.Transform({objectMode:!0,transform:(t,s,a)=>{try{const s=e(t);return a(undefined,s),undefined}catch(e){return a(e),undefined}}})}}}},{package:"@metamask/obs-store",file:"node_modules/@metamask/obs-store/dist/transform.js"}],[209,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.showSuccess=s.showError=void 0;const a=e=>({name:"SnapAuthorshipHeader",key:"snapHeader",properties:{snapId:e}});s.showError=(e,t,s,n)=>e.call("ApprovalController:showError",{header:[a(t)],title:s.title,icon:s.icon,error:{key:"snapAccountErrorMessage",name:"SnapAccountErrorMessage",properties:n}});s.showSuccess=(e,t,s,n)=>e.call("ApprovalController:showSuccess",{header:[a(t)],title:s.title,icon:s.icon,message:{key:"snapAccountSuccessMessage",name:"SnapAccountSuccessMessage",properties:n}})}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/utils/showResult.ts"}],[2097,{"./enums.cjs":2098,"@metamask/base-controller":1140,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.PermissionLogController=void 0;const p=e("@metamask/base-controller"),f=e("@metamask/utils"),g=e("./enums.cjs"),b={permissionHistory:{},permissionActivityLog:[]};class y extends p.BaseController{constructor({messenger:e,restrictedMethods:t,state:s}){super({messenger:e,name:"PermissionLogController",metadata:{permissionHistory:{persist:!0,anonymous:!1},permissionActivityLog:{persist:!1,anonymous:!1}},state:{...b,...s}}),a.add(this),n.set(this,void 0),h(this,n,t,"f")}updateAccountsHistory(e,t){if(0===t.length)return;const s={eth_accounts:{accounts:m(this,a,"m",r).call(this,t,Date.now())}};m(this,a,"m",l).call(this,e,s)}createMiddleware(){return(e,t,s)=>{const{origin:r,method:l}=e,u=l.startsWith(g.WALLET_PREFIX),h="eth_requestAccounts"===l;if(!g.LOG_IGNORE_METHODS.includes(l)&&(u||m(this,n,"f").has(l))||h){const n=m(this,a,"m",i).call(this,e,u),l=m(this,a,"m",d).call(this,e);return void s(e=>{const s=Date.now();m(this,a,"m",o).call(this,n,t,s),l&&!t.error&&t.result&&r&&m(this,a,"m",c).call(this,l,r,t.result,s,h),e()})}s()}}}s.PermissionLogController=y,n=new WeakMap,a=new WeakSet,r=function(e,t){return e.reduce((e,s)=>({...e,[s]:t}),{})},i=function(e,t){const s={id:e.id,method:e.method,methodType:t?g.LOG_METHOD_TYPES.internal:g.LOG_METHOD_TYPES.restricted,origin:e.origin,requestTime:Date.now(),responseTime:null,success:null};return this.update(e=>{const t=[...e.permissionActivityLog,s];e.permissionActivityLog=t.length>g.LOG_LIMIT?t.slice(1):t}),s},o=function(e,t,s){e&&t&&this.update(a=>{a.permissionActivityLog=a.permissionActivityLog.map(a=>a.id===e.id?{...a,success:(0,f.hasProperty)(t,"result"),responseTime:s}:a)})},c=function(e,t,s,n,i){let o;if(i){const e=s;o={eth_accounts:{accounts:m(this,a,"m",r).call(this,e,n),lastApproved:n}}}else{o=s.reduce((t,s)=>{const i=s.parentCapability;if(!e.includes(i))return t;if("eth_accounts"===i){const e=m(this,a,"m",u).call(this,s);return{...t,[i]:{lastApproved:n,accounts:m(this,a,"m",r).call(this,e,n)}}}return{...t,[i]:{lastApproved:n}}},{})}Object.keys(o).length>0&&m(this,a,"m",l).call(this,t,o)},l=function(e,t){const{permissionHistory:s}=this.state,a=s[e]??{},n={...a,...t},r=a.eth_accounts,i=t.eth_accounts;if(r&&i){const e=i.lastApproved??r.lastApproved;n.eth_accounts={lastApproved:e,accounts:{...r.accounts,...i.accounts}}}this.update(t=>{t.permissionHistory={...s,[e]:n}})},d=function(e){const{method:t,params:s}=e;return"eth_requestAccounts"===t?["eth_accounts"]:t===`${g.WALLET_PREFIX}requestPermissions`&&s&&Array.isArray(s)&&s[0]&&"object"==typeof s[0]&&!Array.isArray(s[0])?Object.keys(s[0]):null},u=function(e){if("eth_accounts"!==e.parentCapability||!e.caveats)return[];const t=new Set;for(const s of e.caveats)if(s.type===g.CAVEAT_TYPES.restrictReturnedAccounts&&Array.isArray(s.value))for(const e of s.value)t.add(e);return[...t]}}}},{package:"@metamask/permission-log-controller",file:"node_modules/@metamask/permission-log-controller/dist/PermissionLogController.cjs"}],[2098,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.LOG_LIMIT=s.LOG_METHOD_TYPES=s.LOG_IGNORE_METHODS=s.CAVEAT_TYPES=s.WALLET_PREFIX=void 0,s.WALLET_PREFIX="wallet_",s.CAVEAT_TYPES=Object.freeze({restrictReturnedAccounts:"restrictReturnedAccounts"}),s.LOG_IGNORE_METHODS=["wallet_registerOnboarding","wallet_watchAsset"],function(e){e.restricted="restricted",e.internal="internal"}(a||(s.LOG_METHOD_TYPES=a={})),s.LOG_LIMIT=100}}},{package:"@metamask/permission-log-controller",file:"node_modules/@metamask/permission-log-controller/dist/enums.cjs"}],[2099,{"./PermissionLogController.cjs":2097},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./PermissionLogController.cjs"),s)}}},{package:"@metamask/permission-log-controller",file:"node_modules/@metamask/permission-log-controller/dist/index.cjs"}],[21,{"../../../../shared/modules/environment":5355,"@metamask/gator-permissions-controller":1846,"@metamask/snaps-utils":2516},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.GatorPermissionsControllerInit=void 0;var a=e("@metamask/gator-permissions-controller"),n=e("@metamask/snaps-utils"),r=e("../../../../shared/modules/environment");const i=()=>{const e="npm:@metamask/gator-permissions-snap";if(e!==undefined)try{(0,n.assertIsValidSnapId)(e)}catch(e){throw new Error("GATOR_PERMISSIONS_PROVIDER_SNAP_ID must be set to a valid snap id",{cause:e})}const t={isGatorPermissionsEnabled:(0,r.isGatorPermissionsFeatureEnabled)()};return e&&(t.gatorPermissionsProviderSnapId=e),t};s.GatorPermissionsControllerInit=({controllerMessenger:e,persistedState:t})=>{const s=new a.GatorPermissionsController({messenger:e,state:{...i(),...t.GatorPermissionsController}});return{controller:s,api:{fetchAndUpdateGatorPermissions:s.fetchAndUpdateGatorPermissions.bind(s)}}}}}},{package:"$root$",file:"app/scripts/controller-init/gator-permissions/gator-permissions-controller-init.ts"}],[210,{loglevel:4370},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.tryPostMessage=function(e,t,s){const a={data:{method:t,params:s}};try{return e.postMessage(a),!0}catch(e){return n.default.error("MetaMask - Failed to message to port",e,a),!1}};var a,n=(a=e("loglevel"))&&a.__esModule?a:{default:a}}}},{package:"$root$",file:"app/scripts/lib/start-up-errors/start-up-errors.ts"}],[211,{"../../../../shared/constants/start-up-errors":5273,"../../../../shared/constants/state-corruption":5274,"../start-up-errors/start-up-errors":210,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.CorruptionHandler=void 0,s.hasVault=c;var a=e("@metamask/utils"),n=e("../../../../shared/constants/state-corruption"),r=e("../start-up-errors/start-up-errors"),i=e("../../../../shared/constants/start-up-errors");function o(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function c(e){if((0,a.isObject)(e)&&(0,a.hasProperty)(e,"KeyringController")){const t=e.KeyringController;if((0,a.isObject)(t)&&(0,a.hasProperty)(t,"vault"))return Boolean(t.vault)}return!1}s.CorruptionHandler=class{constructor(){o(this,"connectedPorts",new Set)}async handleStateCorruptionError({port:e,error:t,database:s,repairCallback:o}){const{connectedPorts:l}=this,d=await async function(e,t){let s=(0,a.isObject)(e)&&(0,a.hasProperty)(e,"backup")&&null!==e.backup?e.backup:null;if(!s)try{s=await t.getBackup()??null}catch{s=null}return s}(t,s),u=function(e){if((0,a.isObject)(e)&&(0,a.hasProperty)(e,"PreferencesController")){const t=e.PreferencesController;if((0,a.isObject)(t)&&(0,a.hasProperty)(t,"currentLocale")&&"string"==typeof t.currentLocale)return t.currentLocale}return null}(d),h=Boolean(c(d));return(0,r.tryPostMessage)(e,n.METHOD_DISPLAY_STATE_CORRUPTION_ERROR,{error:{message:t.message,name:t.name,stack:t.stack},currentLocale:u,hasBackup:h})?new Promise((t,s)=>{l.add(e),e.onDisconnect.addListener(function(){l.delete(e),t()}),e.onMessage.addListener(async function e(a){var c;if((null==a||null===(c=a.data)||void 0===c?void 0:c.method)===n.METHOD_REPAIR_DATABASE){l.forEach(t=>t.onMessage.removeListener(e));try{await async function(e){return await navigator.locks.request("repairDatabase",{ifAvailable:!0},async function(t){return null!==t&&(await e(),!0)})}(async function(){try{await o(d)}finally{l.forEach(e=>{(0,r.tryPostMessage)(e,i.RELOAD_WINDOW)})}}),t()}catch(e){s(e)}}})}):Promise.resolve()}}}}},{package:"$root$",file:"app/scripts/lib/state-corruption/state-corruption-recovery.ts"}],[2117,{"./ppom-controller":2118},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.PPOMController=s.NETWORK_CACHE_DURATION=void 0;var a=e("./ppom-controller");Object.defineProperty(s,"NETWORK_CACHE_DURATION",{enumerable:!0,get:function(){return a.NETWORK_CACHE_DURATION}}),Object.defineProperty(s,"PPOMController",{enumerable:!0,get:function(){return a.PPOMController}})}}},{package:"@metamask/ppom-validator",file:"node_modules/@metamask/ppom-validator/dist/index.js"}],[2118,{"./ppom-storage":2119,"./util":2120,"@metamask/base-controller":1140,"@metamask/controller-utils":1224,"await-semaphore":3419},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h,m,p,f,g,b,y,w,v,k,T,S,P,_,E,C,A,M,I,x,O,j,N,R=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},$=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.PPOMController=s.NETWORK_CACHE_DURATION=void 0;const B=e("@metamask/base-controller"),D=e("@metamask/controller-utils"),F=e("await-semaphore"),U=e("./ppom-storage"),H=e("./util");s.NETWORK_CACHE_DURATION=6048e5;const L=["eth_call","eth_blockNumber","eth_createAccessList","eth_getLogs","eth_getFilterLogs","eth_getTransactionByHash","eth_chainId","eth_getBlockByHash","eth_getBlockByNumber","eth_getCode","eth_getStorageAt","eth_getBalance","eth_getTransactionCount","trace_call","trace_callMany","debug_traceCall","trace_filter"],G={versionInfo:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!1},storageMetadata:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!1}},q="PPOMController",W={headers:{"Content-Type":"application/json"}};class V extends B.BaseController{constructor({chainId:e,messenger:t,provider:s,storageBackend:y,securityAlertsEnabled:w,onPreferencesChange:v,ppomProvider:P,cdnBaseUrl:_,providerRequestLimit:E,state:C,blockaidPublicKey:A,nativeCrypto:M}){super({name:q,metadata:G,messenger:t,state:{versionInfo:C?.versionInfo??[],storageMetadata:C?.storageMetadata??[]}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),u.set(this,0),h.set(this,void 0),m.set(this,void 0),p.set(this,{}),f.set(this,void 0),g.set(this,!1),b.set(this,undefined),R(this,h,(0,H.addHexPrefix)(e),"f"),R(this,r,s,"f"),R(this,c,P,"f"),R(this,i,new U.PPOMStorage({storageBackend:y,readMetadata:()=>[...this.state.storageMetadata],writeMetadata:e=>{this.update(t=>{t.storageMetadata=e})}}),"f"),R(this,o,new F.Mutex,"f"),R(this,l,_,"f"),R(this,d,E??300,"f"),R(this,m,w,"f"),R(this,f,A,"f"),R(this,b,M,"f"),v($(this,a,"m",k).bind(this)),$(this,a,"m",T).call(this),$(this,a,"m",S).call(this)}async usePPOM(e,t){const s=t??$(this,h,"f");if(!$(this,m,"f"))throw Error("User has securityAlertsEnabled set to false");if(!(0,H.blockaidValidationSupportedForNetwork)(s))throw Error(`Blockaid validation not available on network with chainId: ${s}`);return await $(this,o,"f").use(async()=>{const t=await $(this,a,"m",_).call(this,s);R(this,u,0,"f"),R(this,p,{},"f");return{...await e(t),providerRequestsCount:{...$(this,p,"f")}}})}}s.PPOMController=V,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,u=new WeakMap,h=new WeakMap,m=new WeakMap,p=new WeakMap,f=new WeakMap,g=new WeakMap,b=new WeakMap,a=new WeakSet,y=async function(){if($(this,m,"f")&&!$(this,g,"f")){const{ppomInit:e}=$(this,c,"f");await e("./ppom_bg.wasm"),R(this,g,!0,"f")}},w=function(){$(this,a,"m",P).call(this).catch(e=>{console.error(`Error in resetting ppom: ${e.message}`)});const{storageMetadata:e}=this.state;this.update(e=>{e.versionInfo=[],e.storageMetadata=[]}),$(this,i,"f").deleteAllFiles(e).catch(e=>{console.error(`Error in deleting files: ${e.message}`)})},v=function(e){const t=this.messagingSystem.call("NetworkController:getNetworkClientById",e.selectedNetworkClientId),{chainId:s}=t.configuration,n=(0,H.addHexPrefix)(s);n!==$(this,h,"f")&&(R(this,h,n,"f"),$(this,a,"m",P).call(this).catch(e=>{console.error(`Error in resetting ppom: ${e.message}`)}))},k=function(e){const t=e.securityAlertsEnabled;t!==$(this,m,"f")&&(R(this,m,t,"f"),t||$(this,a,"m",w).call(this))},T=function(){this.messagingSystem.registerActionHandler(`${q}:usePPOM`,this.usePPOM.bind(this))},S=function(){const e=$(this,a,"m",v).bind(this);this.messagingSystem.subscribe("NetworkController:networkDidChange",e)},P=async function(){await $(this,o,"f").use(async()=>{$(this,n,"f")&&($(this,n,"f").free(),R(this,n,undefined,"f"))})},_=async function(e){const t=await $(this,a,"m",E).call(this);let s;return($(this,n,"f")===undefined||t)&&(s=await $(this,a,"m",N).call(this,e),$(this,h,"f")===e&&($(this,n,"f")&&$(this,n,"f").free(),R(this,n,s,"f")),$(this,i,"f").syncMetadata(this.state.versionInfo).catch(e=>{console.error(`Error while trying to sync metadata: ${e.message}`)})),s},E=async function(){const e=await $(this,a,"m",x).call(this);return!!e&&(this.update(t=>{t.versionInfo=e}),!0)},C=function(e,t){return e.find(e=>e.name===t.name&&e.chainId===t.chainId&&e.version===t.version&&e.checksum===t.checksum)},A=async function(e){const t=await Promise.all(e.map(async e=>{let t;try{t=await $(this,a,"m",M).call(this,e)}catch(t){console.error(`Error in getting file ${e.filePath}: ${t.message}`)}return t?[e.name,new Uint8Array(t)]:undefined}));return t?.filter(e=>e?.[1]!==undefined)},M=async function(e){const{storageMetadata:t}=this.state;if($(this,a,"m",C).call(this,t,e))try{return await $(this,i,"f").readFile(e.name,e.chainId)}catch(e){console.error(`Error in reading file: ${e.message}`)}(0,H.checkFilePath)(e.filePath);const s=(0,H.constructURLHref)($(this,l,"f"),e.filePath),n=await $(this,a,"m",O).call(this,s);return await(0,H.validateSignature)(n,e.hashSignature,$(this,f,"f"),e.filePath,$(this,b,"f")),await $(this,i,"f").writeFile({data:n,...e}).catch(e=>{console.error(`Error in writing file: ${e.message}`)}),n},I=async function(e,t={},s="GET"){const a=await(0,D.safelyExecute)(async()=>(0,D.timeoutFetch)(e,{method:s,cache:"no-cache",redirect:"error",...t},1e4),!0),n=304===a?.status;if(!a?.status||a?.status<200||a?.status>399)throw new Error(`Failed to fetch file with url: ${e}`);return{cached:n,response:a}},x=async function(){const e=(0,H.constructURLHref)($(this,l,"f"),"ppom_version.json"),{cached:t,response:s}=await $(this,a,"m",I).call(this,e,{headers:W});return t&&this.state.versionInfo?.length?undefined:s.json()},O=async function(e){const{response:t}=await $(this,a,"m",I).call(this,e);return await t.arrayBuffer()},j=async function(e,t){if($(this,u,"f")>$(this,d,"f"))return H.PROVIDER_ERRORS.limitExceeded();if(R(this,u,$(this,u,"f")+1,"f"),!L.includes(e))return H.PROVIDER_ERRORS.methodNotSupported();$(this,p,"f")[e]=$(this,p,"f")[e]?Number($(this,p,"f")[e])+1:1;const s=(0,H.createPayload)(e,t);try{const e=await $(this,r,"f").request(s);return{jsonrpc:"2.0",id:s.id,result:e}}catch(e){return{jsonrpc:"2.0",id:s.id,error:e}}},N=async function(e){await $(this,a,"m",y).call(this);const t=this.state.versionInfo.filter(({chainId:t})=>t===e);if(t?.length===undefined||0===t?.length)throw new Error(`Aborting initialising PPOM as no files are found for the network with chainId: ${e}`);const s=await $(this,a,"m",A).call(this,t);if(s?.length!==t?.length)throw new Error(`Aborting initialising PPOM as not all files could not be downloaded for the network with chainId: ${e}`);const{PPOM:n}=$(this,c,"f");return n.new($(this,a,"m",j).bind(this),s)}}}},{package:"@metamask/ppom-validator",file:"node_modules/@metamask/ppom-validator/dist/ppom-controller.js"}],[2119,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},o=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.PPOMStorage=void 0;s.PPOMStorage=class{constructor({storageBackend:e,readMetadata:t,writeMetadata:s}){a.set(this,void 0),n.set(this,void 0),r.set(this,void 0),i(this,a,e,"f"),i(this,n,t,"f"),i(this,r,s,"f")}async syncMetadata(e){const t=o(this,n,"f").call(this),s=[];for(const a of t){try{await this.readFile(a.name,a.chainId)}catch(e){console.error("Error: ",e);continue}e.find(e=>e.name===a.name&&e.chainId===a.chainId&&e.version===a.version&&e.checksum===a.checksum)&&s.push(a)}const i=await o(this,a,"f").dir();for(const{name:e,chainId:t}of i)s.find(s=>s.name===e&&s.chainId===t)||await o(this,a,"f").delete({name:e,chainId:t});return o(this,r,"f").call(this,s),s}async deleteAllFiles(e){for(const t of e){const{name:e,chainId:s}=t;try{await o(this,a,"f").delete({name:e,chainId:s})}catch(t){console.error(`Error in deleting file: ${e}, ${s}`,t)}}}async readFile(e,t){const s=o(this,n,"f").call(this).find(s=>s.name===e&&s.chainId===t);if(!s)throw new Error(`File metadata (${e}, ${t}) not found`);const r=await o(this,a,"f").read({name:e,chainId:t},s.checksum);if(!r)throw new Error(`Storage File (${e}, ${t}) not found`);return r}async writeFile({data:e,name:t,chainId:s,version:i,checksum:c}){await o(this,a,"f").write({name:t,chainId:s},e,c);const l=o(this,n,"f").call(this),d=l.find(e=>e.name===t&&e.chainId===s);d?(d.version=i,d.checksum=c):l.push({name:t,chainId:s,version:i,checksum:c}),o(this,r,"f").call(this,l)}},a=new WeakMap,n=new WeakMap,r=new WeakMap}}},{package:"@metamask/ppom-validator",file:"node_modules/@metamask/ppom-validator/dist/ppom-storage.js"}],[212,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.sanitizeUIState=function(e){const t={...e};for(const e of a)delete t[e];return function(e){const t=e.snaps;if(!t)return;e.snaps=Object.values(t).reduce((e,t)=>(e[t.id]=function(e){const t={...e};return delete t.sourceCode,delete t.auxiliaryFiles,t}(t),e),{})}(t),function(e){const t=e.srpSessionData;if(!t)return;e.srpSessionData=Object.entries(t).reduce((e,[t,s])=>{const a={...s.token};return delete a.accessToken,e[t]={...s,token:a},e},{})}(t),function(e){const t=["vault","vaultEncryptionKey","vaultEncryptionSalt","encryptedSeedlessEncryptionKey","encryptedKeyringEncryptionKey","accessToken","metadataAccessToken","refreshToken","revokeToken"];for(const s of t)delete e[s];const s=e.nodeAuthTokens;s&&(e.nodeAuthTokens=s.map(e=>{const t={...e};return delete t.authToken,t}));const a=e.socialBackupsMetadata;a&&(e.socialBackupsMetadata=a.map(e=>{const t={...e};return delete t.hash,t}))}(t),t};const a=["snapStates","unencryptedSnapStates","phishingLists","whitelist","hotlistLastFetched","stalelistLastFetched","c2DomainBlocklistLastFetched","vault","encryptionKey","encryptionSalt"]}}},{package:"$root$",file:"app/scripts/lib/state-utils.ts"}],[2120,{buffer:3590,"crypto-js":3708,elliptic:3764,"json-rpc-random-id":4193},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&a(t,e,s);return n(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.checkFilePath=s.addHexPrefix=s.constructURLHref=s.validateSignature=s.PROVIDER_ERRORS=s.createPayload=s.IdGenerator=s.blockaidValidationSupportedForNetwork=s.SUPPORTED_NETWORK_CHAINIDS=void 0;const o=r(e("crypto-js")),c=i(e("elliptic")),l=i(e("json-rpc-random-id")),d=c.default.eddsa;s.SUPPORTED_NETWORK_CHAINIDS={MAINNET:"0x1",BSC:"0x38",OPTIMISM:"0xa",POLYGON:"0x89",AVALANCHE:"0xa86a",ARBITRUM:"0xa4b1",LINEA_MAINNET:"0xe708",BASE:"0x2105",SEPOLIA:"0xaa36a7",OPBNB:"0xcc",ZKSYNC:"0x144",SCROLL:"0x82750",BERACHAIN:"0x138d4",METACHAIN_ONE:"0x1b6e6"};s.blockaidValidationSupportedForNetwork=e=>Object.values(s.SUPPORTED_NETWORK_CHAINIDS).some(t=>t===e),s.IdGenerator=(0,l.default)();s.createPayload=(e,t)=>({id:(0,s.IdGenerator)(),jsonrpc:"2.0",method:e,params:t??[]}),s.PROVIDER_ERRORS={limitExceeded:()=>({jsonrpc:"2.0",id:(0,s.IdGenerator)(),error:{code:-32005,message:"Limit exceeded"}}),methodNotSupported:()=>({jsonrpc:"2.0",id:(0,s.IdGenerator)(),error:{code:-32601,message:"Method not supported"}})};s.validateSignature=async(e,s,a,n,r,i)=>{const c=await(async(e,t,s=!0)=>{if(t)return t.createHash("sha256").update(e).digest("hex");if("crypto"in globalThis&&"object"==typeof globalThis.crypto&&globalThis.crypto.subtle?.digest&&s){const t=await globalThis.crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(t)).map(e=>e.toString(16).padStart(2,"0")).join("")}return(0,o.SHA256)(o.default.lib.WordArray.create(e)).toString()})(e,r,i);if(!new d("ed25519").keyFromPublic(a).verify(t.from(c),s))throw Error(`Signature verification failed for file path: ${n}`)};s.constructURLHref=(e,t)=>new URL(`https://${e}/${t}`.replace(/https:\/\/https:\/\//gu,"https://").replace(/\/\//gu,"/")).href;s.addHexPrefix=e=>"string"!=typeof e||e.match(/^-?0x/u)?e:e.match(/^-?0X/u)?e.replace("0X","0x"):`0x${parseInt(e,10).toString(16)}`;s.checkFilePath=e=>{if(!e.match(/^[\w./]+$/u))throw new Error(`Invalid file path for data file: ${e}`)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/ppom-validator",file:"node_modules/@metamask/ppom-validator/dist/util.js"}],[2121,{"./constants.cjs":2122,"@metamask/base-controller":1140,"@metamask/controller-utils":1224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.PreferencesController=s.getDefaultPreferencesState=void 0;const i=e("@metamask/base-controller"),o=e("@metamask/controller-utils"),c=e("./constants.cjs"),l={featureFlags:{persist:!0,anonymous:!0},identities:{persist:!0,anonymous:!1},ipfsGateway:{persist:!0,anonymous:!1},isIpfsGatewayEnabled:{persist:!0,anonymous:!0},isMultiAccountBalancesEnabled:{persist:!0,anonymous:!0},lostIdentities:{persist:!0,anonymous:!1},openSeaEnabled:{persist:!0,anonymous:!0},securityAlertsEnabled:{persist:!0,anonymous:!0},selectedAddress:{persist:!0,anonymous:!1},showTestNetworks:{persist:!0,anonymous:!0},showIncomingTransactions:{persist:!0,anonymous:!0},useNftDetection:{persist:!0,anonymous:!0},useTokenDetection:{persist:!0,anonymous:!0},smartTransactionsOptInStatus:{persist:!0,anonymous:!1},useTransactionSimulations:{persist:!0,anonymous:!0},useMultiRpcMigration:{persist:!0,anonymous:!0},useSafeChainsListValidation:{persist:!0,anonymous:!0},tokenSortConfig:{persist:!0,anonymous:!0},privacyMode:{persist:!0,anonymous:!0}};function d(){return{featureFlags:{},identities:{},ipfsGateway:"https://ipfs.io/ipfs/",isIpfsGatewayEnabled:!0,isMultiAccountBalancesEnabled:!0,lostIdentities:{},openSeaEnabled:!1,securityAlertsEnabled:!1,selectedAddress:"",showIncomingTransactions:{[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.MAINNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.GOERLI]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.BSC]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.BSC_TESTNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.OPTIMISM]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.OPTIMISM_SEPOLIA]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.POLYGON]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.POLYGON_TESTNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.AVALANCHE]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.AVALANCHE_TESTNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.FANTOM]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.FANTOM_TESTNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.SEPOLIA]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_GOERLI]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_SEPOLIA]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_MAINNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM_TESTNET]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONRIVER]:!0,[c.ETHERSCAN_SUPPORTED_CHAIN_IDS.GNOSIS]:!0},showTestNetworks:!1,useNftDetection:!1,useTokenDetection:!0,useMultiRpcMigration:!0,smartTransactionsOptInStatus:!0,useTransactionSimulations:!0,useSafeChainsListValidation:!0,tokenSortConfig:{key:"tokenFiatAmount",order:"dsc",sortCallback:"stringNumeric"},privacyMode:!1}}s.getDefaultPreferencesState=d;class u extends i.BaseController{constructor({messenger:e,state:t}){super({name:"PreferencesController",metadata:l,messenger:e,state:{...d(),...t}}),a.add(this),e.subscribe("KeyringController:stateChange",e=>{const t=new Set;for(const s of e.keyrings)for(const e of s.accounts)t.add(e);t.size>0&&r(this,a,"m",n).call(this,Array.from(t))})}addIdentities(e){const t=e.map(e=>(0,o.toChecksumHexAddress)(e));this.update(e=>{const{identities:s}=e;for(const e of t){if(s[e])continue;const t=Object.keys(s).length;s[e]={name:`Account ${t+1}`,address:e,importTime:Date.now()}}})}removeIdentity(e){e=(0,o.toChecksumHexAddress)(e);const{identities:t}=this.state;t[e]&&this.update(t=>{delete t.identities[e],e===t.selectedAddress&&(t.selectedAddress=Object.keys(t.identities)[0])})}setAccountLabel(e,t){e=(0,o.toChecksumHexAddress)(e),this.update(s=>{const a=s.identities[e]||{};a.name=t,s.identities[e]=a})}setFeatureFlag(e,t){this.update(s=>{s.featureFlags[e]=t})}setSelectedAddress(e){this.update(t=>{t.selectedAddress=(0,o.toChecksumHexAddress)(e)})}setIpfsGateway(e){this.update(t=>{t.ipfsGateway=e})}setUseTokenDetection(e){this.update(t=>{t.useTokenDetection=e})}setUseNftDetection(e){if(e&&!this.state.openSeaEnabled)throw new Error("useNftDetection cannot be enabled if openSeaEnabled is false");this.update(t=>{t.useNftDetection=e})}setOpenSeaEnabled(e){this.update(t=>{t.openSeaEnabled=e,e||(t.useNftDetection=!1)})}setSecurityAlertsEnabled(e){this.update(t=>{t.securityAlertsEnabled=e})}setIsMultiAccountBalancesEnabled(e){this.update(t=>{t.isMultiAccountBalancesEnabled=e})}setShowTestNetworks(e){this.update(t=>{t.showTestNetworks=e})}setIsIpfsGatewayEnabled(e){this.update(t=>{t.isIpfsGatewayEnabled=e})}setEnableNetworkIncomingTransactions(e,t){Object.values(c.ETHERSCAN_SUPPORTED_CHAIN_IDS).includes(e)&&this.update(s=>{s.showIncomingTransactions={...this.state.showIncomingTransactions,[e]:t}})}setUseMultiRpcMigration(e){this.update(t=>{t.useMultiRpcMigration=e,e||(t.useMultiRpcMigration=!1)})}setSmartTransactionsOptInStatus(e){this.update(t=>{t.smartTransactionsOptInStatus=e})}setUseTransactionSimulations(e){this.update(t=>{t.useTransactionSimulations=e})}setTokenSortConfig(e){this.update(t=>{t.tokenSortConfig=e})}setUseSafeChainsListValidation(e){this.update(t=>{t.useSafeChainsListValidation=e})}setPrivacyMode(e){this.update(t=>{t.privacyMode=e})}}s.PreferencesController=u,a=new WeakSet,n=function(e){e=e.map(e=>(0,o.toChecksumHexAddress)(e)),this.update(t=>{const{identities:s}=t,a={};for(const[t,n]of Object.entries(s))e.includes(t)||(a[t]=n,delete s[t]);for(const[e,s]of Object.entries(a))t.lostIdentities[e]=s}),this.addIdentities(e),e.includes(this.state.selectedAddress)||this.update(t=>{t.selectedAddress=e[0]})},s.default=u}}},{package:"@metamask/preferences-controller",file:"node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs"}],[2122,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ETHERSCAN_SUPPORTED_CHAIN_IDS=void 0,s.ETHERSCAN_SUPPORTED_CHAIN_IDS={MAINNET:"0x1",GOERLI:"0x5",BSC:"0x38",BSC_TESTNET:"0x61",OPTIMISM:"0xa",OPTIMISM_SEPOLIA:"0xaa37dc",POLYGON:"0x89",POLYGON_TESTNET:"0x13881",AVALANCHE:"0xa86a",AVALANCHE_TESTNET:"0xa869",FANTOM:"0xfa",FANTOM_TESTNET:"0xfa2",SEPOLIA:"0xaa36a7",LINEA_GOERLI:"0xe704",LINEA_SEPOLIA:"0xe705",LINEA_MAINNET:"0xe708",MOONBEAM:"0x504",MOONBEAM_TESTNET:"0x507",MOONRIVER:"0x505",GNOSIS:"0x64"}}}},{package:"@metamask/preferences-controller",file:"node_modules/@metamask/preferences-controller/dist/constants.cjs"}],[2123,{"./PreferencesController.cjs":2121,"./constants.cjs":2122},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),s.ETHERSCAN_SUPPORTED_CHAIN_IDS=void 0,n(e("./PreferencesController.cjs"),s);var r=e("./constants.cjs");Object.defineProperty(s,"ETHERSCAN_SUPPORTED_CHAIN_IDS",{enumerable:!0,get:function(){return r.ETHERSCAN_SUPPORTED_CHAIN_IDS}})}}},{package:"@metamask/preferences-controller",file:"node_modules/@metamask/preferences-controller/dist/index.cjs"}],[2124,{"../../sdk/index.cjs":2151,"./auth-snap-requests.cjs":2125,"@metamask/base-controller":1140},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h,m,p,f,g,b=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},y=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.defaultState=void 0;const w=e("@metamask/base-controller"),v=e("./auth-snap-requests.cjs"),k=e("../../sdk/index.cjs");s.defaultState={isSignedIn:!1};const T={isSignedIn:{persist:!0,anonymous:!0},srpSessionData:{persist:!0,anonymous:!1}};class S extends w.BaseController{constructor({messenger:e,state:t,config:h,metametrics:p}){if(super({messenger:e,metadata:T,name:"AuthenticationController",state:{...s.defaultState,...t}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,{env:k.Env.PRD}),o.set(this,!1),c.set(this,{setupLockedStateSubscriptions:()=>{const{isUnlocked:e}=this.messagingSystem.call("KeyringController:getState");y(this,o,e,"f"),this.messagingSystem.subscribe("KeyringController:unlock",()=>{y(this,o,!0,"f")}),this.messagingSystem.subscribe("KeyringController:lock",()=>{y(this,o,!1,"f")})}}),f.set(this,{}),!p)throw new Error("`metametrics` field is required");y(this,i,{...b(this,i,"f"),...h},"f"),y(this,n,p,"f"),y(this,r,new k.JwtBearerAuth({env:b(this,i,"f").env,platform:p.agent,type:k.AuthType.SRP},{storage:{getLoginResponse:b(this,a,"m",d).bind(this),setLoginResponse:b(this,a,"m",u).bind(this)},signing:{getIdentifier:b(this,a,"m",m).bind(this),signMessage:b(this,a,"m",g).bind(this)},metametrics:b(this,n,"f")}),"f"),b(this,c,"f").setupLockedStateSubscriptions(),b(this,a,"m",l).call(this)}async performSignIn(){b(this,a,"m",h).call(this,"performSignIn");const e=await b(this,a,"m",p).call(this),t=[];for(const[s]of e){const e=await b(this,r,"f").getAccessToken(s);t.push(e)}return t}performSignOut(){this.update(e=>{e.isSignedIn=!1,e.srpSessionData=undefined})}async getBearerToken(e){return b(this,a,"m",h).call(this,"getBearerToken"),await b(this,r,"f").getAccessToken(e)}async getSessionProfile(e){return b(this,a,"m",h).call(this,"getSessionProfile"),await b(this,r,"f").getUserProfile(e)}async getUserProfileLineage(){return b(this,a,"m",h).call(this,"getUserProfileLineage"),await b(this,r,"f").getUserProfileLineage()}isSignedIn(){return this.state.isSignedIn}}n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,f=new WeakMap,a=new WeakSet,l=function(){this.messagingSystem.registerActionHandler("AuthenticationController:getBearerToken",this.getBearerToken.bind(this)),this.messagingSystem.registerActionHandler("AuthenticationController:getSessionProfile",this.getSessionProfile.bind(this)),this.messagingSystem.registerActionHandler("AuthenticationController:isSignedIn",this.isSignedIn.bind(this)),this.messagingSystem.registerActionHandler("AuthenticationController:performSignIn",this.performSignIn.bind(this)),this.messagingSystem.registerActionHandler("AuthenticationController:performSignOut",this.performSignOut.bind(this)),this.messagingSystem.registerActionHandler("AuthenticationController:getUserProfileLineage",this.getUserProfileLineage.bind(this))},d=async function(e){if(e)return this.state.srpSessionData?.[e]?this.state.srpSessionData[e]:null;const t=Object.values(this.state.srpSessionData||{})?.[0];return t||null},u=async function(e,t){const s=await b(this,n,"f").getMetaMetricsId();this.update(a=>{t&&(a.isSignedIn=!0,a.srpSessionData||(a.srpSessionData={}),a.srpSessionData[t]={...e,profile:{...e.profile,metaMetricsId:s}})})},h=function(e){if(!b(this,o,"f"))throw new Error(`${e} - unable to proceed, wallet is locked`)},m=async function(e){b(this,a,"m",h).call(this,"#snapGetPublicKey");return await this.messagingSystem.call("SnapController:handleRequest",(0,v.createSnapPublicKeyRequest)(e))},p=async function(){b(this,a,"m",h).call(this,"#snapGetAllPublicKeys");return await this.messagingSystem.call("SnapController:handleRequest",(0,v.createSnapAllPublicKeysRequest)())},g=async function(e,t){if((0,k.assertMessageStartsWithMetamask)(e),b(this,f,"f")[e])return b(this,f,"f")[e];b(this,a,"m",h).call(this,"#snapSignMessage");const s=await this.messagingSystem.call("SnapController:handleRequest",(0,v.createSnapSignMessageRequest)(e,t));return b(this,f,"f")[e]=s,s},s.default=S}}},{package:"@metamask/profile-sync-controller",file:"node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/AuthenticationController.cjs"}],[2126,{"./AuthenticationController.cjs":2124,"./mocks/index.cjs":2127},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)},i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&a(t,e,s);return n(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Mocks=s.Controller=void 0;const c=o(e("./AuthenticationController.cjs"));s.Controller=c.default;const l=c.default;s.default=l,r(e("./AuthenticationController.cjs"),s),s.Mocks=i(e("./mocks/index.cjs"))}}},{package:"@metamask/profile-sync-controller",file:"node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/index.cjs"}],[2127,{"./mockResponses.cjs":2128},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./mockResponses.cjs"),s)}}},{package:"@metamask/profile-sync-controller",file:"node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/mocks/index.cjs"}],[2128,{"../../../sdk/mocks/auth.cjs":2152},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getMockAuthAccessTokenResponse=s.MOCK_OATH_TOKEN_RESPONSE=s.getMockAuthLoginResponse=s.MOCK_LOGIN_RESPONSE=s.getMockAuthNonceResponse=s.MOCK_JWT=s.MOCK_NONCE=s.MOCK_NONCE_RESPONSE=void 0;const a=e("../../../sdk/mocks/auth.cjs");s.MOCK_NONCE_RESPONSE=a.MOCK_NONCE_RESPONSE,s.MOCK_NONCE=s.MOCK_NONCE_RESPONSE.nonce,s.MOCK_JWT=a.MOCK_JWT;s.getMockAuthNonceResponse=()=>({url:a.MOCK_NONCE_URL,requestMethod:"GET",response:(e,t,a)=>{const n=t?.split("?identifier=")[1],r=a?.(n??"");return{...s.MOCK_NONCE_RESPONSE,nonce:r??s.MOCK_NONCE_RESPONSE.nonce,identifier:s.MOCK_NONCE_RESPONSE.identifier}}}),s.MOCK_LOGIN_RESPONSE=a.MOCK_SRP_LOGIN_RESPONSE;s.getMockAuthLoginResponse=()=>({url:a.MOCK_SRP_LOGIN_URL,requestMethod:"POST",response:e=>{const t=e?.raw_message.split(":"),a=t?.[t.length-2];return{...s.MOCK_LOGIN_RESPONSE,token:a??s.MOCK_LOGIN_RESPONSE.token,profile:{...s.MOCK_LOGIN_RESPONSE.profile,profile_id:a??s.MOCK_LOGIN_RESPONSE.profile.profile_id,identifier_id:a??s.MOCK_LOGIN_RESPONSE.profile.identifier_id}}}}),s.MOCK_OATH_TOKEN_RESPONSE=a.MOCK_OIDC_TOKEN_RESPONSE;s.getMockAuthAccessTokenResponse=()=>({url:a.MOCK_OIDC_TOKEN_URL,requestMethod:"POST",response:e=>{const t=new URLSearchParams(e).get("assertion");return{...s.MOCK_OATH_TOKEN_RESPONSE,access_token:t??s.MOCK_OATH_TOKEN_RESPONSE.access_token}}})}}},{package:"@metamask/profile-sync-controller",file:"node_modules/@metamask/profile-sync-controller/dist/controllers/authentication/mocks/mockResponses.cjs"}],[2152,{"../../shared/env.cjs":2162,"../authentication-jwt-bearer/services.cjs":2147},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MOCK_USER_PROFILE_LINEAGE_RESPONSE=s.MOCK_OIDC_TOKEN_RESPONSE=s.MOCK_SRP_LOGIN_RESPONSE=s.MOCK_SIWE_LOGIN_RESPONSE=s.MOCK_NONCE_RESPONSE=s.MOCK_ACCESS_JWT=s.MOCK_JWT=s.MOCK_PROFILE_LINEAGE_URL=s.MOCK_PAIR_IDENTIFIERS_URL=s.MOCK_SIWE_LOGIN_URL=s.MOCK_OIDC_TOKEN_URL=s.MOCK_SRP_LOGIN_URL=s.MOCK_NONCE_URL=void 0;const a=e("../../shared/env.cjs"),n=e("../authentication-jwt-bearer/services.cjs");s.MOCK_NONCE_URL=(0,n.NONCE_URL)(a.Env.PRD),s.MOCK_SRP_LOGIN_URL=(0,n.SRP_LOGIN_URL)(a.Env.PRD),s.MOCK_OIDC_TOKEN_URL=(0,n.OIDC_TOKEN_URL)(a.Env.PRD),s.MOCK_SIWE_LOGIN_URL=(0,n.SIWE_LOGIN_URL)(a.Env.PRD),s.MOCK_PAIR_IDENTIFIERS_URL=(0,n.PAIR_IDENTIFIERS)(a.Env.PRD),s.MOCK_PROFILE_LINEAGE_URL=(0,n.PROFILE_LINEAGE_URL)(a.Env.PRD),s.MOCK_JWT="eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImIwNzE2N2U2LWJjNWUtNDgyZC1hNjRhLWU1MjQ0MjY2MGU3NyJ9.eyJzdWIiOiI1MzE0ODc5YWM2NDU1OGI3OTQ5ZmI4NWIzMjg2ZjZjNjUwODAzYmFiMTY0Y2QyOWNmMmM3YzdmMjMzMWMwZTRlIiwiaWF0IjoxNzA2MTEzMDYyLCJleHAiOjE3NjkxODUwNjMsImlzcyI6ImF1dGgubWV0YW1hc2suaW8iLCJhdWQiOiJwb3J0Zm9saW8ubWV0YW1hc2suaW8ifQ.E5UL6oABNweS8t5a6IBTqTf7NLOJbrhJSmEcsr7kwLp4bGvcENJzACwnsHDkA6PlzfDV09ZhAGU_F3hlS0j-erbY0k0AFR-GAtyS7E9N02D8RgUDz5oDR65CKmzM8JilgFA8UvruJ6OJGogroaOSOqzRES_s8MjHpP47RJ9lXrUesajsbOudXbuksXWg5QmWip6LLvjwr8UUzcJzNQilyIhiEpo4WdzWM4R3VtTwr4rHnWEvtYnYCov1jmI2w3YQ48y0M-3Y9IOO0ov_vlITRrOnR7Y7fRUGLUFmU5msD8mNWRywjQFLHfJJ1yNP5aJ8TkuCK3sC6kcUH335IVvukQ",s.MOCK_ACCESS_JWT="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",s.MOCK_NONCE_RESPONSE={nonce:"xGMm9SoihEKeAEfV",identifier:"0xd8641601Cb79a94FD872fE42d5b4a067A44a7e88",expires_in:300},s.MOCK_SIWE_LOGIN_RESPONSE={token:s.MOCK_JWT,expires_in:3600,profile:{profile_id:"fa2bbf82-bd9a-4e6b-aabc-9ca0d0319b6e",metametrics_id:"de742679-4960-4977-a415-4718b5f8e86c",identifier_id:"ec9a4e9906836497efad2fd4d4290b34d2c6a2c0d93eb174aa3cd88a133adbaf",identifier_type:"SIWE",encrypted_storage_key:"2c6a2c0d93eb174aa3cd88a133adbaf"}},s.MOCK_SRP_LOGIN_RESPONSE={token:s.MOCK_JWT,expires_in:3600,profile:{profile_id:"f88227bd-b615-41a3-b0be-467dd781a4ad",metametrics_id:"561ec651-a844-4b36-a451-04d6eac35740",identifier_id:"da9a9fc7b09edde9cc23cec9b7e11a71fb0ab4d2ddd8af8af905306f3e1456fb",identifier_type:"SRP",encrypted_storage_key:"d2ddd8af8af905306f3e1456fb"}},s.MOCK_OIDC_TOKEN_RESPONSE={access_token:s.MOCK_ACCESS_JWT,expires_in:3600},s.MOCK_USER_PROFILE_LINEAGE_RESPONSE={profile_id:"f88227bd-b615-41a3-b0be-467dd781a4ad",created_at:"2025-10-01T12:00:00Z",lineage:[{metametrics_id:"561ec651-a844-4b36-a451-04d6eac35740",agent:a.Platform.MOBILE,created_at:"2025-10-01T12:00:00Z",updated_at:"2025-10-01T12:00:00Z",counter:1},{metametrics_id:"de742679-4960-4977-a415-4718b5f8e86c",agent:a.Platform.EXTENSION,created_at:"2025-10-01T12:00:00Z",updated_at:"2025-10-01T12:00:00Z",counter:2}]}}}},{package:"@metamask/profile-sync-controller",file:"node_modules/@metamask/profile-sync-controller/dist/sdk/mocks/auth.cjs"}],[218,{"../../../../../shared/lib/delegation":5321,"../../../../../shared/lib/delegation/delegation":5318,"@metamask/transaction-controller":2587,"@metamask/utils":2632,"bignumber.js":3481},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.enforceSimulations=async function({messenger:e,transactionMeta:t,useRealSignature:s=!1}){c("Enforcing simulations",{transactionMeta:t,useRealSignature:s});const{chainId:r,simulationData:u={tokenBalanceChanges:[]},txParams:h}=t,m=h.from,p=(0,n.hexToNumber)(r),f=(0,i.getDeleGatorEnvironment)(p),g=f.DelegationManager,b=function(e,t){const s=e.call("AppStateController:getState"),a=s.enforcedSimulationsSlippage;return s.enforcedSimulationsSlippageForTransactions[t]??a}(e,t.id),y=function({accountAddress:e,environment:t,simulationData:s,slippage:n}){const r=function(e,t,s,n){const r=(0,i.createCaveatBuilder)(t),{nativeBalanceChange:o,tokenBalanceChanges:l=[]}=s;if(o){const{difference:t,isDecrease:s}=o,a=d(t,n,s);c("Caveat - Native Balance Change",{enforceDecrease:s,recipient:e,delta:BigInt(t),slippage:n,deltaWithSlippage:a}),r.addCaveat("nativeBalanceChange",s,e,a)}for(const t of l){const{difference:s,isDecrease:i,address:o,standard:l,id:u}=t,h=BigInt(s),m=d(s,n,i),p=u?BigInt(u):0n;switch(c("Caveat - Token Balance Change",{enforceDecrease:i,token:o,recipient:e,delta:h,slippage:n,deltaWithSlippage:m}),l){case a.SimulationTokenStandard.erc20:r.addCaveat("erc20BalanceChange",i,o,e,m);break;case a.SimulationTokenStandard.erc721:r.addCaveat("erc721BalanceChange",i,o,e,h);break;case a.SimulationTokenStandard.erc1155:r.addCaveat("erc1155BalanceChange",i,o,e,p,h);break;default:c("Unsupported token standard",l)}}return r.build()}(e,t,s,n);c("Caveats",r);const o=(0,i.createDelegation)({from:e,to:e,caveats:r});return o}({accountAddress:m,environment:f,simulationData:u,slippage:b});c("Delegation",y);let w=l;s&&(c("Signing delegation"),w=await e.call("DelegationController:signDelegation",{chainId:r,delegation:y}));c("Delegation signature",w);const v=function({transaction:e,delegation:t}){const s=[[t]],a=[i.SINGLE_DEFAULT_MODE],n=[[{target:e.to,callData:e.data??"0x",value:e.value?BigInt(e.value):0n}]];return(0,o.encodeRedeemDelegations)({delegations:s,modes:a,executions:n})}({transaction:h,delegation:{...y,signature:w}});return c("Data",v),{updateTransaction:e=>{e.txParams.data=v,e.txParams.to=g,e.txParams.value="0x0"}}};var a=e("@metamask/transaction-controller"),n=e("@metamask/utils"),r=e("bignumber.js"),i=e("../../../../../shared/lib/delegation"),o=e("../../../../../shared/lib/delegation/delegation");const c=(0,n.createProjectLogger)("enforced-simulations"),l="0x2261a7810ed3e9cde160895909e138e2f68adb2da86fcf98ea0840701df107721fb369ab9b52550ea98832c09f8185284aca4c94bd345e867a4f4461868dd7751b";function d(e,t,s){const a=new r.BigNumber(e),n=(100+(s?t:-t))/100;return BigInt(a.mul(n).toFixed(0))}}}},{package:"$root$",file:"app/scripts/lib/transaction/containers/enforced-simulations.ts"}],[219,{"./enforced-simulations":218,"@metamask/transaction-controller":2587,"@metamask/utils":2632,lodash:4362},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.applyTransactionContainers=c,s.applyTransactionContainersExisting=async function({containerTypes:e,transactionId:t,messenger:s,updateEditableParams:a}){const r=(await s.call("TransactionController:getState")).transactions.find(e=>e.id===t);if(!r)throw new Error(`Transaction with ID ${t} not found.`);const{updateTransaction:i}=await c({isApproved:!1,messenger:s,transactionMeta:r,types:e}),o=(0,n.cloneDeep)(r);i(o),a(t,{containerTypes:e,data:o.txParams.data,gas:o.txParams.gas,to:o.txParams.to,value:o.txParams.value})};var a=e("@metamask/transaction-controller"),n=e("lodash"),r=e("@metamask/utils"),i=e("./enforced-simulations");const o=(0,r.createProjectLogger)("transaction-containers");async function c({isApproved:e,messenger:t,transactionMeta:s,types:r}){const{txParamsOriginal:c}=s,l=(0,n.cloneDeep)(s);if(c&&(l.txParams=(0,n.cloneDeep)(c)),r.includes(a.TransactionContainerType.EnforcedSimulations)){const{updateTransaction:s}=await(0,i.enforceSimulations)({messenger:t,transactionMeta:l,useRealSignature:e});s(l)}let d;if(!e){const{gas:e}=await t.call("TransactionController:estimateGas",l.txParams,l.networkClientId,{ignoreDelegationSignatures:!0});o("Estimated gas",e),d=e}return{updateTransaction:e=>{e.containerTypes=r,e.txParams=(0,n.cloneDeep)(l.txParams),d&&(e.txParams.gas=d)}}}}}},{package:"$root$",file:"app/scripts/lib/transaction/containers/util.ts"}],[22,{"@metamask/profile-sync-controller/auth":2126,"@metamask/profile-sync-controller/sdk":2151},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.AuthenticationControllerInit=void 0;var a=e("@metamask/profile-sync-controller/auth"),n=e("@metamask/profile-sync-controller/sdk");s.AuthenticationControllerInit=({controllerMessenger:e,initMessenger:t,persistedState:s})=>({controller:new a.Controller({messenger:e,state:s.AuthenticationController,metametrics:{getMetaMetricsId:t.call.bind(t,"MetaMetricsController:getMetaMetricsId"),agent:n.Platform.EXTENSION}})})}}},{package:"$root$",file:"app/scripts/controller-init/identity/authentication-controller-init.ts"}],[220,{"../../../../../shared/lib/four-byte":5325,"@ethersproject/abi":572,"@metamask/utils":2632,"ethereumjs-util":3849},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeTransactionDataWithFourByte=async function(e){const t=e.slice(0,10),s=await(0,i.getMethodFrom4Byte)(t);if(!s)return undefined;const r=s.split("(")[0],u=function(e){let t=e.slice(e.indexOf("(")+1,-1);const s=[];for(;t.includes("(");){const e=d(t);if(!e)break;s.push(e.value),t=`${t.slice(0,e.start)}${s.length-1}#${t.slice(e.end+1)}`}return l(t,s)}(s);o("Generated inputs",u);const h=(0,a.addHexPrefix)(e.slice(10)),m=n.Interface.getAbiCoder().decode(u,h),p=u.map((e,t)=>c(e,t,m));return{name:r,params:p}};var a=e("ethereumjs-util"),n=e("@ethersproject/abi"),r=e("@metamask/utils"),i=e("../../../../../shared/lib/four-byte");const o=(0,r.createProjectLogger)("four-byte");function c(e,t,s){var a;const n=s[t],{type:r,name:i}=e;let o=null===(a=e.components)||void 0===a?void 0:a.map((e,t)=>c(e,t,n));if(r.endsWith("[]")){const t=r.slice(0,-2);o=n.map((s,a)=>{const r=`Item ${a+1}`;return c({...e,name:r,type:t},a,n)})}return{name:i,type:r,value:n,children:o}}function l(e,t){return e.split(",").map(e=>{const s=e.split("#"),a=s.length>1?parseInt(s[0],10):undefined;return{type:a===undefined?e:`tuple${s[1]??""}`,components:a===undefined?undefined:l(t[a],t)}})}function d(e){let t=-1;for(let s=0;s<e.length;s++)if("("===e[s])t=s;else if(")"===e[s]&&-1!==t)return{start:t,end:s,value:e.slice(t+1,s)};return undefined}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/four-byte.ts"}],[221,{"ethereumjs-util":3849},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getContractProxyAddress=async function(e,t){const s=(await Promise.all(n.map(s=>t.request({method:"eth_getStorageAt",params:[e,s,"latest"]})))).find(e=>(0,a.stripHexPrefix)(e)!==r);return s&&(0,a.addHexPrefix)(s.slice(26))};var a=e("ethereumjs-util");const n=["0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3","0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"],r="0".padEnd(64,"0")}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/proxy.ts"}],[2213,{"@metamask/base-controller":1140,"@metamask/rpc-errors":2224,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.RateLimitController=void 0;const a=e("@metamask/base-controller"),n=e("@metamask/rpc-errors"),r=e("@metamask/utils"),i="RateLimitController",o={requests:{persist:!1,anonymous:!1}};class c extends a.BaseController{constructor({rateLimitTimeout:e=5e3,rateLimitCount:t=1,messenger:s,state:a,implementations:n}){const c={requests:(0,r.getKnownPropertyNames)(n).reduce((e,t)=>({...e,[t]:{}}),{})};super({name:i,metadata:o,messenger:s,state:{...c,...a}}),this.implementations=n,this.rateLimitTimeout=e,this.rateLimitCount=t,this.messagingSystem.registerActionHandler(`${i}:call`,(e,t,...s)=>this.call(e,t,...s))}async call(e,t,...s){if(this.isRateLimited(t,e))throw n.rpcErrors.limitExceeded({message:`"${t.toString()}" is currently rate-limited. Please try again later.`});this.recordRequest(t,e);const a=this.implementations[t].method;if(!a)throw new Error("Invalid api type");return a(...s)}isRateLimited(e,t){const s=this.implementations[e].rateLimitCount??this.rateLimitCount;return this.state.requests[e][t]>=s}recordRequest(e,t){const s=this.implementations[e].rateLimitTimeout??this.rateLimitTimeout,a=this.state.requests[e][t]??0;this.update(n=>{0===a&&setTimeout(()=>this.resetRequestCount(e,t),s),Object.assign(n,{requests:{...n.requests,[e]:{[t]:a+1}}})})}resetRequestCount(e,t){this.update(s=>{Object.assign(s,{requests:{...s.requests,[e]:{[t]:0}}})})}}s.RateLimitController=c}}},{package:"@metamask/rate-limit-controller",file:"node_modules/@metamask/rate-limit-controller/dist/RateLimitController.cjs"}],[2214,{"./RateLimitController.cjs":2213},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.RateLimitController=void 0;var a=e("./RateLimitController.cjs");Object.defineProperty(s,"RateLimitController",{enumerable:!0,get:function(){return a.RateLimitController}})}}},{package:"@metamask/rate-limit-controller",file:"node_modules/@metamask/rate-limit-controller/dist/index.cjs"}],[2215,{"../constants.cjs":2216,"@metamask/controller-utils":1224},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.ClientConfigApiService=void 0;const d=e("@metamask/controller-utils"),u=e("../constants.cjs");s.ClientConfigApiService=class{constructor({fetch:e,retries:t=d.DEFAULT_MAX_RETRIES,maximumConsecutiveFailures:s=d.DEFAULT_MAX_CONSECUTIVE_FAILURES,circuitBreakDuration:u=d.DEFAULT_CIRCUIT_BREAK_DURATION,onBreak:h,onDegraded:m,config:p}){a.set(this,void 0),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c(this,a,e,"f"),c(this,r,p.client,"f"),c(this,i,p.distribution,"f"),c(this,o,p.environment,"f"),c(this,n,(0,d.createServicePolicy)({maxRetries:t,maxConsecutiveFailures:s,circuitBreakDuration:u}),"f"),h&&l(this,n,"f").onBreak(h),m&&l(this,n,"f").onDegraded(m)}onBreak(...e){return l(this,n,"f").onBreak(...e)}onDegraded(...e){return l(this,n,"f").onDegraded(...e)}async fetchRemoteFeatureFlags(){const e=`${u.BASE_URL}/flags?client=${l(this,r,"f")}&distribution=${l(this,i,"f")}&environment=${l(this,o,"f")}`,t=await l(this,n,"f").execute(()=>l(this,a,"f").call(this,e,{cache:"no-cache"}));if(!t.ok)throw new Error("Failed to fetch remote feature flags");const s=await t.json();if(!Array.isArray(s))throw new Error("Feature flags api did not return an array");return{remoteFeatureFlags:this.flattenFeatureFlags(s),cacheTimestamp:Date.now()}}flattenFeatureFlags(e){return e.reduce((e,t)=>({...e,...t}),{})}},a=new WeakMap,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/client-config-api-service/client-config-api-service.cjs"}],[2216,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.BASE_URL=void 0,s.BASE_URL="https://client-config.api.cx.metamask.io/v1"}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/constants.cjs"}],[2217,{"./client-config-api-service/client-config-api-service.cjs":2215,"./remote-feature-flag-controller-types.cjs":2218,"./remote-feature-flag-controller.cjs":2219,"./utils/user-segmentation-utils.cjs":2220},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.generateDeterministicRandomNumber=s.ClientConfigApiService=s.EnvironmentType=s.DistributionType=s.ClientType=s.RemoteFeatureFlagController=void 0;var a=e("./remote-feature-flag-controller.cjs");Object.defineProperty(s,"RemoteFeatureFlagController",{enumerable:!0,get:function(){return a.RemoteFeatureFlagController}});var n=e("./remote-feature-flag-controller-types.cjs");Object.defineProperty(s,"ClientType",{enumerable:!0,get:function(){return n.ClientType}}),Object.defineProperty(s,"DistributionType",{enumerable:!0,get:function(){return n.DistributionType}}),Object.defineProperty(s,"EnvironmentType",{enumerable:!0,get:function(){return n.EnvironmentType}});var r=e("./client-config-api-service/client-config-api-service.cjs");Object.defineProperty(s,"ClientConfigApiService",{enumerable:!0,get:function(){return r.ClientConfigApiService}});var i=e("./utils/user-segmentation-utils.cjs");Object.defineProperty(s,"generateDeterministicRandomNumber",{enumerable:!0,get:function(){return i.generateDeterministicRandomNumber}})}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/index.cjs"}],[2218,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r;Object.defineProperty(s,"__esModule",{value:!0}),s.EnvironmentType=s.DistributionType=s.ClientType=void 0,function(e){e.Extension="extension",e.Mobile="mobile"}(a||(s.ClientType=a={})),function(e){e.Main="main",e.Flask="flask",e.Beta="beta"}(n||(s.DistributionType=n={})),function(e){e.Production="prod",e.ReleaseCandidate="rc",e.Development="dev"}(r||(s.EnvironmentType=r={}))}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/remote-feature-flag-controller-types.cjs"}],[2219,{"./utils/user-segmentation-utils.cjs":2220,"@metamask/base-controller":1140},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RemoteFeatureFlagController=s.getDefaultRemoteFeatureFlagControllerState=s.DEFAULT_CACHE_DURATION=s.controllerName=void 0;const p=e("@metamask/base-controller"),f=e("./utils/user-segmentation-utils.cjs");s.controllerName="RemoteFeatureFlagController",s.DEFAULT_CACHE_DURATION=864e5;const g={remoteFeatureFlags:{persist:!0,anonymous:!0},cacheTimestamp:{persist:!0,anonymous:!0}};function b(){return{remoteFeatureFlags:{},cacheTimestamp:0}}s.getDefaultRemoteFeatureFlagControllerState=b;class y extends p.BaseController{constructor({messenger:e,state:t,clientConfigApiService:l,fetchInterval:d=s.DEFAULT_CACHE_DURATION,disabled:u=!1,getMetaMetricsId:m}){super({name:s.controllerName,metadata:g,messenger:e,state:{remoteFeatureFlags:{},cacheTimestamp:0,...t}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),h(this,n,d,"f"),h(this,r,u,"f"),h(this,i,l,"f"),h(this,c,m,"f")}async updateRemoteFeatureFlags(){if(m(this,r,"f")||!m(this,a,"m",l).call(this))return;let e;if(m(this,o,"f"))await m(this,o,"f");else{try{h(this,o,m(this,i,"f").fetchRemoteFeatureFlags(),"f"),e=await m(this,o,"f")}finally{h(this,o,undefined,"f")}await m(this,a,"m",d).call(this,e.remoteFeatureFlags)}}enable(){h(this,r,!1,"f")}disable(){h(this,r,!0,"f")}}s.RemoteFeatureFlagController=y,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,a=new WeakSet,l=function(){return Date.now()-this.state.cacheTimestamp>m(this,n,"f")},d=async function(e){const t=await m(this,a,"m",u).call(this,e);this.update(()=>({remoteFeatureFlags:t,cacheTimestamp:Date.now()}))},u=async function(e){const t={},s=m(this,c,"f").call(this),a=(0,f.generateDeterministicRandomNumber)(s);for(const[s,n]of Object.entries(e)){let e=n;if(Array.isArray(n)&&a){const t=n.find(e=>!!(0,f.isFeatureFlagWithScopeValue)(e)&&a<=e.scope.value);t&&(e={name:t.name,value:t.value})}t[s]=e}return t}}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/remote-feature-flag-controller.cjs"}],[222,{"@ethersproject/abi":572,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeTransactionDataWithSourcify=async function(e,t,s){var o,c;const l=await async function(e,t){var s;const a=await async function(e,t){const s=parseInt(t,16),a=await fetch(`https://sourcify.dev/server/files/any/${s}/${e}`);if(!a.ok)throw new Error("Failed to fetch Sourcify files");return a.json()}(e,t),n=null===(s=a.files)||void 0===s?void 0:s.find(e=>e.name.includes("metadata.json"));if(!n)throw new Error("Metadata not found");return JSON.parse(n.content)}(t,s);n("Retrieved Sourcify metadata",{contractAddress:t,chainId:s,metadata:l});const{abi:d}=l.output,u=new a.Interface(d),h=e.slice(0,10);let m;try{m=u.getFunction(h)}catch(e){}if(!m)return n("Failed to find function in ABI",h,d),undefined;const{name:p,inputs:f}=m,g=i(p,f),b=null===(o=l.output.userdoc)||void 0===o?void 0:o.methods[g],y=null===(c=l.output.devdoc)||void 0===c?void 0:c.methods[g],w=(null==b?void 0:b.notice)??(null==y?void 0:y.details);n("Extracted NatSpec",{signature:g,userDoc:b,devDoc:y});const v=u.decodeFunctionData(h,e),k=f.map((e,t)=>r(e,t,v,b,y));return{name:p,description:w,params:k}};var a=e("@ethersproject/abi");const n=(0,e("@metamask/utils").createProjectLogger)("sourcify");function r(e,t,s,a,n){var i,o;const{name:c,type:l,components:d}=e,u=(null==a||null===(i=a.params)||void 0===i?void 0:i[c])??(null==n||null===(o=n.params)||void 0===o?void 0:o[c]),h=s[t];let m=null==d?void 0:d.map((e,t)=>r(e,t,h,{},{}));if(l.endsWith("[]")){const t=l.slice(0,-2);m=h.map((s,a)=>{const n=`Item ${a+1}`;return r({...e,name:n,type:t},a,h,{},{})})}return{name:c,description:u,type:l,value:h,children:m}}function i(e,t){return`${e??""}(${t.map(e=>{var t;return null!==(t=e.components)&&void 0!==t&&t.length?`${i(undefined,e.components)}${e.type.endsWith("[]")?"[]":""}`:e.type}).join(",")})`}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/sourcify.ts"}],[2220,{uuid:5195},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isFeatureFlagWithScopeValue=s.generateDeterministicRandomNumber=void 0;const a=e("uuid");function n(e){return BigInt(`0x${e.replace(/-/gu,"")}`)}const r=n("00000000-0000-4000-8000-000000000000"),i=n("ffffffff-ffff-4fff-bfff-ffffffffffff")-r;s.generateDeterministicRandomNumber=function(e){if(!e)throw new Error("MetaMetrics ID cannot be empty");let t,s;if((0,a.validate)(e)){if(4!==(0,a.version)(e))throw new Error(`Invalid UUID version. Expected v4, got v${(0,a.version)(e)}`);t=n(e)-r,s=i}else{if(!e.startsWith("0x"))throw new Error("Hex ID must start with 0x prefix");const a=e.slice(2),n=64;if(a.length!==n)throw new Error(`Invalid hex ID length. Expected ${n} characters, got ${a.length}`);if(!/^[0-9a-f]+$/iu.test(a))throw new Error("Hex ID contains invalid characters");t=BigInt(`0x${a}`),s=BigInt(`0x${"f".repeat(a.length)}`)}return Number(t*BigInt(1e6)/s)/1e6};s.isFeatureFlagWithScopeValue=e=>"object"==typeof e&&null!==e&&"scope"in e}}},{package:"@metamask/remote-feature-flag-controller",file:"node_modules/@metamask/remote-feature-flag-controller/dist/utils/user-segmentation-utils.cjs"}],[223,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.UNISWAP_ROUTER_COMMANDS=void 0;s.UNISWAP_ROUTER_COMMANDS={0:{name:"V3_SWAP_EXACT_IN",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of input tokens for the trade",name:"amountIn"},{type:"uint256",description:"The minimum amount of output tokens the user wants",name:"amountOutMin"},{type:"bytes",description:"The UniswapV3 encoded path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},1:{name:"V3_SWAP_EXACT_OUT",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of output tokens to receive",name:"amountOut"},{type:"uint256",description:"The maximum number of input tokens that should be spent",name:"amountInMax"},{type:"bytes",description:"The UniswapV3 encoded path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},2:{name:"PERMIT2_TRANSFER_FROM",params:[{type:"address",description:"The token to fetch from Permit2",name:"token"},{type:"address",description:"The recipient of the tokens fetched",name:"recipient"},{type:"uint256",description:"The amount of token to fetch",name:"amount"}]},3:{name:"PERMIT2_PERMIT_BATCH",params:[{type:"bytes",description:"A PermitBatch struct outlining all of the Permit2 permits to execute.",name:"batch"},{type:"bytes",description:"The signature to provide to Permit2",name:"data"}]},4:{name:"SWEEP",params:[{type:"address",description:"The ERC20 token to sweep (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the sweep",name:"recipient"},{type:"uint256",description:"The minimum required tokens to receive from the sweep",name:"amountMin"}]},5:{name:"TRANSFER",params:[{type:"address",description:"The ERC20 token to transfer (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"The amount to transfer",name:"value"}]},6:{name:"PAY_PORTION",params:[{type:"address",description:"The ERC20 token to transfer (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"In basis points, the percentage of the contract’s balance to transfer",name:"bips"}]},8:{name:"V2_SWAP_EXACT_IN",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of input tokens for the trade",name:"amountIn"},{type:"uint256",description:"The minimum amount of output tokens the user wants",name:"amountOutMin"},{type:"address[]",description:"The UniswapV2 token path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},9:{name:"V2_SWAP_EXACT_OUT",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of output tokens to receive",name:"amountOut"},{type:"uint256",description:"The maximum number of input tokens that should be spent",name:"amountInMax"},{type:"address[]",description:"The UniswapV2 token path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},10:{name:"PERMIT2_PERMIT",params:[{type:"bytes",description:"A PermitSingle struct outlining the Permit2 permit to execute",name:"permitSingle"},{type:"bytes",description:"The signature to provide to Permit2",name:"signature"}]},11:{name:"WRAP_ETH",params:[{type:"address",description:"The recipient of the WETH",name:"recipient"},{type:"uint256",description:"The amount of ETH to wrap",name:"amountMin"}]},12:{name:"UNWRAP_WETH",params:[{type:"address",description:"The recipient of the ETH",name:"recipient"},{type:"uint256",description:"The minimum required ETH to receive from the unwrapping",name:"amountMin"}]},13:{name:"PERMIT2_TRANSFER_FROM_BATCH",params:[{type:"bytes",description:"An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to perform",name:"batchDetails"}]},16:{name:"SEAPORT",params:[{type:"uint256",description:"The ETH value to forward to the Seaport contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Seaport contract",name:"data"}]},17:{name:"LOOKS_RARE_721",params:[{type:"uint256",description:"The ETH value to forward to the LooksRare contract",name:"value"},{type:"bytes",description:"The calldata to use to call the LooksRare contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},18:{name:"NFTX",params:[{type:"uint256",description:"The ETH value to forward to the NFTX contract",name:"value"},{type:"bytes",description:"The calldata to use to call the NFTX contract",name:"data"}]},19:{name:"CRYPTOPUNKS",params:[{type:"uint256",description:"The PunkID to purchase",name:"punkId"},{type:"address",description:"The recipient for the cryptopunk",name:"recipient"},{type:"uint256",description:"The ETH value to forward to the Cryptopunks contract",name:"value"}]},20:{name:"LOOKS_RARE_1155",params:[{type:"uint256",description:"The ETH value to forward to the LooksRare contract",name:"value"},{type:"bytes",description:"The calldata to use to call the LooksRare contract",name:"data"},{type:"address",description:"The recipient of the ERC1155",name:"recipient"},{type:"address",description:"The ERC1155 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The amount of the ERC1155 to transfer",name:"amount"}]},21:{name:"OWNER_CHECK_721",params:[{type:"address",description:"The required owner of the ERC721",name:"owner"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},22:{name:"OWNER_CHECK_1155",params:[{type:"address",description:"The required owner of the ERC1155",name:"owner"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The minimum required amount of the ERC1155",name:"minBalance"}]},23:{name:"SWEEP_ERC721",params:[{type:"address",description:"The ERC721 token address to transfer",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"The token ID to transfer",name:"id"}]},24:{name:"X2Y2_721",params:[{type:"uint256",description:"The ETH value to forward to the X2Y2 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the X2Y2 contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},25:{name:"SUDOSWAP",params:[{type:"uint256",description:"The ETH value to forward to the Sudoswap contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Sudoswap contract",name:"data"}]},26:{name:"NFT20",params:[{type:"uint256",description:"The ETH value to forward to the NFT20 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the NFT20 contract",name:"data"}]},27:{name:"X2Y2_1155",params:[{type:"uint256",description:"The ETH value to forward to the X2Y2 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the X2Y2 contract",name:"data"},{type:"address",description:"The recipient of the ERC1155",name:"recipient"},{type:"address",description:"The ERC1155 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The amount of the ERC1155 to transfer",name:"amount"}]},28:{name:"FOUNDATION",params:[{type:"uint256",description:"The ETH value to forward to the Foundation contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Foundation contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},29:{name:"SWEEP_ERC1155",params:[{type:"address",description:"The ERC1155 token address to sweep",name:"token"},{type:"address",description:"The recipient of the sweep",name:"recipient"},{type:"uint256",description:"The token ID to sweep",name:"id"},{type:"uint256",description:"The minimum required tokens to receive from the sweep",name:"amount"}]}}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/uniswap-commands.ts"}],[224,{"../../../../../shared/constants/network":5262,"./uniswap-commands":223,"@ethersproject/abi":572,"ethereumjs-util":3849},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.UNISWAP_UNIVERSAL_ROUTER_ADDRESSES=void 0,s.decodeUniswapRouterTransactionData=function({transactionData:e,contractAddress:t,chainId:s}){const r=l[s];if(null==r||!r.map(e=>e.toLowerCase()).includes(t.toLowerCase()))return undefined;const u=new a.Interface(d);let h;try{h=u.parseTransaction({data:e})}catch(e){return undefined}const m=h.args.commands,p=h.args.inputs;return m.slice(2).match(/.{1,2}/gu).map((e,t)=>function(e,t){const s=parseInt(e,16),r=31&s,l=i.UNISWAP_ROUTER_COMMANDS[String(r)];if(!l)return undefined;const d=l.params.map(e=>e.type),u=a.Interface.getAbiCoder().decode(d,t),{name:h}=l,m=l.params.map((e,t)=>{const{name:s,type:a,description:r}=e,i=u[t];return{name:s,type:a,value:"path"===s?function(e){const t=[];let s=(0,n.stripHexPrefix)(e),a={},r=!0;for(;s.length;){if(r){const e=(0,n.addHexPrefix)(s.slice(0,o));a.firstAddress?(a.secondAddress=e,t.push(a),a={firstAddress:e}):a.firstAddress=e,s=s.slice(o)}else a.tickSpacing=parseInt(s.slice(0,c),16),s=s.slice(c);r=!r}return t}(i):i,description:r}});return{name:h,params:m}}(e,p[t])).filter(e=>e!==undefined)};var a=e("@ethersproject/abi"),n=e("ethereumjs-util"),r=e("../../../../../shared/constants/network"),i=e("./uniswap-commands");const o=40,c=6,l=s.UNISWAP_UNIVERSAL_ROUTER_ADDRESSES={[r.CHAIN_IDS.ARBITRUM]:["0x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de5","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x5E325eDA8064b456f4781070C0738d849c824258"],[r.CHAIN_IDS.AVALANCHE]:["0x82635AF6146972cD6601161c4472ffe97237D292","0x4Dae2f939ACf50408e13d58534Ff8c2776d45265"],[r.CHAIN_IDS.BASE]:["0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"],[r.CHAIN_IDS.BSC]:["0x5Dc88340E1c5c6366864Ee415d6034cadd1A9897","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x4Dae2f939ACf50408e13d58534Ff8c2776d45265"],[r.CHAIN_IDS.MAINNET]:["0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B","0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"],[r.CHAIN_IDS.OPTIMISM]:["0xb555edF5dcF85f42cEeF1f3630a52A108E55A654","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0xCb1355ff08Ab38bBCE60111F1bb2B784bE25D7e8"],[r.CHAIN_IDS.POLYGON]:["0x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de5","0x643770E279d5D0733F21d6DC03A8efbABf3255B4","0xec7BE89e9d109e7e3Fec59c222CF297125FEFda2"],[r.CHAIN_IDS.SEPOLIA]:["0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"]},d=[{constant:!0,inputs:[{name:"commands",type:"bytes"},{name:"inputs",type:"bytes[]"},{name:"deadline",type:"uint256"}],name:"execute",type:"function"},{constant:!0,inputs:[{name:"commands",type:"bytes"},{name:"inputs",type:"bytes[]"}],name:"execute",type:"function"}]}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/uniswap.ts"}],[2247,{"@metamask/base-controller":1140,"@metamask/swappable-obj-proxy":2547},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.SelectedNetworkController=s.SelectedNetworkControllerEventTypes=s.SelectedNetworkControllerActionTypes=s.METAMASK_DOMAIN=s.controllerName=void 0;const m=e("@metamask/base-controller"),p=e("@metamask/swappable-obj-proxy");s.controllerName="SelectedNetworkController";const f={domains:{persist:!0,anonymous:!1}};s.METAMASK_DOMAIN="metamask",s.SelectedNetworkControllerActionTypes={getState:`${s.controllerName}:getState`,getNetworkClientIdForDomain:`${s.controllerName}:getNetworkClientIdForDomain`,setNetworkClientIdForDomain:`${s.controllerName}:setNetworkClientIdForDomain`},s.SelectedNetworkControllerEventTypes={stateChange:`${s.controllerName}:stateChange`};class g extends m.BaseController{constructor({messenger:e,state:t={domains:{}},useRequestQueuePreference:o,onPreferencesStateChange:l,domainProxyMap:m}){super({name:s.controllerName,metadata:f,messenger:e,state:t}),a.add(this),n.set(this,void 0),r.set(this,void 0),u(this,r,o,"f"),u(this,n,m,"f"),h(this,a,"m",i).call(this),this.messagingSystem.call("PermissionController:getSubjectNames").filter(e=>this.state.domains[e]===undefined).forEach(e=>this.setNetworkClientIdForDomain(e,this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId)),this.messagingSystem.subscribe("PermissionController:stateChange",(e,t)=>{t.forEach(({op:e,path:t})=>{if("subjects"===t[0]&&t[1]!==undefined&&"string"==typeof t[1]){const s=t[1];"add"===e&&this.state.domains[s]===undefined?this.setNetworkClientIdForDomain(s,this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId):"remove"===e&&this.state.domains[s]!==undefined&&h(this,a,"m",c).call(this,s)}})}),this.messagingSystem.subscribe("NetworkController:stateChange",({selectedNetworkClientId:e,networkConfigurationsByChainId:t},s)=>{const a=s.find(({op:e,path:t})=>("replace"===e||"remove"===e)&&"networkConfigurationsByChainId"===t[0]);if(a){const s=Object.values(t).reduce((e,t)=>(t.rpcEndpoints.forEach(({networkClientId:s})=>e[s]=t.chainId),e),{});Object.entries(this.state.domains).forEach(([n,r])=>{const i=s[r];if("remove"!==a.op||i){if("replace"===a.op){const e=a.path[1];if(!i||i===e){const s=t[e],{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex];r!==a&&this.setNetworkClientIdForDomain(n,a)}}}else this.setNetworkClientIdForDomain(n,e)})}}),l(({useRequestQueue:e})=>{h(this,r,"f")!==e&&(e?h(this,a,"m",d).call(this):Object.keys(this.state.domains).forEach(e=>{h(this,a,"m",c).call(this,e)}),u(this,r,e,"f"))})}setNetworkClientIdForDomain(e,t){if(h(this,r,"f")){if(e===s.METAMASK_DOMAIN)throw new Error(`NetworkClientId for domain "${s.METAMASK_DOMAIN}" cannot be set on the SelectedNetworkController`);if(!h(this,a,"m",l).call(this,e))throw new Error("NetworkClientId for domain cannot be called with a domain that has not yet been granted permissions");h(this,a,"m",o).call(this,e,t)}}getNetworkClientIdForDomain(e){const{selectedNetworkClientId:t}=this.messagingSystem.call("NetworkController:getState");return h(this,r,"f")?this.state.domains[e]??t:t}getProviderAndBlockTracker(e){if(e===s.METAMASK_DOMAIN){const e=this.messagingSystem.call("NetworkController:getSelectedNetworkClient");if(e===undefined)throw new Error("Selected network not initialized");return e}let t=h(this,n,"f").get(e);if(t===undefined){let s;if(h(this,r,"f")&&h(this,a,"m",l).call(this,e)){const t=this.getNetworkClientIdForDomain(e);s=this.messagingSystem.call("NetworkController:getNetworkClientById",t)}else if(s=this.messagingSystem.call("NetworkController:getSelectedNetworkClient"),s===undefined)throw new Error("Selected network not initialized");t={provider:(0,p.createEventEmitterProxy)(s.provider),blockTracker:(0,p.createEventEmitterProxy)(s.blockTracker,{eventFilter:"skipInternal"})},h(this,n,"f").set(e,t)}return t}}s.SelectedNetworkController=g,n=new WeakMap,r=new WeakMap,a=new WeakSet,i=function(){this.messagingSystem.registerActionHandler(s.SelectedNetworkControllerActionTypes.getNetworkClientIdForDomain,this.getNetworkClientIdForDomain.bind(this)),this.messagingSystem.registerActionHandler(s.SelectedNetworkControllerActionTypes.setNetworkClientIdForDomain,this.setNetworkClientIdForDomain.bind(this))},o=function(e,t){const s=this.messagingSystem.call("NetworkController:getNetworkClientById",t);this.update(s=>{s.domains[e]=t});const a=this.getProviderAndBlockTracker(e);a.provider.setTarget(s.provider),a.blockTracker.setTarget(s.blockTracker)},c=function(e){const t=this.messagingSystem.call("NetworkController:getSelectedNetworkClient"),s=h(this,n,"f").get(e);s&&t?(s.provider.setTarget(t.provider),s.blockTracker.setTarget(t.blockTracker)):s&&h(this,n,"f").delete(e),this.update(t=>{delete t.domains[e]})},l=function(e){return this.messagingSystem.call("PermissionController:hasPermissions",e)},d=function(){h(this,n,"f").forEach((e,t)=>{const{selectedNetworkClientId:s}=this.messagingSystem.call("NetworkController:getState");h(this,a,"m",l).call(this,t)&&h(this,a,"m",o).call(this,t,s)})}}}},{package:"@metamask/selected-network-controller",file:"node_modules/@metamask/selected-network-controller/dist/SelectedNetworkController.cjs"}],[2248,{"./SelectedNetworkController.cjs":2247},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createSelectedNetworkMiddleware=void 0;const a=e("./SelectedNetworkController.cjs");s.createSelectedNetworkMiddleware=e=>(t,s,n)=>{if(!t.origin)throw new Error("Request object is lacking an 'origin'");return t.networkClientId=(t=>e.call(a.SelectedNetworkControllerActionTypes.getNetworkClientIdForDomain,t))(t.origin),n()}}}},{package:"@metamask/selected-network-controller",file:"node_modules/@metamask/selected-network-controller/dist/SelectedNetworkMiddleware.cjs"}],[2249,{"./SelectedNetworkController.cjs":2247,"./SelectedNetworkMiddleware.cjs":2248},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createSelectedNetworkMiddleware=s.METAMASK_DOMAIN=s.SelectedNetworkController=s.SelectedNetworkControllerEventTypes=s.SelectedNetworkControllerActionTypes=void 0;var a=e("./SelectedNetworkController.cjs");Object.defineProperty(s,"SelectedNetworkControllerActionTypes",{enumerable:!0,get:function(){return a.SelectedNetworkControllerActionTypes}}),Object.defineProperty(s,"SelectedNetworkControllerEventTypes",{enumerable:!0,get:function(){return a.SelectedNetworkControllerEventTypes}}),Object.defineProperty(s,"SelectedNetworkController",{enumerable:!0,get:function(){return a.SelectedNetworkController}}),Object.defineProperty(s,"METAMASK_DOMAIN",{enumerable:!0,get:function(){return a.METAMASK_DOMAIN}});var n=e("./SelectedNetworkMiddleware.cjs");Object.defineProperty(s,"createSelectedNetworkMiddleware",{enumerable:!0,get:function(){return n.createSelectedNetworkMiddleware}})}}},{package:"@metamask/selected-network-controller",file:"node_modules/@metamask/selected-network-controller/dist/index.cjs"}],[225,{"../../../../../shared/types/transaction-decode":5381,"./four-byte":220,"./proxy":221,"./sourcify":222,"./uniswap":224,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeTransactionData=async function({transactionData:e,contractAddress:t,chainId:s,provider:a}){l("Decoding transaction data",{transactionData:e,contractAddress:t,chainId:s});const u=(0,r.decodeUniswapRouterTransactionData)({transactionData:e,contractAddress:t,chainId:s});if(u)return l("Decoded with Uniswap commands",u),{data:d(u),source:n.DecodedTransactionDataSource.Uniswap};const h=await(0,o.getContractProxyAddress)(t,a);h&&l("Retrieved proxy implementation address",h);const m=h??t,p=(0,i.decodeTransactionDataWithSourcify)(e,m,s),f=(0,c.decodeTransactionDataWithFourByte)(e),[g,b]=await Promise.allSettled([p,f]);if("fulfilled"===g.status&&g.value)return l("Decoded data with Sourcify",g.value),{data:d([g.value]),source:n.DecodedTransactionDataSource.Sourcify};if(l("Failed to decode data with Sourcify",g),"fulfilled"===b.status&&b.value)return l("Decoded data with 4Byte",b.value),{data:d([b.value]),source:n.DecodedTransactionDataSource.FourByte};return l("Failed to decode data with 4Byte",b),undefined};var a=e("@metamask/utils"),n=e("../../../../../shared/types/transaction-decode"),r=e("./uniswap"),i=e("./sourcify"),o=e("./proxy"),c=e("./four-byte");const l=(0,a.createProjectLogger)("transaction-decode");function d(e){return e.map(e=>function(e){return{...e,params:e.params.map(e=>u(e))}}(e))}function u(e){var t;return{...e,value:h(e.value),children:null===(t=e.children)||void 0===t?void 0:t.map(e=>u(e))}}function h(e){const t=e._hex;return t?BigInt(t).toString():e}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/util.ts"}],[2250,{"./constants.cjs":2252,"./logger.cjs":2254,"@metamask/base-controller":1140},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.ShieldController=s.getDefaultShieldControllerState=void 0;const m=e("@metamask/base-controller"),p=e("./constants.cjs"),f=e("./logger.cjs"),g=(0,f.createModuleLogger)(f.projectLogger,"ShieldController");function b(){return{coverageResults:{},orderedTransactionHistory:[]}}s.getDefaultShieldControllerState=b;const y={coverageResults:{persist:!0,anonymous:!1},orderedTransactionHistory:{persist:!0,anonymous:!1}};class w extends m.BaseController{constructor(e){const{messenger:t,state:s,backend:l,transactionHistoryLimit:d=100,coverageHistoryLimit:m=10}=e;super({name:p.controllerName,metadata:y,messenger:t,state:{coverageResults:{},orderedTransactionHistory:[],...s}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),u(this,n,l,"f"),u(this,r,m,"f"),u(this,i,d,"f"),u(this,o,h(this,a,"m",c).bind(this),"f")}start(){this.messagingSystem.subscribe("TransactionController:stateChange",h(this,o,"f"),e=>e.transactions)}stop(){this.messagingSystem.unsubscribe("TransactionController:stateChange",h(this,o,"f"))}async checkCoverage(e){const t=await h(this,a,"m",l).call(this,e);return this.messagingSystem.publish(`${p.controllerName}:coverageResultReceived`,t),h(this,a,"m",d).call(this,e.id,t),t}}s.ShieldController=w,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e,t){const s=new Map(t?.map(e=>[e.id,e])??[]);for(const t of e){const e=s.get(t.id);e&&e.simulationData===t.simulationData||this.checkCoverage(t).catch(e=>g("Error checking coverage:",e))}},l=async function(e){return h(this,n,"f").checkCoverage(e)},d=function(e,t){this.update(s=>{let a=!1,n=s.coverageResults[e];n||(a=!0,n={results:[]},s.coverageResults[e]=n),n.results.length>=h(this,r,"f")&&n.results.pop(),n.results.unshift(t);const{orderedTransactionHistory:o}=s;let c;a&&(o.length>=h(this,i,"f")&&(c=o.pop(),c&&delete s.coverageResults[c]),o.unshift(e))})}}}},{package:"@metamask/shield-controller",file:"node_modules/@metamask/shield-controller/dist/ShieldController.cjs"}],[2251,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.ShieldRemoteBackend=s.BASE_URL=void 0,s.BASE_URL="https://rule-engine.metamask.io";async function p(e){return new Promise(t=>setTimeout(t,e))}s.ShieldRemoteBackend=class{constructor({getAccessToken:e,getCoverageResultTimeout:t=5e3,getCoverageResultPollInterval:u=1e3,baseUrl:p=s.BASE_URL,fetch:f}){a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),this.checkCoverage=async e=>{const t={txParams:[{from:e.txParams.from,to:e.txParams.to,value:e.txParams.value,data:e.txParams.data,nonce:e.txParams.nonce}],chainId:e.chainId,origin:e.origin},{coverageId:s}=await m(this,a,"m",l).call(this,t);return m(this,a,"m",d).call(this,s)},h(this,n,e,"f"),h(this,r,t,"f"),h(this,i,u,"f"),h(this,o,p,"f"),h(this,c,f,"f")}},n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,a=new WeakSet,l=async function(e){const t=await m(this,c,"f").call(this,`${m(this,o,"f")}/api/v1/coverage/init`,{method:"POST",headers:await m(this,a,"m",u).call(this),body:JSON.stringify(e)});if(200!==t.status)throw new Error(`Failed to init coverage check: ${t.status}`);return await t.json()},d=async function(e,t=m(this,r,"f"),s=m(this,i,"f")){const n={coverageId:e},l=await m(this,a,"m",u).call(this);return await new Promise((e,a)=>{let r=!1;setTimeout(()=>{r=!0,a(new Error("Timeout waiting for coverage result"))},t);(async()=>{for(;!r;){const e=Date.now(),t=await m(this,c,"f").call(this,`${m(this,o,"f")}/api/v1/coverage/result`,{method:"POST",headers:l,body:JSON.stringify(n)});if(200===t.status)return await t.json();await p(s-(Date.now()-e))}throw new Error("unexpected error")})().then(e).catch(a)})},u=async function(){return{"Content-Type":"application/json",Authorization:`Bearer ${await m(this,n,"f").call(this)}`}}}}},{package:"@metamask/shield-controller",file:"node_modules/@metamask/shield-controller/dist/backend.cjs"}],[2252,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.controllerName=void 0,s.controllerName="ShieldController"}}},{package:"@metamask/shield-controller",file:"node_modules/@metamask/shield-controller/dist/constants.cjs"}],[2253,{"./ShieldController.cjs":2250,"./backend.cjs":2251},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ShieldRemoteBackend=s.getDefaultShieldControllerState=s.ShieldController=void 0;var a=e("./ShieldController.cjs");Object.defineProperty(s,"ShieldController",{enumerable:!0,get:function(){return a.ShieldController}}),Object.defineProperty(s,"getDefaultShieldControllerState",{enumerable:!0,get:function(){return a.getDefaultShieldControllerState}});var n=e("./backend.cjs");Object.defineProperty(s,"ShieldRemoteBackend",{enumerable:!0,get:function(){return n.ShieldRemoteBackend}})}}},{package:"@metamask/shield-controller",file:"node_modules/@metamask/shield-controller/dist/index.cjs"}],[2254,{"./constants.cjs":2252,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.projectLogger=void 0;const a=e("@metamask/utils");Object.defineProperty(s,"createModuleLogger",{enumerable:!0,get:function(){return a.createModuleLogger}});const n=e("./constants.cjs");s.projectLogger=(0,a.createProjectLogger)(n.controllerName)}}},{package:"@metamask/shield-controller",file:"node_modules/@metamask/shield-controller/dist/logger.cjs"}],[226,{"@ethersproject/abi":572,"@metamask/keyring-controller":1924,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ROOT_AUTHORITY=s.ExecutionMode=s.ANY_BENEFICIARY=void 0,s.encodeRedeemDelegations=function(e,t,s){return new r.Interface(d).encodeFunctionData("redeemDelegations",[h(e),t,(a=s,a.map(m))]);var a},s.signDelegation=async function({chainId:e,delegation:t,from:s,messenger:r}){const c={types:u,primaryType:i,domain:{chainId:String((0,a.hexToNumber)(e)),name:o,version:"1",verifyingContract:"0xdb9B1e94B5b69Df7e401DDbedE43491141047dB3"},message:{...t,chainId:(0,a.hexToNumber)(e)}};return await r.call("KeyringController:signTypedMessage",{from:s,data:c},n.SignTypedDataVersion.V4)};var a=e("@metamask/utils"),n=e("@metamask/keyring-controller"),r=e("@ethersproject/abi");s.ExecutionMode=function(e){return e.BATCH_DEFAULT_MODE="0x0100000000000000000000000000000000000000000000000000000000000000",e}({});s.ROOT_AUTHORITY="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",s.ANY_BENEFICIARY="0x0000000000000000000000000000000000000a11";const i="Delegation",o="DelegationManager",c=[{type:"address",name:"delegate"},{type:"address",name:"delegator"},{type:"bytes32",name:"authority"},{type:"tuple[]",name:"caveats",components:[{type:"address",name:"enforcer"},{type:"bytes",name:"terms"},{type:"bytes",name:"args"}]},{type:"uint256",name:"salt"},{type:"bytes",name:"signature"}],l=[{type:"address",name:"target"},{type:"uint256",name:"value"},{type:"bytes",name:"callData"}],d=[{type:"function",name:"redeemDelegations",inputs:[{name:"_permissionContexts",type:"bytes[]",internalType:"bytes[]"},{name:"_modes",type:"bytes32[]",internalType:"ModeCode[]"},{name:"_executionCallDatas",type:"bytes[]",internalType:"bytes[]"}],outputs:[],stateMutability:"nonpayable"}],u={EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Caveat:[{name:"enforcer",type:"address"},{name:"terms",type:"bytes"}],Delegation:[{name:"delegate",type:"address"},{name:"delegator",type:"address"},{name:"authority",type:"bytes32"},{name:"caveats",type:"Caveat[]"},{name:"salt",type:"uint256"}]};function h(e){return e.map(e=>{return t=e,r.defaultAbiCoder.encode([r.ParamType.from({components:c,name:"delegations",type:"tuple[]"})],[t]);var t})}function m(e){return r.defaultAbiCoder.encode([r.ParamType.from({components:l,name:"executions",type:"tuple[]"})],[e])}}}},{package:"$root$",file:"app/scripts/lib/transaction/delegation.ts"}],[2263,{"./constants":2264,"./types":2266,"./utils":2267,"@ethersproject/bytes":588,"@metamask/controller-utils":1224,"@metamask/eth-query":1756,"@metamask/polling-controller":2271,"@metamask/transaction-controller":2587,"bignumber.js":2276,"lodash/cloneDeep":4338},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u,h,m,p,f,g,b,y,w,v,k,T,S,P,_,E,C,A,M,I=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},x=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},O=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultSmartTransactionsControllerState=s.DEFAULT_INTERVAL=void 0;const j=e("@ethersproject/bytes"),N=e("@metamask/controller-utils"),R=O(e("@metamask/eth-query")),$=e("@metamask/polling-controller"),B=e("@metamask/transaction-controller"),D=e("bignumber.js"),F=O(e("lodash/cloneDeep")),U=e("./constants"),H=e("./types"),L=e("./utils");s.DEFAULT_INTERVAL=5e3;const G="`ethQuery` is not defined on SmartTransactionsController",q="SmartTransactionsController",W={smartTransactionsState:{persist:!1,anonymous:!0}};function V(){return{smartTransactionsState:{smartTransactions:{},userOptIn:null,userOptInV2:null,fees:{approvalTxFees:null,tradeTxFees:null},liveness:!0,livenessByChainId:{[N.ChainId.mainnet]:!0,[N.ChainId.sepolia]:!0},feesByChainId:{[N.ChainId.mainnet]:{approvalTxFees:null,tradeTxFees:null},[N.ChainId.sepolia]:{approvalTxFees:null,tradeTxFees:null}}}}}s.getDefaultSmartTransactionsControllerState=V;class K extends((0,$.StaticIntervalPollingController)()){constructor({interval:e=s.DEFAULT_INTERVAL,clientId:t,chainId:b=N.ChainId.mainnet,supportedChainIds:y=[N.ChainId.mainnet,N.ChainId.sepolia],getNonceLock:w,confirmExternalTransaction:v,trackMetaMetricsEvent:k,state:T={},messenger:S,getTransactions:P,getMetaMetricsProps:_,getFeatureFlags:E,updateTransaction:C,trace:A}){super({name:q,metadata:W,messenger:S,state:Object.assign(Object.assign({},V()),T)}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),u.set(this,void 0),h.set(this,void 0),m.set(this,void 0),p.set(this,void 0),f.set(this,void 0),g.set(this,void 0),I(this,n,e,"f"),I(this,r,t,"f"),I(this,i,b,"f"),I(this,o,y,"f"),this.setIntervalLength(e),I(this,c,w,"f"),I(this,l,undefined,"f"),I(this,d,v,"f"),I(this,u,P,"f"),I(this,h,k,"f"),I(this,m,_,"f"),I(this,p,E,"f"),I(this,f,C,"f"),I(this,g,null!=A?A:(e,t)=>null==t?void 0:t(),"f"),this.initializeSmartTransactionsForChainId(),this.messagingSystem.subscribe("NetworkController:stateChange",({selectedNetworkClientId:e})=>{const{configuration:{chainId:t},provider:s}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);I(this,i,t,"f"),I(this,l,new R.default(s),"f"),this.initializeSmartTransactionsForChainId(),this.checkPoll(this.state)}),this.messagingSystem.subscribe(`${q}:stateChange`,e=>this.checkPoll(e))}async _executePoll({chainIds:e}){const t=(null!=e?e:[]).filter(e=>x(this,o,"f").includes(e));return 0===t.length?Promise.resolve():this.updateSmartTransactions({chainIds:t})}checkPoll({smartTransactionsState:{smartTransactions:e}}){const t=Object.values(e).flat(),s=null==t?void 0:t.filter(L.isSmartTransactionPending);!this.timeoutHandle&&(null==s?void 0:s.length)>0?this.poll():this.timeoutHandle&&0===(null==s?void 0:s.length)&&this.stop()}initializeSmartTransactionsForChainId(){x(this,o,"f").includes(x(this,i,"f"))&&this.update(e=>{var t;e.smartTransactionsState.smartTransactions[x(this,i,"f")]=null!==(t=e.smartTransactionsState.smartTransactions[x(this,i,"f")])&&void 0!==t?t:[]})}async poll(e){e&&I(this,n,e,"f"),this.timeoutHandle&&clearInterval(this.timeoutHandle),x(this,o,"f").includes(x(this,i,"f"))&&(this.timeoutHandle=setInterval(()=>{(0,N.safelyExecute)(async()=>this.updateSmartTransactions())},x(this,n,"f")),await(0,N.safelyExecute)(async()=>this.updateSmartTransactions()))}async stop(){this.timeoutHandle&&clearInterval(this.timeoutHandle),this.timeoutHandle=undefined}setOptInState(e){this.update(t=>{t.smartTransactionsState.userOptInV2=e})}trackStxStatusChange(e,t){let s=(0,F.default)(e);s=Object.assign(Object.assign({},(0,F.default)(t)),s),s.status!==(null==t?void 0:t.status)&&x(this,h,"f").call(this,{event:U.MetaMetricsEventName.StxStatusUpdated,category:U.MetaMetricsEventCategory.Transactions,properties:(0,L.getSmartTransactionMetricsProperties)(s),sensitiveProperties:(0,L.getSmartTransactionMetricsSensitiveProperties)(s)})}isNewSmartTransaction(e,t){const{smartTransactionsState:{smartTransactions:s}}=this.state,a=s[null!=t?t:x(this,i,"f")],n=null==a?void 0:a.findIndex(t=>t.uuid===e);return-1===n||n===undefined}updateSmartTransaction(e,{networkClientId:t}={}){let s=x(this,l,"f"),n=x(this,i,"f");if(t){const{configuration:e,provider:a}=this.messagingSystem.call("NetworkController:getNetworkClientById",t);n=e.chainId,s=new R.default(a)}x(this,a,"m",v).call(this,e,{chainId:n,ethQuery:s})}async updateSmartTransactions({chainIds:e}={chainIds:x(this,a,"m",_).call(this)}){const{smartTransactionsState:{smartTransactions:t}}=this.state;for(const[s,n]of Object.entries(t)){if(e&&!e.includes(s))continue;const t=n.filter(L.isSmartTransactionPending).map(e=>{const t=x(this,a,"m",E).call(this,{chainId:s});return{uuid:e.uuid,networkClientId:t,chainId:e.chainId}});t.length>0&&await this.fetchSmartTransactionsStatus(t)}}async fetchSmartTransactionsStatus(e){const{chainId:t}=e[0],s=e.map(e=>e.uuid),n=new URLSearchParams({uuids:s.join(",")}),r=x(this,a,"m",C).call(this,{networkClientId:e[0].networkClientId}),i=`${(0,L.getAPIRequestURL)(H.APIType.BATCH_STATUS,t)}?${n.toString()}`,o=await x(this,a,"m",b).call(this,i);for(const[s,n]of Object.entries(o)){const i=e.find(e=>e.uuid===s);if(!i){console.error(`No matching transaction found for uuid: ${s}`);continue}const o={statusMetadata:n,status:(0,L.calculateStatus)(n),cancellable:(0,L.isSmartTransactionCancellable)(n),uuid:s,networkClientId:i.networkClientId};await x(this,a,"m",v).call(this,o,{chainId:t,ethQuery:r})}return o}clearFees(){const e={approvalTxFees:null,tradeTxFees:null};return this.update(t=>{t.smartTransactionsState.fees=e}),e}async getFees(e,t,{networkClientId:s}={}){const n=null!=s?s:this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId,r=x(this,a,"m",P).call(this,{networkClientId:n}),o=[];let c;if(t){const s=await x(this,a,"m",S).call(this,t,n);o.push(s),c=Object.assign(Object.assign({},e),{nonce:(0,L.incrementNonceInHex)(s.nonce)})}else c=e.nonce?e:await x(this,a,"m",S).call(this,e,n);o.push(c);const l=await x(this,g,"f").call(this,{name:U.SmartTransactionsTraceName.GetFees},async()=>await x(this,a,"m",b).call(this,(0,L.getAPIRequestURL)(H.APIType.GET_FEES,r),{method:"POST",body:JSON.stringify({txs:o})}));let d,u;return t?(d=null==l?void 0:l.txs[0],u=null==l?void 0:l.txs[1]):(d=null,u=null==l?void 0:l.txs[0]),this.update(e=>{r===x(this,i,"f")&&(e.smartTransactionsState.fees={approvalTxFees:d,tradeTxFees:u}),e.smartTransactionsState.feesByChainId[r]={approvalTxFees:d,tradeTxFees:u}}),{approvalTxFees:d,tradeTxFees:u}}async submitSignedTransactions({transactionMeta:e,txParams:t,signedTransactions:s,signedCanceledTransactions:n=[],networkClientId:r}){var i,o;const l=null!=r?r:this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId,d=x(this,a,"m",P).call(this,{networkClientId:l}),u=x(this,a,"m",C).call(this,{networkClientId:l}),h=await x(this,g,"f").call(this,{name:U.SmartTransactionsTraceName.SubmitTransactions},async()=>await x(this,a,"m",b).call(this,(0,L.getAPIRequestURL)(H.APIType.SUBMIT_TRANSACTIONS,d),{method:"POST",body:JSON.stringify({rawTxs:s,rawCancelTxs:n})})),m=Date.now();let p;try{if(null==t?void 0:t.from){const e=await(0,N.query)(u,"getBalance",[t.from]);p=new D.BigNumber(e).toString(16)}}catch(e){console.error("ethQuery.getBalance error:",e)}let f,y,w={};if(t&&!t.nonce)try{y=await x(this,c,"f").call(this,t.from,l),f=(0,j.hexlify)(y.nextNonce),w=y.nonceDetails,null!==(i=t.nonce)&&void 0!==i||(t.nonce=f)}catch(e){throw console.error("Failed to acquire nonce lock:",e),e}const k=s.map(e=>(0,L.getTxHash)(e)),T=Object.assign(Object.assign({},h),{txHash:k[k.length-1],txHashes:k});try{await x(this,a,"m",v).call(this,{chainId:d,nonceDetails:w,preTxBalance:p,status:H.SmartTransactionStatuses.PENDING,time:m,txParams:t,uuid:T.uuid,txHash:T.txHash,cancellable:!0,type:null!==(o=null==e?void 0:e.type)&&void 0!==o?o:"swap",transactionId:null==e?void 0:e.id,networkClientId:l,txHashes:k},{chainId:d,ethQuery:u})}catch(e){throw console.error("Failed to create a smart transaction:",e),e}finally{y&&y.releaseLock()}return T}async cancelSmartTransaction(e,{networkClientId:t}={}){const s=x(this,a,"m",P).call(this,{networkClientId:t});await x(this,g,"f").call(this,{name:U.SmartTransactionsTraceName.CancelTransaction},async()=>await x(this,a,"m",b).call(this,(0,L.getAPIRequestURL)(H.APIType.CANCEL,s),{method:"POST",body:JSON.stringify({uuid:e})}))}async fetchLiveness({networkClientId:e}={}){const t=x(this,a,"m",P).call(this,{networkClientId:e});let s=!1;try{const e=await x(this,g,"f").call(this,{name:U.SmartTransactionsTraceName.FetchLiveness},async()=>await x(this,a,"m",b).call(this,(0,L.getAPIRequestURL)(H.APIType.LIVENESS,t)));s=Boolean(e.smartTransactions)}catch(e){console.log('"fetchLiveness" API call failed')}return this.update(e=>{t===x(this,i,"f")&&(e.smartTransactionsState.liveness=s),e.smartTransactionsState.livenessByChainId[t]=s}),s}async setStatusRefreshInterval(e){e!==x(this,n,"f")&&I(this,n,e,"f")}getTransactions({addressFrom:e,status:t}){return x(this,a,"m",A).call(this).filter(s=>{var a;return s.status===t&&(null===(a=s.txParams)||void 0===a?void 0:a.from)===e})}getSmartTransactionByMinedTxHash(e){if(!e)return undefined;return x(this,a,"m",A).call(this).find(t=>{var s,a;return(null===(a=null===(s=t.statusMetadata)||void 0===s?void 0:s.minedHash)||void 0===a?void 0:a.toLowerCase())===e.toLowerCase()})}wipeSmartTransactions({address:e,ignoreNetwork:t}){if(!e)return;const s=e.toLowerCase();if(t){const{smartTransactionsState:{smartTransactions:e}}=this.state;Object.keys(e).forEach(e=>{x(this,a,"m",M).call(this,{chainId:e,addressLowerCase:s})})}else x(this,a,"m",M).call(this,{chainId:x(this,i,"f"),addressLowerCase:s})}}s.default=K,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,u=new WeakMap,h=new WeakMap,m=new WeakMap,p=new WeakMap,f=new WeakMap,g=new WeakMap,a=new WeakSet,b=async function(e,t){const s=Object.assign(Object.assign({},t),{headers:Object.assign({"Content-Type":"application/json"},x(this,r,"f")&&{"X-Client-Id":x(this,r,"f")})});return(0,L.handleFetch)(e,s)},y=function(e,{chainId:t=x(this,i,"f")}){var s;const{smartTransactionsState:{smartTransactions:a}}=this.state,n=null!==(s=a[t])&&void 0!==s?s:[],r=null==n?void 0:n.findIndex(t=>t.uuid===e.uuid);-1!==r&&(0,N.isSafeDynamicKey)(t)&&this.update(s=>{s.smartTransactionsState.smartTransactions[t][r]=Object.assign(Object.assign({},s.smartTransactionsState.smartTransactions[t][r]),e)})},w=async function(e){const t=await x(this,m,"f").call(this);e.accountHardwareType=null==t?void 0:t.accountHardwareType,e.accountType=null==t?void 0:t.accountType,e.deviceModel=null==t?void 0:t.deviceModel},v=async function(e,{chainId:t=x(this,i,"f"),ethQuery:s=x(this,l,"f")}){var n;const{smartTransactionsState:{smartTransactions:o}}=this.state,c=null!==(n=o[t])&&void 0!==n?n:[],d=null==c?void 0:c.findIndex(t=>t.uuid===e.uuid),h=this.isNewSmartTransaction(e.uuid,t);if(s===undefined)throw new Error(G);if(h)try{await x(this,a,"m",w).call(this,e)}catch(e){console.error("Failed to add metrics props to smart transaction:",e)}if(this.trackStxStatusChange(e,h?undefined:c[d]),h){const s=null==c?void 0:c.findIndex(t=>{var s,a,n;return(null===(s=t.txParams)||void 0===s?void 0:s.nonce)===(null===(a=e.txParams)||void 0===a?void 0:a.nonce)&&(null===(n=t.status)||void 0===n?void 0:n.startsWith("cancelled"))}),a=[(0,F.default)(e)],n=Object.assign(Object.assign({},e),{history:a}),r=s>-1?c.slice(0,s).concat(c.slice(s+1)).concat(n):c.concat(n);return void this.update(e=>{e.smartTransactionsState.smartTransactions[t]=r})}const m=c[d],g=Object.assign(Object.assign({},m),e);this.messagingSystem.publish("SmartTransactionsController:smartTransaction",g),(0,L.shouldMarkRegularTransactionAsFailed)({smartTransaction:g,clientId:x(this,r,"f"),getFeatureFlags:x(this,p,"f")})&&(0,L.markRegularTransactionAsFailed)({smartTransaction:g,getRegularTransactions:x(this,u,"f"),updateTransaction:x(this,f,"f")}),e.status!==H.SmartTransactionStatuses.SUCCESS&&e.status!==H.SmartTransactionStatuses.REVERTED||e.confirmed?x(this,a,"m",y).call(this,e,{chainId:t}):await x(this,a,"m",T).call(this,g,{chainId:t,ethQuery:s})},k=function(e){if(!e)return!0;const t=x(this,u,"f").call(this),s=null==t?void 0:t.find(t=>{var s;return(null===(s=t.hash)||void 0===s?void 0:s.toLowerCase())===e.toLowerCase()});return!s||![B.TransactionStatus.confirmed,B.TransactionStatus.submitted].includes(s.status)},T=async function(e,{chainId:t=x(this,i,"f"),ethQuery:s=x(this,l,"f")}){var n;if(s===undefined)throw new Error(G);const r=null===(n=e.statusMetadata)||void 0===n?void 0:n.minedHash;try{const n=await(0,N.query)(s,"getTransactionReceipt",[r]),i=await(0,N.query)(s,"getTransactionByHash",[r]),o=null==i?void 0:i.maxFeePerGas,c=null==i?void 0:i.maxPriorityFeePerGas;if(null==n?void 0:n.blockNumber){const i=await(0,N.query)(s,"getBlockByNumber",[null==n?void 0:n.blockNumber,!1]),l=null==i?void 0:i.baseFeePerGas,u=Object.assign(Object.assign({},e.txParams),{maxFeePerGas:o,maxPriorityFeePerGas:c}),m=Object.assign(Object.assign({},e),{id:e.uuid,status:B.TransactionStatus.confirmed,hash:r,txParams:u}),p=(0,L.snapshotFromTxMeta)(m),f=(0,L.replayHistory)(m.history),g=(0,L.generateHistoryEntry)(f,p,"txStateManager: setting status to confirmed"),b=g.length>0?Object.assign(Object.assign({},m),{history:m.history.concat(g)}):m;x(this,a,"m",k).call(this,r)&&x(this,d,"f").call(this,b,n,l),x(this,h,"f").call(this,{event:U.MetaMetricsEventName.StxConfirmed,category:U.MetaMetricsEventCategory.Transactions,properties:(0,L.getSmartTransactionMetricsProperties)(e),sensitiveProperties:(0,L.getSmartTransactionMetricsSensitiveProperties)(e)}),x(this,a,"m",y).call(this,Object.assign(Object.assign({},e),{confirmed:!0}),{chainId:t})}}catch(e){x(this,h,"f").call(this,{event:U.MetaMetricsEventName.StxConfirmationFailed,category:U.MetaMetricsEventCategory.Transactions}),console.error("confirm error",e)}finally{this.messagingSystem.publish("SmartTransactionsController:smartTransactionConfirmationDone",e)}},S=async function(e,t){const s=await x(this,c,"f").call(this,e.from,t),a=s.nextNonce;return s.releaseLock(),Object.assign(Object.assign({},e),{nonce:`0x${a.toString(16)}`})},P=function({networkClientId:e}={}){return e?this.messagingSystem.call("NetworkController:getNetworkClientById",e).configuration.chainId:x(this,i,"f")},_=function(){const{networkConfigurationsByChainId:e}=this.messagingSystem.call("NetworkController:getState");return Object.keys(e).filter(e=>x(this,o,"f").includes(e))},E=function({chainId:e}){const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState");return t[e].rpcEndpoints[t[e].defaultRpcEndpointIndex].networkClientId},C=function({networkClientId:e}={}){if(e){const{provider:t}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return new R.default(t)}if(x(this,l,"f")===undefined)throw new Error(G);return x(this,l,"f")},A=function(){const{smartTransactionsState:{smartTransactions:e}}=this.state,t=Object.values(e).flat();return t&&0!==t.length?t:[]},M=function({chainId:e,addressLowerCase:t}){const{smartTransactionsState:{smartTransactions:s}}=this.state,a=null==s?void 0:s[e];if(!a||0===a.length)return;const n=a.filter(e=>{var s;return(null===(s=e.txParams)||void 0===s?void 0:s.from)!==t});this.update(t=>{t.smartTransactionsState.smartTransactions[e]=n})}}}},{package:"@metamask/smart-transactions-controller",file:"node_modules/@metamask/smart-transactions-controller/dist/SmartTransactionsController.js"}],[2264,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SmartTransactionsTraceName=s.MetaMetricsEventCategory=s.MetaMetricsEventName=s.SENTINEL_API_BASE_URL_MAP=s.API_BASE_URL=void 0,s.API_BASE_URL="https://transaction.api.cx.metamask.io",s.SENTINEL_API_BASE_URL_MAP={1:"https://tx-sentinel-ethereum-mainnet.api.cx.metamask.io",56:"https://tx-sentinel-bsc-mainnet.api.cx.metamask.io",8453:"https://tx-sentinel-base-mainnet.api.cx.metamask.io",42161:"https://tx-sentinel-arbitrum-mainnet.api.cx.metamask.io",59144:"https://tx-sentinel-linea-mainnet.api.cx.metamask.io",11155111:"https://tx-sentinel-ethereum-sepolia.api.cx.metamask.io"},function(e){e.StxStatusUpdated="STX Status Updated",e.StxConfirmed="STX Confirmed",e.StxConfirmationFailed="STX Confirmation Failed",e.ReceiveRequest="Receive Request"}(s.MetaMetricsEventName||(s.MetaMetricsEventName={})),function(e){e.Transactions="Transactions",e.Navigation="Navigation"}(s.MetaMetricsEventCategory||(s.MetaMetricsEventCategory={})),function(e){e.GetFees="Smart Transactions: Get Fees",e.SubmitTransactions="Smart Transactions: Submit Transactions",e.CancelTransaction="Smart Transactions: Cancel Transaction",e.FetchLiveness="Smart Transactions: Fetch Liveness"}(s.SmartTransactionsTraceName||(s.SmartTransactionsTraceName={}))}}},{package:"@metamask/smart-transactions-controller",file:"node_modules/@metamask/smart-transactions-controller/dist/constants.js"}],[2265,{"./SmartTransactionsController":2263},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var n=e("./SmartTransactionsController");Object.defineProperty(s,"default",{enumerable:!0,get:function(){return a(n).default}})}}},{package:"@metamask/smart-transactions-controller",file:"node_modules/@metamask/smart-transactions-controller/dist/index.js"}],[2267,{"../package.json":2277,"./constants":2264,"./types":2266,"@ethersproject/bytes":588,"@ethersproject/keccak256":614,"@ethersproject/transactions":664,"@metamask/transaction-controller":2587,"bignumber.js":2276,"fast-json-patch":3937,lodash:4362},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.markRegularTransactionAsFailed=s.shouldMarkRegularTransactionAsFailed=s.getReturnTxHashAsap=s.getSmartTransactionMetricsSensitiveProperties=s.getSmartTransactionMetricsProperties=s.getTxHash=s.incrementNonceInHex=s.isSmartTransactionCancellable=s.handleFetch=s.mapKeysToCamel=s.getStxProcessingTime=s.snapshotFromTxMeta=s.replayHistory=s.generateHistoryEntry=s.calculateStatus=s.getAPIRequestURL=s.isSmartTransactionStatusResolved=s.isSmartTransactionPending=void 0;const n=e("@ethersproject/bytes"),r=e("@ethersproject/keccak256"),i=e("@ethersproject/transactions"),o=e("@metamask/transaction-controller"),c=e("bignumber.js"),l=a(e("fast-json-patch")),d=a(e("lodash")),u=a(e("../package.json")),h=e("./constants"),m=e("./types");s.isSmartTransactionPending=function(e){return e.status===m.SmartTransactionStatuses.PENDING};s.isSmartTransactionStatusResolved=e=>"uuid_not_found"===e,s.getAPIRequestURL=function(e,t){const s=parseInt(t,16);switch(e){case m.APIType.GET_FEES:return`${h.API_BASE_URL}/networks/${s}/getFees`;case m.APIType.ESTIMATE_GAS:return`${h.API_BASE_URL}/networks/${s}/estimateGas`;case m.APIType.SUBMIT_TRANSACTIONS:return`${h.API_BASE_URL}/networks/${s}/submitTransactions?stxControllerVersion=${u.default.version}`;case m.APIType.CANCEL:return`${h.API_BASE_URL}/networks/${s}/cancel`;case m.APIType.BATCH_STATUS:return`${h.API_BASE_URL}/networks/${s}/batchStatus`;case m.APIType.LIVENESS:return`${h.SENTINEL_API_BASE_URL_MAP[s]}/network`;default:throw new Error("Invalid APIType")}};s.calculateStatus=e=>{if((0,s.isSmartTransactionStatusResolved)(e))return m.SmartTransactionStatuses.RESOLVED;const t=[m.SmartTransactionCancellationReason.WOULD_REVERT,m.SmartTransactionCancellationReason.TOO_CHEAP,m.SmartTransactionCancellationReason.DEADLINE_MISSED,m.SmartTransactionCancellationReason.INVALID_NONCE,m.SmartTransactionCancellationReason.USER_CANCELLED];if((null==e?void 0:e.minedTx)===m.SmartTransactionMinedTx.NOT_MINED){if(e.cancellationReason===m.SmartTransactionCancellationReason.NOT_CANCELLED)return m.SmartTransactionStatuses.PENDING;const s=t.findIndex(t=>t===e.cancellationReason)>-1;if(e.cancellationReason&&s)return e.isSettled?m.cancellationReasonToStatusMap[e.cancellationReason]:m.SmartTransactionStatuses.PENDING}else{if((null==e?void 0:e.minedTx)===m.SmartTransactionMinedTx.SUCCESS)return m.SmartTransactionStatuses.SUCCESS;if((null==e?void 0:e.minedTx)===m.SmartTransactionMinedTx.CANCELLED)return m.SmartTransactionStatuses.CANCELLED;if((null==e?void 0:e.minedTx)===m.SmartTransactionMinedTx.REVERTED)return m.SmartTransactionStatuses.REVERTED;if((null==e?void 0:e.minedTx)===m.SmartTransactionMinedTx.UNKNOWN)return m.SmartTransactionStatuses.UNKNOWN}return m.SmartTransactionStatuses.UNKNOWN},s.generateHistoryEntry=function(e,t,s){const a=l.default.compare(e,t);return a[0]&&(s&&(a[0].note=s),a[0].timestamp=Date.now()),a},s.replayHistory=function(e){return d.default.cloneDeep(e).reduce((e,t)=>l.default.applyPatch(e,t).newDocument)},s.snapshotFromTxMeta=function(e){const t=Object.assign({},e);return delete t.history,d.default.cloneDeep(t)};s.getStxProcessingTime=e=>e?Math.round((Date.now()-e)/1e3):undefined;s.mapKeysToCamel=e=>{if(!d.default.isObject(e))return e;const t=d.default.mapValues(e,e=>d.default.isArray(e)?e.map(s.mapKeysToCamel):d.default.isObject(e)?(0,s.mapKeysToCamel)(e):e);return d.default.mapKeys(t,(e,t)=>d.default.camelCase(t))},s.handleFetch=async function(e,t){const a=await fetch(e,t),n=await a.json();if(!a.ok)throw console.log("response",a),new Error(`Fetch error:${JSON.stringify(Object.assign({status:a.status},(0,s.mapKeysToCamel)(n)))}`);return n};s.isSmartTransactionCancellable=e=>e.minedTx===m.SmartTransactionMinedTx.NOT_MINED&&(!e.cancellationReason||e.cancellationReason===m.SmartTransactionCancellationReason.NOT_CANCELLED);s.incrementNonceInHex=e=>{const t=new c.BigNumber(e,16).toString(10);return(0,n.hexlify)(Number(t)+1)};s.getTxHash=e=>{var t;if(!e)return"";try{const s=(0,i.parse)(e);return null!==(t=null==s?void 0:s.hash)&&void 0!==t?t:""}catch(t){if((e=>"string"==typeof e&&e.startsWith("0x04"))(e))return(0,n.hexlify)((0,r.keccak256)((0,n.arrayify)(e)));throw t}};s.getSmartTransactionMetricsProperties=e=>{if(!e)return{};const t=e.statusMetadata;return{stx_status:e.status,type:e.type,processing_time:(0,s.getStxProcessingTime)(e.time),is_smart_transaction:!0,stx_enabled:!0,current_stx_enabled:!0,stx_user_opt_in:!0,stx_duplicated:null==t?void 0:t.duplicated,stx_timed_out:null==t?void 0:t.timedOut,stx_proxied:null==t?void 0:t.proxied}};s.getSmartTransactionMetricsSensitiveProperties=e=>e?{token_from_symbol:e.sourceTokenSymbol,token_to_symbol:e.destinationTokenSymbol,account_hardware_type:e.accountHardwareType,account_type:e.accountType,device_model:e.deviceModel}:{};s.getReturnTxHashAsap=(e,t)=>e===m.ClientId.Extension?null==t?void 0:t.extensionReturnTxHashAsap:null==t?void 0:t.mobileReturnTxHashAsap;s.shouldMarkRegularTransactionAsFailed=({smartTransaction:e,clientId:t,getFeatureFlags:a})=>{var n;const{status:r,transactionId:i}=e,o=[m.SmartTransactionStatuses.CANCELLED,m.SmartTransactionStatuses.CANCELLED_USER_CANCELLED,m.SmartTransactionStatuses.UNKNOWN,m.SmartTransactionStatuses.RESOLVED];if(!r||!o.includes(r))return!1;const{smartTransactions:c}=null!==(n=a())&&void 0!==n?n:{},l=(0,s.getReturnTxHashAsap)(t,c);return Boolean(l&&i)};s.markRegularTransactionAsFailed=({smartTransaction:e,getRegularTransactions:t,updateTransaction:s})=>{const{transactionId:a,status:n}=e,r=t().find(e=>e.id===a);if(!r)throw new Error("Cannot find regular transaction to mark it as failed");if(r.status===o.TransactionStatus.failed)return;s(Object.assign(Object.assign({},r),{status:o.TransactionStatus.failed,error:{name:"SmartTransactionFailed",message:`Smart transaction failed with status: ${n}`}}),`Smart transaction status: ${n}`)}}}},{package:"@metamask/smart-transactions-controller",file:"node_modules/@metamask/smart-transactions-controller/dist/utils.js"}],[2268,{"fast-json-stable-stringify":3938,uuid:5195},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AbstractPollingControllerBaseMixin=s.getKey=void 0;const r=n(e("fast-json-stable-stringify")),i=e("uuid");s.getKey=e=>(0,r.default)(e),s.AbstractPollingControllerBaseMixin=function(e){var t,n;return t=new WeakMap,n=new WeakMap,class extends e{constructor(){super(...arguments),t.set(this,new Map),n.set(this,new Map)}startPolling(e){const n=(0,i.v4)(),r=(0,s.getKey)(e),o=a(this,t,"f").get(r)??new Set;return o.add(n),a(this,t,"f").set(r,o),1===o.size&&this._startPolling(e),n}stopAllPolling(){a(this,t,"f").forEach((e,t)=>{e.forEach(e=>{this.stopPollingByPollingToken(e)})})}stopPollingByPollingToken(e){if(!e)throw new Error("pollingToken required");let s=null;for(const[n,r]of a(this,t,"f"))if(r.delete(e)){0===r.size&&(s=n);break}if(s){this._stopPollingByPollingTokenSetId(s),a(this,t,"f").delete(s);const e=a(this,n,"f").get(s);if(e){for(const t of e)t(JSON.parse(s));e.clear()}}}onPollingComplete(e,t){const r=(0,s.getKey)(e),i=a(this,n,"f").get(r)??new Set;i.add(t),a(this,n,"f").set(r,i)}}}}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/dist/AbstractPollingController.cjs"}],[2269,{"./AbstractPollingController.cjs":2268,"@metamask/base-controller":2275},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BlockTrackerPollingController=s.BlockTrackerPollingControllerOnly=void 0;const n=e("@metamask/base-controller"),r=e("./AbstractPollingController.cjs");function i(e){var t;class s extends((0,r.AbstractPollingControllerBaseMixin)(e)){constructor(){super(...arguments),t.set(this,{})}_startPolling(e){const s=(0,r.getKey)(e);if(a(this,t,"f")[s])return;const n=this._getNetworkClientById(e.networkClientId);if(!n)throw new Error(`Unable to retrieve blockTracker for networkClientId ${e.networkClientId}`);{const r=this._executePoll.bind(this,e);n.blockTracker.addListener("latest",r),a(this,t,"f")[s]=r}}_stopPollingByPollingTokenSetId(e){const{networkClientId:s}=JSON.parse(e),n=this._getNetworkClientById(s);if(n&&a(this,t,"f")[e]){const s=a(this,t,"f")[e];s&&(n.blockTracker.removeListener("latest",s),delete a(this,t,"f")[e])}}}return t=new WeakMap,s}class o{}s.BlockTrackerPollingControllerOnly=()=>i(o);s.BlockTrackerPollingController=()=>i(n.BaseController)}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/dist/BlockTrackerPollingController.cjs"}],[227,{"../delegation":226,"../transaction-relay":231,"@ethersproject/abi":572,"@metamask/metamask-eth-abis":1979,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.Delegation7702PublishHook=void 0;var a=e("@metamask/utils"),n=e("@metamask/metamask-eth-abis"),r=e("@ethersproject/abi"),i=e("../delegation"),o=e("../transaction-relay");function c(e,t,s){l(e,t),t.set(e,s)}function l(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function d(e,t){return e.get(h(e,t))}function u(e,t,s){return e.set(h(e,t),s),s}function h(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}const m="0x",p={transactionHash:undefined},f=(0,a.createProjectLogger)("delegation-7702-publish-hook");var g=new WeakMap,b=new WeakMap,y=new WeakSet;async function w(e,t){try{return await h(y,this,v).call(this,e,t)}catch(e){throw f("Error",e),e}}async function v(e,t){const{chainId:s,gasFeeTokens:a,selectedGasFeeToken:n,txParams:r}=e,{from:c}=r,l=(await d(g,this).call(this,{address:c,chainIds:[s]})).find(e=>e.chainId.toLowerCase()===s.toLowerCase());if(!(l&&(!l.delegationAddress||l.isSupported)))return f("Skipping as EIP-7702 is not supported",{from:c,chainId:s}),p;const{delegationAddress:u,upgradeContractAddress:m}=l;if(!n||null==a||!a.length)return f("Skipping as no selected gas fee token"),p;const b=a.find(e=>e.tokenAddress.toLowerCase()===n.toLowerCase());if(!b)throw new Error("Selected gas fee token not found");const w=await h(y,this,T).call(this,e,b),v=h(y,this,k).call(this,e,b),S=(0,i.encodeRedeemDelegations)([[w]],[i.ExecutionMode.BATCH_DEFAULT_MODE],[v]),_={chainId:s,data:S,to:"0xdb9B1e94B5b69Df7e401DDbedE43491141047dB3"};u||(_.authorizationList=await h(y,this,P).call(this,e,m)),f("Relay request",_);const{uuid:E}=await(0,o.submitRelayTransaction)(_),{transactionHash:C,status:A}=await(0,o.waitForRelayResult)({chainId:s,uuid:E,interval:1e3});if(A!==o.RelayStatus.Success)throw new Error(`Transaction relay error - ${A}`);return{transactionHash:C}}function k(e,t){const{txParams:s}=e,{data:a,to:n,value:r}=s;return[{target:n,value:r??"0x0",callData:a??m},{target:t.tokenAddress,value:"0x0",callData:h(y,this,_).call(this,t.recipient,t.amount)}]}async function T(e,t){const{chainId:s,txParams:a}=e,{from:n}=a,r=h(y,this,S).call(this,a,t);f("Caveats",r);const o={authority:i.ROOT_AUTHORITY,caveats:r,delegate:i.ANY_BENEFICIARY,delegator:n,salt:(new Date).getTime()};f("Unsigned delegation",o);const c=await(0,i.signDelegation)({chainId:s,delegation:o,from:n,messenger:d(b,this)});return f("Delegation signature",c),{...o,signature:c}}function S(e,t){const{amount:s,recipient:n,tokenAddress:r}=t,{data:i,to:o}=e,c=(0,a.add0x)((0,a.remove0x)(s).padStart(64,"0"));return[{enforcer:"0x00e0251aaA263dfE3B3541B758A82D1CBA1c3B6D",terms:(0,a.add0x)([r,n,c,o,i??m].map(a.remove0x).join("")),args:m}]}async function P(e,t){const{chainId:s,txParams:a}=e,{from:n,nonce:r}=a;if(f("Including authorization as not upgraded"),!t)throw new Error("Upgrade contract address not found");const i=await d(b,this).call("KeyringController:signEip7702Authorization",{chainId:parseInt(s,16),contractAddress:t,from:n,nonce:parseInt(r,16)}),{r:o,s:c,yParity:l}=h(y,this,E).call(this,i);return f("Authorization signature",{authorizationSignature:i,r:o,s:c,yParity:l}),[{address:t,chainId:s,nonce:r,r:o,s:c,yParity:l}]}function _(e,t){return new r.Interface(n.abiERC20).encodeFunctionData("transfer",[e,t])}function E(e){return{r:e.slice(0,66),s:`0x${e.slice(66,130)}`,yParity:parseInt(e.slice(130,132),16)-27==0?"0x":"0x1"}}s.Delegation7702PublishHook=class{constructor({isAtomicBatchSupported:e,messenger:t}){var s,a;l(s=this,a=y),a.add(s),c(this,g,void 0),c(this,b,void 0),u(g,this,e),u(b,this,t)}getHook(){return h(y,this,w).bind(this)}}}}},{package:"$root$",file:"app/scripts/lib/transaction/hooks/delegation-7702-publish.ts"}],[2270,{"./AbstractPollingController.cjs":2268,"@metamask/base-controller":2275},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},n=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.StaticIntervalPollingController=s.StaticIntervalPollingControllerOnly=void 0;const r=e("@metamask/base-controller"),i=e("./AbstractPollingController.cjs");function o(e){var t,s;class r extends((0,i.AbstractPollingControllerBaseMixin)(e)){constructor(){super(...arguments),t.set(this,{}),s.set(this,1e3)}setIntervalLength(e){a(this,s,e,"f")}getIntervalLength(){return n(this,s,"f")}_startPolling(e){if(!n(this,s,"f"))throw new Error("intervalLength must be defined and greater than 0");const a=(0,i.getKey)(e),r=n(this,t,"f")[a];this._stopPollingByPollingTokenSetId(a);const o=n(this,t,"f")[a]=setTimeout(async()=>{try{await this._executePoll(e)}catch(e){console.error(e)}o===n(this,t,"f")[a]&&this._startPolling(e)},r?n(this,s,"f"):0)}_stopPollingByPollingTokenSetId(e){const s=n(this,t,"f")[e];s&&(clearTimeout(s),delete n(this,t,"f")[e])}}return t=new WeakMap,s=new WeakMap,r}class c{}s.StaticIntervalPollingControllerOnly=()=>o(c);s.StaticIntervalPollingController=()=>o(r.BaseController)}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/dist/StaticIntervalPollingController.cjs"}],[2271,{"./BlockTrackerPollingController.cjs":2269,"./StaticIntervalPollingController.cjs":2270},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.StaticIntervalPollingController=s.StaticIntervalPollingControllerOnly=s.BlockTrackerPollingController=s.BlockTrackerPollingControllerOnly=void 0;var a=e("./BlockTrackerPollingController.cjs");Object.defineProperty(s,"BlockTrackerPollingControllerOnly",{enumerable:!0,get:function(){return a.BlockTrackerPollingControllerOnly}}),Object.defineProperty(s,"BlockTrackerPollingController",{enumerable:!0,get:function(){return a.BlockTrackerPollingController}});var n=e("./StaticIntervalPollingController.cjs");Object.defineProperty(s,"StaticIntervalPollingControllerOnly",{enumerable:!0,get:function(){return n.StaticIntervalPollingControllerOnly}}),Object.defineProperty(s,"StaticIntervalPollingController",{enumerable:!0,get:function(){return n.StaticIntervalPollingController}})}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/dist/index.cjs"}],[2272,{immer:4157},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.deriveStateFromMetadata=s.getPersistentState=s.getAnonymizedState=s.BaseController=s.isBaseController=void 0;const i=e("immer");(0,i.enablePatches)(),s.isBaseController=function(e){return"object"==typeof e&&null!==e&&"name"in e&&"string"==typeof e.name&&"state"in e&&"object"==typeof e.state&&"metadata"in e&&"object"==typeof e.metadata};function o(e,t,s){return Object.keys(e).reduce((a,n)=>{try{const r=t[n];if(!r)throw new Error(`No metadata found for '${String(n)}'`);const i=r[s],o=e[n];return"function"==typeof i?a[n]=i(o):i&&(a[n]=o),a}catch(e){return setTimeout(()=>{throw e}),a}},{})}s.BaseController=class{constructor({messenger:e,metadata:t,name:s,state:r}){a.set(this,void 0),this.messagingSystem=e,this.name=s,n(this,a,(0,i.freeze)(r,!0),"f"),this.metadata=t,this.messagingSystem.registerActionHandler(`${s}:getState`,()=>this.state),this.messagingSystem.registerInitialEventPayload({eventType:`${s}:stateChange`,getPayload:()=>[this.state,[]]})}get state(){return r(this,a,"f")}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,s,o]=i.produceWithPatches(r(this,a,"f"),e);return s.length>0&&(n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,s)),{nextState:t,patches:s,inversePatches:o}}applyPatches(e){const t=(0,i.applyPatches)(r(this,a,"f"),e);n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,e)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},a=new WeakMap,s.getAnonymizedState=function(e,t){return o(e,t,"anonymous")},s.getPersistentState=function(e,t){return o(e,t,"persist")},s.deriveStateFromMetadata=o}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller>@metamask/base-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/BaseController.cjs"}],[2273,{"./RestrictedMessenger.cjs":2274},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.Messenger=void 0;const c=e("./RestrictedMessenger.cjs");s.Messenger=class{constructor(){a.set(this,new Map),n.set(this,new Map),r.set(this,new Map),i.set(this,new Map)}registerActionHandler(e,t){if(o(this,a,"f").has(e))throw new Error(`A handler for ${e} has already been registered`);o(this,a,"f").set(e,t)}registerMethodActionHandlers(e,t){for(const s of t){const t=e[s];if("function"==typeof t){const a=`${e.name}:${s}`;this.registerActionHandler(a,t.bind(e))}}}unregisterActionHandler(e){o(this,a,"f").delete(e)}clearActions(){o(this,a,"f").clear()}call(e,...t){const s=o(this,a,"f").get(e);if(!s)throw new Error(`A handler for ${e} has not been registered`);return s(...t)}registerInitialEventPayload({eventType:e,getPayload:t}){o(this,r,"f").set(e,t)}publish(e,...t){const s=o(this,n,"f").get(e);if(s)for(const[e,a]of s.entries())try{if(a){const s=o(this,i,"f").get(e),n=a(...t);n!==s&&(o(this,i,"f").set(e,n),e(n,s))}else e(...t)}catch(e){setTimeout(()=>{throw e})}}subscribe(e,t,s){let a=o(this,n,"f").get(e);a||(a=new Map,o(this,n,"f").set(e,a));const c=t;if(a.set(c,s),s){const t=o(this,r,"f").get(e);if(t){const e=s(...t());o(this,i,"f").set(c,e)}}}unsubscribe(e,t){const s=o(this,n,"f").get(e),a=t;if(!s||!s.has(a))throw new Error(`Subscription not found for event: ${e}`);s.get(a)&&o(this,i,"f").delete(a),s.delete(a)}clearEventSubscriptions(e){o(this,n,"f").delete(e)}clearSubscriptions(){o(this,n,"f").clear()}getRestricted({name:e,allowedActions:t,allowedEvents:s}){return new c.RestrictedMessenger({messenger:this,name:e,allowedActions:t,allowedEvents:s})}},a=new WeakMap,n=new WeakMap,r=new WeakMap,i=new WeakMap}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller>@metamask/base-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/Messenger.cjs"}],[2274,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,d,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=void 0;s.RestrictedMessenger=class{constructor({messenger:e,name:t,allowedActions:s,allowedEvents:c}){if(a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),!e)throw new Error("Messenger not provided");u(this,n,e,"f"),u(this,r,t,"f"),u(this,i,s,"f"),u(this,o,c,"f")}registerActionHandler(e,t){if(!h(this,a,"m",d).call(this,e))throw new Error(`Only allowed registering action handlers prefixed by '${h(this,r,"f")}:'`);h(this,n,"f").registerActionHandler(e,t)}registerMethodActionHandlers(e,t){h(this,n,"f").registerMethodActionHandlers(e,t)}unregisterActionHandler(e){if(!h(this,a,"m",d).call(this,e))throw new Error(`Only allowed unregistering action handlers prefixed by '${h(this,r,"f")}:'`);h(this,n,"f").unregisterActionHandler(e)}call(e,...t){if(!h(this,a,"m",l).call(this,e))throw new Error(`Action missing from allow list: ${e}`);return h(this,n,"f").call(e,...t)}registerInitialEventPayload({eventType:e,getPayload:t}){if(!h(this,a,"m",d).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${h(this,r,"f")}:'`);h(this,n,"f").registerInitialEventPayload({eventType:e,getPayload:t})}publish(e,...t){if(!h(this,a,"m",d).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${h(this,r,"f")}:'`);h(this,n,"f").publish(e,...t)}subscribe(e,t,s){if(!h(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);return s?h(this,n,"f").subscribe(e,t,s):h(this,n,"f").subscribe(e,t)}unsubscribe(e,t){if(!h(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);h(this,n,"f").unsubscribe(e,t)}clearEventSubscriptions(e){if(!h(this,a,"m",d).call(this,e))throw new Error(`Only allowed clearing events prefixed by '${h(this,r,"f")}:'`);h(this,n,"f").clearEventSubscriptions(e)}},n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){const t=h(this,o,"f");return h(this,a,"m",d).call(this,e)||null!==t&&t.includes(e)},l=function(e){const t=h(this,i,"f");return h(this,a,"m",d).call(this,e)||null!==t&&t.includes(e)},d=function(e){return e.startsWith(`${h(this,r,"f")}:`)}}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller>@metamask/base-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/RestrictedMessenger.cjs"}],[2275,{"./BaseController.cjs":2272,"./Messenger.cjs":2273,"./RestrictedMessenger.cjs":2274},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=s.Messenger=s.isBaseController=s.getPersistentState=s.getAnonymizedState=s.deriveStateFromMetadata=s.BaseController=void 0;var a=e("./BaseController.cjs");Object.defineProperty(s,"BaseController",{enumerable:!0,get:function(){return a.BaseController}}),Object.defineProperty(s,"deriveStateFromMetadata",{enumerable:!0,get:function(){return a.deriveStateFromMetadata}}),Object.defineProperty(s,"getAnonymizedState",{enumerable:!0,get:function(){return a.getAnonymizedState}}),Object.defineProperty(s,"getPersistentState",{enumerable:!0,get:function(){return a.getPersistentState}}),Object.defineProperty(s,"isBaseController",{enumerable:!0,get:function(){return a.isBaseController}});var n=e("./Messenger.cjs");Object.defineProperty(s,"Messenger",{enumerable:!0,get:function(){return n.Messenger}});var r=e("./RestrictedMessenger.cjs");Object.defineProperty(s,"RestrictedMessenger",{enumerable:!0,get:function(){return r.RestrictedMessenger}})}}},{package:"@metamask/smart-transactions-controller>@metamask/polling-controller>@metamask/base-controller",file:"node_modules/@metamask/smart-transactions-controller/node_modules/@metamask/polling-controller/node_modules/@metamask/base-controller/dist/index.cjs"}],[2276,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){!function(e){var s,a=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,n=Math.ceil,r=Math.floor,i="[BigNumber Error] ",o=i+"Number primitive has more than 15 significant digits: ",c=1e14,l=14,d=9007199254740991,u=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],h=1e7,m=1e9;function p(e){var t=0|e;return e>0||e===t?t:t-1}function f(e){for(var t,s,a=1,n=e.length,r=e[0]+"";a<n;){for(t=e[a++]+"",s=l-t.length;s--;t="0"+t);r+=t}for(n=r.length;48===r.charCodeAt(--n););return r.slice(0,n+1||1)}function g(e,t){var s,a,n=e.c,r=t.c,i=e.s,o=t.s,c=e.e,l=t.e;if(!i||!o)return null;if(s=n&&!n[0],a=r&&!r[0],s||a)return s?a?0:-o:i;if(i!=o)return i;if(s=i<0,a=c==l,!n||!r)return a?0:!n^s?1:-1;if(!a)return c>l^s?1:-1;for(o=(c=n.length)<(l=r.length)?c:l,i=0;i<o;i++)if(n[i]!=r[i])return n[i]>r[i]^s?1:-1;return c==l?0:c>l^s?1:-1}function b(e,t,s,a){if(e<t||e>s||e!==r(e))throw Error(i+(a||"Argument")+("number"==typeof e?e<t||e>s?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function y(e){var t=e.c.length-1;return p(e.e/l)==t&&e.c[t]%2!=0}function w(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function v(e,t,s){var a,n;if(t<0){for(n=s+".";++t;n+=s);e=n+e}else if(++t>(a=e.length)){for(n=s,t-=a;--t;n+=s);e+=n}else t<a&&(e=e.slice(0,t)+"."+e.slice(t));return e}s=function e(t){var s,k,T,S,P,_,E,C,A,M,I=q.prototype={constructor:q,toString:null,valueOf:null},x=new q(1),O=20,j=4,N=-7,R=21,$=-1e7,B=1e7,D=!1,F=1,U=0,H={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},L="0123456789abcdefghijklmnopqrstuvwxyz",G=!0;function q(e,t){var s,n,i,c,u,h,m,p,f=this;if(!(f instanceof q))return new q(e,t);if(null==t){if(e&&!0===e._isBigNumber)return f.s=e.s,void(!e.c||e.e>B?f.c=f.e=null:e.e<$?f.c=[f.e=0]:(f.e=e.e,f.c=e.c.slice()));if((h="number"==typeof e)&&0*e==0){if(f.s=1/e<0?(e=-e,-1):1,e===~~e){for(c=0,u=e;u>=10;u/=10,c++);return void(c>B?f.c=f.e=null:(f.e=c,f.c=[e]))}p=String(e)}else{if(!a.test(p=String(e)))return T(f,p,h);f.s=45==p.charCodeAt(0)?(p=p.slice(1),-1):1}(c=p.indexOf("."))>-1&&(p=p.replace(".","")),(u=p.search(/e/i))>0?(c<0&&(c=u),c+=+p.slice(u+1),p=p.substring(0,u)):c<0&&(c=p.length)}else{if(b(t,2,L.length,"Base"),10==t&&G)return z(f=new q(e),O+f.e+1,j);if(p=String(e),h="number"==typeof e){if(0*e!=0)return T(f,p,h,t);if(f.s=1/e<0?(p=p.slice(1),-1):1,q.DEBUG&&p.replace(/^0\.0*|\./,"").length>15)throw Error(o+e)}else f.s=45===p.charCodeAt(0)?(p=p.slice(1),-1):1;for(s=L.slice(0,t),c=u=0,m=p.length;u<m;u++)if(s.indexOf(n=p.charAt(u))<0){if("."==n){if(u>c){c=m;continue}}else if(!i&&(p==p.toUpperCase()&&(p=p.toLowerCase())||p==p.toLowerCase()&&(p=p.toUpperCase()))){i=!0,u=-1,c=0;continue}return T(f,String(e),h,t)}h=!1,(c=(p=k(p,t,10,f.s)).indexOf("."))>-1?p=p.replace(".",""):c=p.length}for(u=0;48===p.charCodeAt(u);u++);for(m=p.length;48===p.charCodeAt(--m););if(p=p.slice(u,++m)){if(m-=u,h&&q.DEBUG&&m>15&&(e>d||e!==r(e)))throw Error(o+f.s*e);if((c=c-u-1)>B)f.c=f.e=null;else if(c<$)f.c=[f.e=0];else{if(f.e=c,f.c=[],u=(c+1)%l,c<0&&(u+=l),u<m){for(u&&f.c.push(+p.slice(0,u)),m-=l;u<m;)f.c.push(+p.slice(u,u+=l));u=l-(p=p.slice(u)).length}else u-=m;for(;u--;p+="0");f.c.push(+p)}}else f.c=[f.e=0]}function W(e,t,s,a){var n,r,i,o,c;if(null==s?s=j:b(s,0,8),!e.c)return e.toString();if(n=e.c[0],i=e.e,null==t)c=f(e.c),c=1==a||2==a&&(i<=N||i>=R)?w(c,i):v(c,i,"0");else if(r=(e=z(new q(e),t,s)).e,o=(c=f(e.c)).length,1==a||2==a&&(t<=r||r<=N)){for(;o<t;c+="0",o++);c=w(c,r)}else if(t-=i,c=v(c,r,"0"),r+1>o){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=r-o)>0)for(r+1==o&&(c+=".");t--;c+="0");return e.s<0&&n?"-"+c:c}function V(e,t){for(var s,a,n=1,r=new q(e[0]);n<e.length;n++)(!(a=new q(e[n])).s||(s=g(r,a))===t||0===s&&r.s===t)&&(r=a);return r}function K(e,t,s){for(var a=1,n=t.length;!t[--n];t.pop());for(n=t[0];n>=10;n/=10,a++);return(s=a+s*l-1)>B?e.c=e.e=null:s<$?e.c=[e.e=0]:(e.e=s,e.c=t),e}function z(e,t,s,a){var i,o,d,h,m,p,f,g=e.c,b=u;if(g){e:{for(i=1,h=g[0];h>=10;h/=10,i++);if((o=t-i)<0)o+=l,d=t,m=g[p=0],f=r(m/b[i-d-1]%10);else if((p=n((o+1)/l))>=g.length){if(!a)break e;for(;g.length<=p;g.push(0));m=f=0,i=1,d=(o%=l)-l+1}else{for(m=h=g[p],i=1;h>=10;h/=10,i++);f=(d=(o%=l)-l+i)<0?0:r(m/b[i-d-1]%10)}if(a=a||t<0||null!=g[p+1]||(d<0?m:m%b[i-d-1]),a=s<4?(f||a)&&(0==s||s==(e.s<0?3:2)):f>5||5==f&&(4==s||a||6==s&&(o>0?d>0?m/b[i-d]:0:g[p-1])%10&1||s==(e.s<0?8:7)),t<1||!g[0])return g.length=0,a?(t-=e.e+1,g[0]=b[(l-t%l)%l],e.e=-t||0):g[0]=e.e=0,e;if(0==o?(g.length=p,h=1,p--):(g.length=p+1,h=b[l-o],g[p]=d>0?r(m/b[i-d]%b[d])*h:0),a)for(;;){if(0==p){for(o=1,d=g[0];d>=10;d/=10,o++);for(d=g[0]+=h,h=1;d>=10;d/=10,h++);o!=h&&(e.e++,g[0]==c&&(g[0]=1));break}if(g[p]+=h,g[p]!=c)break;g[p--]=0,h=1}for(o=g.length;0===g[--o];g.pop());}e.e>B?e.c=e.e=null:e.e<$&&(e.c=[e.e=0])}return e}function J(e){var t,s=e.e;return null===s?e.toString():(t=f(e.c),t=s<=N||s>=R?w(t,s):v(t,s,"0"),e.s<0?"-"+t:t)}return q.clone=e,q.ROUND_UP=0,q.ROUND_DOWN=1,q.ROUND_CEIL=2,q.ROUND_FLOOR=3,q.ROUND_HALF_UP=4,q.ROUND_HALF_DOWN=5,q.ROUND_HALF_EVEN=6,q.ROUND_HALF_CEIL=7,q.ROUND_HALF_FLOOR=8,q.EUCLID=9,q.config=q.set=function(e){var t,s;if(null!=e){if("object"!=typeof e)throw Error(i+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(b(s=e[t],0,m,t),O=s),e.hasOwnProperty(t="ROUNDING_MODE")&&(b(s=e[t],0,8,t),j=s),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((s=e[t])&&s.pop?(b(s[0],-m,0,t),b(s[1],0,m,t),N=s[0],R=s[1]):(b(s,-m,m,t),N=-(R=s<0?-s:s))),e.hasOwnProperty(t="RANGE"))if((s=e[t])&&s.pop)b(s[0],-m,-1,t),b(s[1],1,m,t),$=s[0],B=s[1];else{if(b(s,-m,m,t),!s)throw Error(i+t+" cannot be zero: "+s);$=-(B=s<0?-s:s)}if(e.hasOwnProperty(t="CRYPTO")){if((s=e[t])!==!!s)throw Error(i+t+" not true or false: "+s);if(s){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw D=!s,Error(i+"crypto unavailable");D=s}else D=s}if(e.hasOwnProperty(t="MODULO_MODE")&&(b(s=e[t],0,9,t),F=s),e.hasOwnProperty(t="POW_PRECISION")&&(b(s=e[t],0,m,t),U=s),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(s=e[t]))throw Error(i+t+" not an object: "+s);H=s}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(s=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(s))throw Error(i+t+" invalid: "+s);G="0123456789"==s.slice(0,10),L=s}}return{DECIMAL_PLACES:O,ROUNDING_MODE:j,EXPONENTIAL_AT:[N,R],RANGE:[$,B],CRYPTO:D,MODULO_MODE:F,POW_PRECISION:U,FORMAT:H,ALPHABET:L}},q.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!q.DEBUG)return!0;var t,s,a=e.c,n=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(a)){if((1===o||-1===o)&&n>=-m&&n<=m&&n===r(n)){if(0===a[0]){if(0===n&&1===a.length)return!0;break e}if((t=(n+1)%l)<1&&(t+=l),String(a[0]).length==t){for(t=0;t<a.length;t++)if((s=a[t])<0||s>=c||s!==r(s))break e;if(0!==s)return!0}}}else if(null===a&&null===n&&(null===o||1===o||-1===o))return!0;throw Error(i+"Invalid BigNumber: "+e)},q.maximum=q.max=function(){return V(arguments,-1)},q.minimum=q.min=function(){return V(arguments,1)},q.random=(S=9007199254740992,P=Math.random()*S&2097151?function(){return r(Math.random()*S)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,s,a,o,c,d=0,h=[],p=new q(x);if(null==e?e=O:b(e,0,m),o=n(e/l),D)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));d<o;)(c=131072*t[d]+(t[d+1]>>>11))>=9e15?(s=crypto.getRandomValues(new Uint32Array(2)),t[d]=s[0],t[d+1]=s[1]):(h.push(c%1e14),d+=2);d=o/2}else{if(!crypto.randomBytes)throw D=!1,Error(i+"crypto unavailable");for(t=crypto.randomBytes(o*=7);d<o;)(c=281474976710656*(31&t[d])+1099511627776*t[d+1]+4294967296*t[d+2]+16777216*t[d+3]+(t[d+4]<<16)+(t[d+5]<<8)+t[d+6])>=9e15?crypto.randomBytes(7).copy(t,d):(h.push(c%1e14),d+=7);d=o/7}if(!D)for(;d<o;)(c=P())<9e15&&(h[d++]=c%1e14);for(o=h[--d],e%=l,o&&e&&(c=u[l-e],h[d]=r(o/c)*c);0===h[d];h.pop(),d--);if(d<0)h=[a=0];else{for(a=-1;0===h[0];h.splice(0,1),a-=l);for(d=1,c=h[0];c>=10;c/=10,d++);d<l&&(a-=l-d)}return p.e=a,p.c=h,p}),q.sum=function(){for(var e=1,t=arguments,s=new q(t[0]);e<t.length;)s=s.plus(t[e++]);return s},k=function(){var e="0123456789";function t(e,t,s,a){for(var n,r,i=[0],o=0,c=e.length;o<c;){for(r=i.length;r--;i[r]*=t);for(i[0]+=a.indexOf(e.charAt(o++)),n=0;n<i.length;n++)i[n]>s-1&&(null==i[n+1]&&(i[n+1]=0),i[n+1]+=i[n]/s|0,i[n]%=s)}return i.reverse()}return function(a,n,r,i,o){var c,l,d,u,h,m,p,g,b=a.indexOf("."),y=O,w=j;for(b>=0&&(u=U,U=0,a=a.replace(".",""),m=(g=new q(n)).pow(a.length-b),U=u,g.c=t(v(f(m.c),m.e,"0"),10,r,e),g.e=g.c.length),d=u=(p=t(a,n,r,o?(c=L,e):(c=e,L))).length;0==p[--u];p.pop());if(!p[0])return c.charAt(0);if(b<0?--d:(m.c=p,m.e=d,m.s=i,p=(m=s(m,g,y,w,r)).c,h=m.r,d=m.e),b=p[l=d+y+1],u=r/2,h=h||l<0||null!=p[l+1],h=w<4?(null!=b||h)&&(0==w||w==(m.s<0?3:2)):b>u||b==u&&(4==w||h||6==w&&1&p[l-1]||w==(m.s<0?8:7)),l<1||!p[0])a=h?v(c.charAt(1),-y,c.charAt(0)):c.charAt(0);else{if(p.length=l,h)for(--r;++p[--l]>r;)p[l]=0,l||(++d,p=[1].concat(p));for(u=p.length;!p[--u];);for(b=0,a="";b<=u;a+=c.charAt(p[b++]));a=v(a,d,c.charAt(0))}return a}}(),s=function(){function e(e,t,s){var a,n,r,i,o=0,c=e.length,l=t%h,d=t/h|0;for(e=e.slice();c--;)o=((n=l*(r=e[c]%h)+(a=d*r+(i=e[c]/h|0)*l)%h*h+o)/s|0)+(a/h|0)+d*i,e[c]=n%s;return o&&(e=[o].concat(e)),e}function t(e,t,s,a){var n,r;if(s!=a)r=s>a?1:-1;else for(n=r=0;n<s;n++)if(e[n]!=t[n]){r=e[n]>t[n]?1:-1;break}return r}function s(e,t,s,a){for(var n=0;s--;)e[s]-=n,n=e[s]<t[s]?1:0,e[s]=n*a+e[s]-t[s];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(a,n,i,o,d){var u,h,m,f,g,b,y,w,v,k,T,S,P,_,E,C,A,M=a.s==n.s?1:-1,I=a.c,x=n.c;if(!(I&&I[0]&&x&&x[0]))return new q(a.s&&n.s&&(I?!x||I[0]!=x[0]:x)?I&&0==I[0]||!x?0*M:M/0:NaN);for(v=(w=new q(M)).c=[],M=i+(h=a.e-n.e)+1,d||(d=c,h=p(a.e/l)-p(n.e/l),M=M/l|0),m=0;x[m]==(I[m]||0);m++);if(x[m]>(I[m]||0)&&h--,M<0)v.push(1),f=!0;else{for(_=I.length,C=x.length,m=0,M+=2,(g=r(d/(x[0]+1)))>1&&(x=e(x,g,d),I=e(I,g,d),C=x.length,_=I.length),P=C,T=(k=I.slice(0,C)).length;T<C;k[T++]=0);A=x.slice(),A=[0].concat(A),E=x[0],x[1]>=d/2&&E++;do{if(g=0,(u=t(x,k,C,T))<0){if(S=k[0],C!=T&&(S=S*d+(k[1]||0)),(g=r(S/E))>1)for(g>=d&&(g=d-1),y=(b=e(x,g,d)).length,T=k.length;1==t(b,k,y,T);)g--,s(b,C<y?A:x,y,d),y=b.length,u=1;else 0==g&&(u=g=1),y=(b=x.slice()).length;if(y<T&&(b=[0].concat(b)),s(k,b,T,d),T=k.length,-1==u)for(;t(x,k,C,T)<1;)g++,s(k,C<T?A:x,T,d),T=k.length}else 0===u&&(g++,k=[0]);v[m++]=g,k[0]?k[T++]=I[P]||0:(k=[I[P]],T=1)}while((P++<_||null!=k[0])&&M--);f=null!=k[0],v[0]||v.splice(0,1)}if(d==c){for(m=1,M=v[0];M>=10;M/=10,m++);z(w,i+(w.e=m+h*l-1)+1,o,f)}else w.e=h,w.r=+f;return w}}(),_=/^(-?)0([xbo])(?=\w[\w.]*$)/i,E=/^([^.]+)\.$/,C=/^\.([^.]+)$/,A=/^-?(Infinity|NaN)$/,M=/^\s*\+(?=[\w.])|^\s+|\s+$/g,T=function(e,t,s,a){var n,r=s?t:t.replace(M,"");if(A.test(r))e.s=isNaN(r)?null:r<0?-1:1;else{if(!s&&(r=r.replace(_,function(e,t,s){return n="x"==(s=s.toLowerCase())?16:"b"==s?2:8,a&&a!=n?e:t}),a&&(n=a,r=r.replace(E,"$1").replace(C,"0.$1")),t!=r))return new q(r,n);if(q.DEBUG)throw Error(i+"Not a"+(a?" base "+a:"")+" number: "+t);e.s=null}e.c=e.e=null},I.absoluteValue=I.abs=function(){var e=new q(this);return e.s<0&&(e.s=1),e},I.comparedTo=function(e,t){return g(this,new q(e,t))},I.decimalPlaces=I.dp=function(e,t){var s,a,n,r=this;if(null!=e)return b(e,0,m),null==t?t=j:b(t,0,8),z(new q(r),e+r.e+1,t);if(!(s=r.c))return null;if(a=((n=s.length-1)-p(this.e/l))*l,n=s[n])for(;n%10==0;n/=10,a--);return a<0&&(a=0),a},I.dividedBy=I.div=function(e,t){return s(this,new q(e,t),O,j)},I.dividedToIntegerBy=I.idiv=function(e,t){return s(this,new q(e,t),0,1)},I.exponentiatedBy=I.pow=function(e,t){var s,a,o,c,d,u,h,m,p=this;if((e=new q(e)).c&&!e.isInteger())throw Error(i+"Exponent not an integer: "+J(e));if(null!=t&&(t=new q(t)),d=e.e>14,!p.c||!p.c[0]||1==p.c[0]&&!p.e&&1==p.c.length||!e.c||!e.c[0])return m=new q(Math.pow(+J(p),d?e.s*(2-y(e)):+J(e))),t?m.mod(t):m;if(u=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new q(NaN);(a=!u&&p.isInteger()&&t.isInteger())&&(p=p.mod(t))}else{if(e.e>9&&(p.e>0||p.e<-1||(0==p.e?p.c[0]>1||d&&p.c[1]>=24e7:p.c[0]<8e13||d&&p.c[0]<=9999975e7)))return c=p.s<0&&y(e)?-0:0,p.e>-1&&(c=1/c),new q(u?1/c:c);U&&(c=n(U/l+2))}for(d?(s=new q(.5),u&&(e.s=1),h=y(e)):h=(o=Math.abs(+J(e)))%2,m=new q(x);;){if(h){if(!(m=m.times(p)).c)break;c?m.c.length>c&&(m.c.length=c):a&&(m=m.mod(t))}if(o){if(0===(o=r(o/2)))break;h=o%2}else if(z(e=e.times(s),e.e+1,1),e.e>14)h=y(e);else{if(0===(o=+J(e)))break;h=o%2}p=p.times(p),c?p.c&&p.c.length>c&&(p.c.length=c):a&&(p=p.mod(t))}return a?m:(u&&(m=x.div(m)),t?m.mod(t):c?z(m,U,j,undefined):m)},I.integerValue=function(e){var t=new q(this);return null==e?e=j:b(e,0,8),z(t,t.e+1,e)},I.isEqualTo=I.eq=function(e,t){return 0===g(this,new q(e,t))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(e,t){return g(this,new q(e,t))>0},I.isGreaterThanOrEqualTo=I.gte=function(e,t){return 1===(t=g(this,new q(e,t)))||0===t},I.isInteger=function(){return!!this.c&&p(this.e/l)>this.c.length-2},I.isLessThan=I.lt=function(e,t){return g(this,new q(e,t))<0},I.isLessThanOrEqualTo=I.lte=function(e,t){return-1===(t=g(this,new q(e,t)))||0===t},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(e,t){var s,a,n,r,i=this,o=i.s;if(t=(e=new q(e,t)).s,!o||!t)return new q(NaN);if(o!=t)return e.s=-t,i.plus(e);var d=i.e/l,u=e.e/l,h=i.c,m=e.c;if(!d||!u){if(!h||!m)return h?(e.s=-t,e):new q(m?i:NaN);if(!h[0]||!m[0])return m[0]?(e.s=-t,e):new q(h[0]?i:3==j?-0:0)}if(d=p(d),u=p(u),h=h.slice(),o=d-u){for((r=o<0)?(o=-o,n=h):(u=d,n=m),n.reverse(),t=o;t--;n.push(0));n.reverse()}else for(a=(r=(o=h.length)<(t=m.length))?o:t,o=t=0;t<a;t++)if(h[t]!=m[t]){r=h[t]<m[t];break}if(r&&(n=h,h=m,m=n,e.s=-e.s),(t=(a=m.length)-(s=h.length))>0)for(;t--;h[s++]=0);for(t=c-1;a>o;){if(h[--a]<m[a]){for(s=a;s&&!h[--s];h[s]=t);--h[s],h[a]+=c}h[a]-=m[a]}for(;0==h[0];h.splice(0,1),--u);return h[0]?K(e,h,u):(e.s=3==j?-1:1,e.c=[e.e=0],e)},I.modulo=I.mod=function(e,t){var a,n,r=this;return e=new q(e,t),!r.c||!e.s||e.c&&!e.c[0]?new q(NaN):!e.c||r.c&&!r.c[0]?new q(r):(9==F?(n=e.s,e.s=1,a=s(r,e,0,3),e.s=n,a.s*=n):a=s(r,e,0,F),(e=r.minus(a.times(e))).c[0]||1!=F||(e.s=r.s),e)},I.multipliedBy=I.times=function(e,t){var s,a,n,r,i,o,d,u,m,f,g,b,y,w,v,k=this,T=k.c,S=(e=new q(e,t)).c;if(!(T&&S&&T[0]&&S[0]))return!k.s||!e.s||T&&!T[0]&&!S||S&&!S[0]&&!T?e.c=e.e=e.s=null:(e.s*=k.s,T&&S?(e.c=[0],e.e=0):e.c=e.e=null),e;for(a=p(k.e/l)+p(e.e/l),e.s*=k.s,(d=T.length)<(f=S.length)&&(y=T,T=S,S=y,n=d,d=f,f=n),n=d+f,y=[];n--;y.push(0));for(w=c,v=h,n=f;--n>=0;){for(s=0,g=S[n]%v,b=S[n]/v|0,r=n+(i=d);r>n;)s=((u=g*(u=T[--i]%v)+(o=b*u+(m=T[i]/v|0)*g)%v*v+y[r]+s)/w|0)+(o/v|0)+b*m,y[r--]=u%w;y[r]=s}return s?++a:y.splice(0,1),K(e,y,a)},I.negated=function(){var e=new q(this);return e.s=-e.s||null,e},I.plus=function(e,t){var s,a=this,n=a.s;if(t=(e=new q(e,t)).s,!n||!t)return new q(NaN);if(n!=t)return e.s=-t,a.minus(e);var r=a.e/l,i=e.e/l,o=a.c,d=e.c;if(!r||!i){if(!o||!d)return new q(n/0);if(!o[0]||!d[0])return d[0]?e:new q(o[0]?a:0*n)}if(r=p(r),i=p(i),o=o.slice(),n=r-i){for(n>0?(i=r,s=d):(n=-n,s=o),s.reverse();n--;s.push(0));s.reverse()}for((n=o.length)-(t=d.length)<0&&(s=d,d=o,o=s,t=n),n=0;t;)n=(o[--t]=o[t]+d[t]+n)/c|0,o[t]=c===o[t]?0:o[t]%c;return n&&(o=[n].concat(o),++i),K(e,o,i)},I.precision=I.sd=function(e,t){var s,a,n,r=this;if(null!=e&&e!==!!e)return b(e,1,m),null==t?t=j:b(t,0,8),z(new q(r),e,t);if(!(s=r.c))return null;if(a=(n=s.length-1)*l+1,n=s[n]){for(;n%10==0;n/=10,a--);for(n=s[0];n>=10;n/=10,a++);}return e&&r.e+1>a&&(a=r.e+1),a},I.shiftedBy=function(e){return b(e,-9007199254740991,d),this.times("1e"+e)},I.squareRoot=I.sqrt=function(){var e,t,a,n,r,i=this,o=i.c,c=i.s,l=i.e,d=O+4,u=new q("0.5");if(1!==c||!o||!o[0])return new q(!c||c<0&&(!o||o[0])?NaN:o?i:1/0);if(0==(c=Math.sqrt(+J(i)))||c==1/0?(((t=f(o)).length+l)%2==0&&(t+="0"),c=Math.sqrt(+t),l=p((l+1)/2)-(l<0||l%2),a=new q(t=c==1/0?"5e"+l:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+l)):a=new q(c+""),a.c[0])for((c=(l=a.e)+d)<3&&(c=0);;)if(r=a,a=u.times(r.plus(s(i,r,d,1))),f(r.c).slice(0,c)===(t=f(a.c)).slice(0,c)){if(a.e<l&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(n||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(z(a,a.e+O+2,1),e=!a.times(a).eq(i));break}if(!n&&(z(r,r.e+O+2,0),r.times(r).eq(i))){a=r;break}d+=4,c+=4,n=1}return z(a,a.e+O+1,j,e)},I.toExponential=function(e,t){return null!=e&&(b(e,0,m),e++),W(this,e,t,1)},I.toFixed=function(e,t){return null!=e&&(b(e,0,m),e=e+this.e+1),W(this,e,t)},I.toFormat=function(e,t,s){var a,n=this;if(null==s)null!=e&&t&&"object"==typeof t?(s=t,t=null):e&&"object"==typeof e?(s=e,e=t=null):s=H;else if("object"!=typeof s)throw Error(i+"Argument not an object: "+s);if(a=n.toFixed(e,t),n.c){var r,o=a.split("."),c=+s.groupSize,l=+s.secondaryGroupSize,d=s.groupSeparator||"",u=o[0],h=o[1],m=n.s<0,p=m?u.slice(1):u,f=p.length;if(l&&(r=c,c=l,l=r,f-=r),c>0&&f>0){for(r=f%c||c,u=p.substr(0,r);r<f;r+=c)u+=d+p.substr(r,c);l>0&&(u+=d+p.slice(r)),m&&(u="-"+u)}a=h?u+(s.decimalSeparator||"")+((l=+s.fractionGroupSize)?h.replace(new RegExp("\\d{"+l+"}\\B","g"),"$&"+(s.fractionGroupSeparator||"")):h):u}return(s.prefix||"")+a+(s.suffix||"")},I.toFraction=function(e){var t,a,n,r,o,c,d,h,m,p,g,b,y=this,w=y.c;if(null!=e&&(!(d=new q(e)).isInteger()&&(d.c||1!==d.s)||d.lt(x)))throw Error(i+"Argument "+(d.isInteger()?"out of range: ":"not an integer: ")+J(d));if(!w)return new q(y);for(t=new q(x),m=a=new q(x),n=h=new q(x),b=f(w),o=t.e=b.length-y.e-1,t.c[0]=u[(c=o%l)<0?l+c:c],e=!e||d.comparedTo(t)>0?o>0?t:m:d,c=B,B=1/0,d=new q(b),h.c[0]=0;p=s(d,t,0,1),1!=(r=a.plus(p.times(n))).comparedTo(e);)a=n,n=r,m=h.plus(p.times(r=m)),h=r,t=d.minus(p.times(r=t)),d=r;return r=s(e.minus(a),n,0,1),h=h.plus(r.times(m)),a=a.plus(r.times(n)),h.s=m.s=y.s,g=s(m,n,o*=2,j).minus(y).abs().comparedTo(s(h,a,o,j).minus(y).abs())<1?[m,n]:[h,a],B=c,g},I.toNumber=function(){return+J(this)},I.toPrecision=function(e,t){return null!=e&&b(e,1,m),W(this,e,t,2)},I.toString=function(e){var t,s=this,a=s.s,n=s.e;return null===n?a?(t="Infinity",a<0&&(t="-"+t)):t="NaN":(null==e?t=n<=N||n>=R?w(f(s.c),n):v(f(s.c),n,"0"):10===e&&G?t=v(f((s=z(new q(s),O+n+1,j)).c),s.e,"0"):(b(e,2,L.length,"Base"),t=k(v(f(s.c),n,"0"),10,e,a,!0)),a<0&&s.c[0]&&(t="-"+t)),t},I.valueOf=I.toJSON=function(){return J(this)},I._isBigNumber=!0,null!=t&&q.set(t),q}(),s.default=s.BigNumber=s,"function"==typeof define&&define.amd?define(function(){return s}):void 0!==t&&t.exports?t.exports=s:(e||(e="undefined"!=typeof self&&self?self:window),e.BigNumber=s)}(this)}}},{package:"@metamask/smart-transactions-controller>bignumber.js",file:"node_modules/@metamask/smart-transactions-controller/node_modules/bignumber.js/bignumber.js"}],[2277,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={name:"@metamask/smart-transactions-controller",version:"18.1.0",description:"Improves success rates for swaps by trialing transactions privately and finding minimum fees",repository:{type:"git",url:"https://github.com/MetaMask/smart-transactions-controller.git"},license:"SEE LICENSE IN LICENSE",main:"dist/index.js",types:"dist/index.d.ts",files:["dist/"],scripts:{build:"tsc --project tsconfig.build.json","build:clean":"rm -rf dist && yarn build","build:link":"yarn build && cd dist && yarn link && rm -rf node_modules && cd ..",lint:"yarn lint:eslint && yarn lint:misc --check && yarn lint:changelog","lint:changelog":"auto-changelog validate --prettier","lint:eslint":"eslint . --cache --ext js,ts","lint:fix":"yarn lint:eslint --fix && yarn lint:misc --write && yarn lint:changelog","lint:misc":"prettier '**/*.json' '**/*.md' '**/*.yml' '!.yarnrc.yml' --ignore-path .gitignore --no-error-on-unmatched-pattern",prepack:"./scripts/prepack.sh",test:"jest","test:watch":"jest --watchAll"},dependencies:{"@babel/runtime":"^7.24.1","@ethereumjs/tx":"^5.2.1","@ethereumjs/util":"^9.0.2","@ethersproject/bytes":"^5.7.0","@ethersproject/keccak256":"^5.8.0","@ethersproject/transactions":"^5.7.0","@metamask/base-controller":"^7.0.1","@metamask/controller-utils":"^11.0.0","@metamask/eth-json-rpc-provider":"^4.1.6","@metamask/eth-query":"^4.0.0","@metamask/polling-controller":"^12.0.0","bignumber.js":"^9.0.1","fast-json-patch":"^3.1.0",lodash:"^4.17.21"},devDependencies:{"@lavamoat/allow-scripts":"^3.2.1","@lavamoat/preinstall-always-fail":"^2.1.0","@metamask/auto-changelog":"^3.1.0","@metamask/eslint-config":"^12.2.0","@metamask/eslint-config-jest":"^12.1.0","@metamask/eslint-config-nodejs":"^12.1.0","@metamask/eslint-config-typescript":"^12.1.0","@metamask/gas-fee-controller":"^22.0.0","@metamask/json-rpc-engine":"^10.0.1","@metamask/network-controller":"^24.0.0","@metamask/transaction-controller":"^42.0.0","@types/jest":"^26.0.24","@types/lodash":"^4.14.194","@types/node":"^18.19.17","@types/sinon":"^9.0.10","@typescript-eslint/eslint-plugin":"^5.33.0","@typescript-eslint/parser":"^5.33.0",eslint:"^8.48.0","eslint-config-prettier":"^8.8.0","eslint-plugin-import":"~2.26.0","eslint-plugin-jest":"^27.1.5","eslint-plugin-jsdoc":"^39.2.9","eslint-plugin-n":"^15.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-promise":"^6.1.1","isomorphic-fetch":"^3.0.0",jest:"^29.7.0",nock:"^14.0.0-beta.7",prettier:"^2.8.8","prettier-plugin-packagejson":"^2.4.3",sinon:"^9.2.4","ts-jest":"^29.1.4",typescript:"~4.8.4"},peerDependencies:{"@metamask/network-controller":"^24.0.0","@metamask/transaction-controller":"^42.0.0"},peerDependenciesMeta:{"@metamask/accounts-controller":{optional:!0},"@metamask/approval-controller":{optional:!0}},packageManager:"yarn@3.2.1",engines:{node:"^18.18 || >=20"},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"},lavamoat:{allowScripts:{"@lavamoat/preinstall-always-fail":!1,"@metamask/controller-utils>ethereumjs-util>ethereum-cryptography>keccak":!1,"@metamask/controller-utils>ethereumjs-util>ethereum-cryptography>secp256k1":!1,"@metamask/controller-utils>babel-runtime>core-js":!1,"@metamask/transaction-controller>@metamask/accounts-controller>@metamask/keyring-controller>ethereumjs-wallet>ethereum-cryptography>keccak":!1,"@metamask/transaction-controller>@metamask/accounts-controller>@metamask/keyring-controller>ethereumjs-wallet>ethereum-cryptography>secp256k1":!1}}}}}},{package:"@metamask/smart-transactions-controller",file:"node_modules/@metamask/smart-transactions-controller/package.json"}],[2278,{"../snaps/Timer.cjs":2300,"../snaps/constants.cjs":2301,"./utils.cjs":2280,"@metamask/base-controller":1140,"@metamask/snaps-rpc-methods":2346,"@metamask/snaps-utils":2516,"@metamask/utils":2632,immer:4157,luxon:4373,nanoid:4546},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e,t,s){n(e,t),t.set(e,s)}function n(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function r(e,t){return e.get(o(e,t))}function i(e,t,s){return e.set(o(e,t),s),s}function o(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}Object.defineProperty(s,"__esModule",{value:!0}),s.CronjobController=s.DAILY_TIMEOUT=void 0;const c=e("@metamask/base-controller"),l=e("@metamask/snaps-rpc-methods"),d=e("@metamask/snaps-utils"),u=e("@metamask/utils"),h=e("immer"),m=e("luxon"),p=e("nanoid"),f=e("./utils.cjs"),g=e("../snaps/constants.cjs"),b=e("../snaps/Timer.cjs");s.DAILY_TIMEOUT=(0,u.inMilliseconds)(24,u.Duration.Hour);const y="CronjobController";var w=new WeakMap,v=new WeakMap,k=new WeakMap,T=new WeakSet,S=new WeakMap,P=new WeakMap,_=new WeakMap,E=new WeakMap,C=new WeakMap;class A extends c.BaseController{constructor({messenger:e,state:t,stateManager:c}){var l,d;super({messenger:e,metadata:{events:{persist:!1,anonymous:!1}},name:y,state:{events:{},...t,...c.getInitialState()}}),n(l=this,d=T),d.add(l),a(this,w,void 0),a(this,v,void 0),a(this,k,new b.Timer(s.DAILY_TIMEOUT)),a(this,S,e=>{this.unregister(e.id),this.register(e.id)}),a(this,P,e=>{const t=this.get(e.id);o(T,this,$).call(this,t),this.register(e.id)}),a(this,_,e=>{this.unregister(e.id)}),a(this,E,e=>{this.unregister(e.id)}),a(this,C,e=>{this.unregister(e.id),this.register(e.id)}),i(w,this,new Map),i(v,this,c),this.messagingSystem.subscribe("SnapController:snapInstalled",r(S,this)),this.messagingSystem.subscribe("SnapController:snapUninstalled",r(_,this)),this.messagingSystem.subscribe("SnapController:snapEnabled",r(P,this)),this.messagingSystem.subscribe("SnapController:snapDisabled",r(E,this)),this.messagingSystem.subscribe("SnapController:snapUpdated",r(C,this)),this.messagingSystem.registerActionHandler(`${y}:init`,(...e)=>this.init(...e)),this.messagingSystem.registerActionHandler(`${y}:schedule`,(...e)=>this.schedule(...e)),this.messagingSystem.registerActionHandler(`${y}:cancel`,(...e)=>this.cancel(...e)),this.messagingSystem.registerActionHandler(`${y}:get`,(...e)=>this.get(...e))}init(){o(T,this,M).call(this),o(T,this,B).call(this),o(T,this,$).call(this)}schedule(e){return o(T,this,I).call(this,{...e,recurring:!1})}cancel(e,t){(0,u.assert)(this.state.events[t],`A background event with the id of "${t}" does not exist.`),(0,u.assert)(this.state.events[t].snapId===e,"Only the origin that scheduled this event can cancel it."),o(T,this,N).call(this,t)}get(e){return Object.values(this.state.events).filter(t=>t.snapId===e&&!t.recurring).map(e=>({...e,date:(0,d.toCensoredISO8601String)(e.date),scheduledAt:(0,d.toCensoredISO8601String)(e.scheduledAt)}))}register(e){const t=o(T,this,R).call(this,e);null==t||t.forEach(e=>o(T,this,I).call(this,e))}unregister(e){for(const[t,s]of Object.entries(this.state.events))s.snapId===e&&o(T,this,N).call(this,t)}destroy(){super.destroy(),this.messagingSystem.unsubscribe("SnapController:snapInstalled",r(S,this)),this.messagingSystem.unsubscribe("SnapController:snapUninstalled",r(_,this)),this.messagingSystem.unsubscribe("SnapController:snapEnabled",r(P,this)),this.messagingSystem.unsubscribe("SnapController:snapDisabled",r(E,this)),this.messagingSystem.unsubscribe("SnapController:snapUpdated",r(C,this)),r(w,this).forEach(e=>e.cancel()),r(w,this).clear(),"running"===r(k,this).status&&r(k,this).cancel()}}function M(){i(k,this,new b.Timer(s.DAILY_TIMEOUT)),r(k,this).start(()=>{o(T,this,$).call(this),o(T,this,M).call(this)})}function I(e){const t=e.id??(0,p.nanoid)(),s={...e,id:t,date:(0,f.getExecutionDate)(e.schedule),scheduledAt:(new Date).toISOString()},{nextState:a}=this.update(e=>{e.events[s.id]=(0,h.castDraft)(s)});return r(v,this).set(a),o(T,this,x).call(this,s),t}function x(e,t=!0){if(!t)return void o(T,this,O).call(this,e);const s=(0,f.getExecutionDate)(e.schedule),{nextState:a}=this.update(t=>{t.events[e.id].date=s});r(v,this).set(a),o(T,this,O).call(this,{...e,date:s})}function O(e){const t=m.DateTime.fromISO(e.date,{setZone:!0}).toMillis()-Date.now();if(t>s.DAILY_TIMEOUT)return;if(t<=0)return void o(T,this,j).call(this,e);const a=new b.Timer(t);a.start(()=>{o(T,this,j).call(this,e)}),r(w,this).set(e.id,a)}function j(e){if(this.messagingSystem.call("SnapController:handleRequest",{snapId:e.snapId,origin:g.METAMASK_ORIGIN,handler:d.HandlerType.OnCronjob,request:e.request}).catch(t=>{(0,d.logError)(`An error occurred while executing an event for Snap "${e.snapId}":`,t)}),r(w,this).delete(e.id),!e.recurring){const{nextState:t}=this.update(t=>{delete t.events[e.id]});return void r(v,this).set(t)}o(T,this,x).call(this,e)}function N(e){const t=r(w,this).get(e);null==t||t.cancel(),r(w,this).delete(e);const{nextState:s}=this.update(t=>{delete t.events[e]});r(v,this).set(s)}function R(e){const t=this.messagingSystem.call("PermissionController:getPermissions",e),s=null==t?void 0:t[l.SnapEndowments.Cronjob],a=(0,l.getCronjobCaveatJobs)(s);return a?a.map((t,s)=>({snapId:e,id:`cronjob-${e}-${s}`,request:t.request,schedule:(0,f.getCronjobSpecificationSchedule)(t),recurring:!0})):[]}function $(e=Object.values(this.state.events)){const t=Date.now();for(const s of e){if(r(w,this).has(s.id))continue;const e=m.DateTime.fromISO(s.date,{setZone:!0}).toUTC().toMillis();s.recurring&&e<=t?o(T,this,j).call(this,s):o(T,this,x).call(this,s,!1)}}function B(){const e=Date.now();for(const t of Object.values(this.state.events)){const s=m.DateTime.fromISO(t.date,{setZone:!0}).toUTC().toMillis();!t.recurring&&s<e&&o(T,this,N).call(this,t.id)}}s.CronjobController=A}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.cjs"}],[2279,{"./CronjobController.cjs":2278},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]},n=function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./CronjobController.cjs"),s)}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/cronjob/index.cjs"}],[228,{"../containers/util":219,"@metamask/controller-utils":1224,"@metamask/transaction-controller":2587,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.EnforceSimulationHook=void 0;e("@metamask/transaction-controller");var a=e("@metamask/utils");e("@metamask/controller-utils"),e("../containers/util");function n(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function r(e,t){return e.get(i(e,t))}function i(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}const o=(0,a.createProjectLogger)("enforce-simulation-hook");var c=new WeakMap,l=new WeakSet;async function d(e,t){const{transactionMeta:s}=t,{isFinal:a}=e,{containerTypes:n,delegationAddress:i,id:l,origin:d,simulationData:u,txParamsOriginal:h}=s,m=r(c,this).call("AppStateController:getState");(null==m?void 0:m.enableEnforcedSimulationsForTransactions[l])??(null==m||m.enableEnforcedSimulations);return o("Skipping as enforced simulations are disabled"),{skipSimulation:!1}}s.EnforceSimulationHook=class{constructor({messenger:e}){var t,s;n(t=this,s=l),s.add(t),function(e,t,s){n(e,t),t.set(e,s)}(this,c,void 0),function(e,t,s){e.set(i(e,t),s)}(c,this,e)}getAfterSimulateHook(){return i(l,this,d).bind(this,{})}getBeforeSignHook(){return i(l,this,d).bind(this,{isFinal:!0})}}}}},{package:"$root$",file:"app/scripts/lib/transaction/hooks/enforce-simulation-hook.ts"}],[2280,{"@metamask/utils":2632,"cron-parser":3696,luxon:4373},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getExecutionDate=s.getCronjobSpecificationSchedule=void 0;const a=e("@metamask/utils"),n=e("cron-parser"),r=e("luxon");s.getCronjobSpecificationSchedule=function(e){return(0,a.hasProperty)(e,"duration")?e.duration:e.expression},s.getExecutionDate=function(e){const t=r.DateTime.fromISO(e,{setZone:!0});if(t.isValid){const e=Date.now(),s=t.toUTC().startOf("second");if(s.toMillis()<e)throw new Error("Cannot schedule an event in the past.");return s.toISO({suppressMilliseconds:!0})}const s=r.Duration.fromISO(e);if(s.isValid){const e=function(e){return e.as("seconds")<1?r.Duration.fromObject({seconds:1}):e}(s);return r.DateTime.now().toUTC().plus(e).toISO()}try{const t=(0,n.parseExpression)(e,{utc:!0}).next(),s=r.DateTime.fromJSDate(t.toDate());return(0,a.assert)(s.isValid),s.toUTC().toISO()}catch{throw new Error(`Unable to parse "${e}" as ISO 8601 date, ISO 8601 duration, or cron expression.`)}}}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/cronjob/utils.cjs"}],[2281,{"@metamask/utils":2632,"@xstate/fsm":3100},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.forceStrict=s.validateMachine=void 0;const a=e("@metamask/utils"),n=e("@xstate/fsm");s.validateMachine=function(e){(0,a.assert)("_options"in e,"The machine is not an @xstate/fsm machine");const t=e,s=new Set,n=e=>{return(t=e,Array.isArray(t)?t:t===undefined||null===t?[]:[t]).flatMap(e=>"string"==typeof e?[e]:((0,a.assert)("function"==typeof e),[])).forEach(s.add.bind(s));var t};for(const e of Object.values(t.config.states)){n(e.entry),n(e.exit);for(const t of Object.values(e.on??{}))n(t.actions)}s.forEach(e=>(0,a.assert)(t._options.actions!==undefined&&e in t._options.actions,`Action "${e}" doesn't have an implementation`))},s.forceStrict=function(e){let t=!1;e.subscribe(e=>{(0,a.assert)(!t||e.changed,"Invalid state transition"),t=!0});const s=e.send.bind(e);e.send=(...t)=>((0,a.assert)(e.status===n.InterpreterStatus.Running,"Interpreter is stopped"),s(...t))}}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/fsm.cjs"}],[2282,{"./cronjob/index.cjs":2279,"./insights/index.cjs":2284,"./interface/index.cjs":2286,"./multichain/index.cjs":2290,"./services/index.cjs":2295,"./snaps/index.cjs":2302,"./utils.cjs":2312,"./websocket/index.cjs":2314},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]},n=function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./services/index.cjs"),s),n(e("./snaps/index.cjs"),s),n(e("./utils.cjs"),s),n(e("./cronjob/index.cjs"),s),n(e("./interface/index.cjs"),s),n(e("./insights/index.cjs"),s),n(e("./multichain/index.cjs"),s),n(e("./websocket/index.cjs"),s)}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/index.cjs"}],[2283,{"../snaps/index.cjs":2302,"@metamask/base-controller":1140,"@metamask/snaps-rpc-methods":2346,"@metamask/snaps-utils":2516,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}function n(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}Object.defineProperty(s,"__esModule",{value:!0}),s.SnapInsightsController=void 0;const r=e("@metamask/base-controller"),i=e("@metamask/snaps-rpc-methods"),o=e("@metamask/snaps-utils"),c=e("@metamask/utils"),l=e("../snaps/index.cjs");var d=new WeakSet;class u extends r.BaseController{constructor({messenger:e,state:t}){super({messenger:e,metadata:{insights:{persist:!1,anonymous:!1}},name:"SnapInsightsController",state:{insights:{},...t}}),a(this,d),this.messagingSystem.subscribe("TransactionController:unapprovedTransactionAdded",n(d,this,p).bind(this)),this.messagingSystem.subscribe("TransactionController:transactionStatusUpdated",n(d,this,b).bind(this)),this.messagingSystem.subscribe("SignatureController:stateChange",n(d,this,f).bind(this))}}function h(e){return(0,c.hasProperty)(this.state.insights,e)}function m(e){const t=this.messagingSystem.call("SnapController:getAll");return(0,l.getRunnableSnaps)(t).reduce((t,s)=>{const a=this.messagingSystem.call("PermissionController:getPermissions",s.id);return a&&(0,c.hasProperty)(a,e)&&t.push({snapId:s.id,permission:a[e]}),t},[])}function p(e){const{id:t,txParams:s,chainId:a,origin:r}=e,l=`eip155:${(0,c.hexToBigInt)(a).toString(10)}`;n(d,this,m).call(this,i.SnapEndowments.TransactionInsight).forEach(({snapId:e,permission:a})=>{const c=(0,i.getTransactionOriginCaveat)(a)&&r?r:null;this.update(s=>{var a;(a=s.insights)[t]??(a[t]={}),s.insights[t][e]={snapId:e,loading:!0}}),n(d,this,w).call(this,{snapId:e,handler:o.HandlerType.OnTransaction,params:{transaction:s,chainId:l,transactionOrigin:c}}).then(s=>n(d,this,v).call(this,{id:t,snapId:e,response:s})).catch(s=>n(d,this,v).call(this,{id:t,snapId:e,error:s}))})}function f(e){for(const t of Object.keys(this.state.insights))(0,c.hasProperty)(e.unapprovedTypedMessages,t)||(0,c.hasProperty)(e.unapprovedPersonalMsgs,t)||n(d,this,y).call(this,t);if(e.unapprovedPersonalMsgCount>0||e.unapprovedTypedMessagesCount>0){const t=n(d,this,m).call(this,i.SnapEndowments.SignatureInsight);for(const s of Object.values(e.unapprovedPersonalMsgs))n(d,this,g).call(this,t,s);for(const s of Object.values(e.unapprovedTypedMessages))n(d,this,g).call(this,t,s)}}function g(e,t){const{id:s,msgParams:a}=t;if(n(d,this,h).call(this,s))return;const{from:r,data:c,signatureMethod:l,origin:u}=a,m={from:r,data:"eth_signTypedData_v3"===l||"eth_signTypedData_v4"===l?JSON.parse(c):c,signatureMethod:l};e.forEach(({snapId:e,permission:t})=>{const a=(0,i.getSignatureOriginCaveat)(t),r=u&&a?u:null;this.update(t=>{var a;(a=t.insights)[s]??(a[s]={}),t.insights[s][e]={snapId:e,loading:!0}}),n(d,this,w).call(this,{snapId:e,handler:o.HandlerType.OnSignature,params:{signature:m,signatureOrigin:r}}).then(t=>n(d,this,v).call(this,{id:s,snapId:e,response:t})).catch(t=>n(d,this,v).call(this,{id:s,snapId:e,error:t}))})}function b({transactionMeta:e}){"unapproved"!==e.status&&n(d,this,y).call(this,e.id)}function y(e){n(d,this,h).call(this,e)&&(Object.values(this.state.insights[e]).filter(e=>e.interfaceId).forEach(e=>{this.messagingSystem.call("SnapInterfaceController:deleteInterface",e.interfaceId)}),this.update(t=>{delete t.insights[e]}))}async function w({snapId:e,handler:t,params:s}){return this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:t,request:{method:"",params:s}})}function v({id:e,snapId:t,response:s,error:a}){n(d,this,h).call(this,e)&&this.update(n=>{n.insights[e][t].loading=!1,n.insights[e][t].interfaceId=null==s?void 0:s.id,n.insights[e][t].severity=null==s?void 0:s.severity,n.insights[e][t].error=null==a?void 0:a.message})}s.SnapInsightsController=u}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/insights/SnapInsightsController.cjs"}],[2284,{"./SnapInsightsController.cjs":2283},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]},n=function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./SnapInsightsController.cjs"),s)}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/insights/index.cjs"}],[2285,{"./utils.cjs":2287,"@metamask/base-controller":1140,"@metamask/snaps-sdk":2402,"@metamask/snaps-utils":2516,"@metamask/utils":2632,immer:4157,nanoid:4546},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}function n(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}Object.defineProperty(s,"__esModule",{value:!0}),s.SnapInterfaceController=void 0;const r=e("@metamask/base-controller"),i=e("@metamask/snaps-sdk"),o=e("@metamask/snaps-utils"),c=e("@metamask/utils"),l=e("immer"),d=e("nanoid"),u=e("./utils.cjs"),h=1e7,m="SnapInterfaceController";var p=new WeakSet;class f extends r.BaseController{constructor({messenger:e,state:t}){super({messenger:e,metadata:{interfaces:{persist:e=>Object.entries(e).reduce((e,[t,s])=>s.contentType===i.ContentType.Notification?(e[t]=s,e):e,{}),anonymous:!1}},name:m,state:{interfaces:{},...t}}),a(this,p),this.messagingSystem.subscribe("NotificationServicesController:notificationsListUpdated",n(p,this,A).bind(this)),n(p,this,g).call(this)}async createInterface(e,t,s,a){const r=(0,u.getJsxInterface)(t);await n(p,this,C).call(this,r),(0,u.validateInterfaceContext)(s);const i=(0,d.nanoid)(),c=(0,u.constructState)({},r,{getAssetsState:n(p,this,_).bind(this),getAccountByAddress:n(p,this,P).bind(this),getSelectedAccount:n(p,this,T).bind(this),listAccounts:n(p,this,S).bind(this),snapOwnsAccount:t=>(0,o.snapOwnsAccount)(e,t)});return this.update(t=>{t.interfaces[i]={snapId:e,content:(0,l.castDraft)(r),state:c,context:s??null,contentType:a??null}}),i}getInterface(e,t){return n(p,this,b).call(this,e,t),this.state.interfaces[t]}async updateInterface(e,t,s,a){n(p,this,b).call(this,e,t);const r=(0,u.getJsxInterface)(s);await n(p,this,C).call(this,r),(0,u.validateInterfaceContext)(a);const i=this.state.interfaces[t].state,c=(0,u.constructState)(i,r,{getAssetsState:n(p,this,_).bind(this),getAccountByAddress:n(p,this,P).bind(this),getSelectedAccount:n(p,this,T).bind(this),listAccounts:n(p,this,S).bind(this),snapOwnsAccount:t=>(0,o.snapOwnsAccount)(e,t)});this.update(e=>{e.interfaces[t].state=c,e.interfaces[t].content=(0,l.castDraft)(r),a&&(e.interfaces[t].context=a)})}deleteInterface(e){this.update(t=>{delete t.interfaces[e]})}updateInterfaceState(e,t){this.update(s=>{s.interfaces[e].state=t})}async resolveInterface(e,t,s){n(p,this,b).call(this,e,t),n(p,this,y).call(this,t),await n(p,this,k).call(this,t,s),this.deleteInterface(t)}}function g(){this.messagingSystem.registerActionHandler(`${m}:createInterface`,this.createInterface.bind(this)),this.messagingSystem.registerActionHandler(`${m}:getInterface`,this.getInterface.bind(this)),this.messagingSystem.registerActionHandler(`${m}:updateInterface`,this.updateInterface.bind(this)),this.messagingSystem.registerActionHandler(`${m}:deleteInterface`,this.deleteInterface.bind(this)),this.messagingSystem.registerActionHandler(`${m}:updateInterfaceState`,this.updateInterfaceState.bind(this)),this.messagingSystem.registerActionHandler(`${m}:resolveInterface`,this.resolveInterface.bind(this))}function b(e,t){const s=this.state.interfaces[t];(0,c.assert)(s!==undefined,`Interface with id '${t}' not found.`),(0,c.assert)(s.snapId===e,`Interface not created by ${e}.`)}function y(e){(0,c.assert)(n(p,this,v).call(this,e),`Approval request with id '${e}' not found.`)}function w(e){return this.messagingSystem.call("PhishingController:testOrigin",e).result}function v(e){return this.messagingSystem.call("ApprovalController:hasRequest",{id:e})}async function k(e,t){await this.messagingSystem.call("ApprovalController:acceptRequest",e,t)}function T(){return this.messagingSystem.call("AccountsController:getSelectedMultichainAccount")}function S(e){const t=this.messagingSystem.call("AccountsController:listMultichainAccounts");return e&&0!==e.length?t.filter(t=>t.scopes.some(t=>(0,u.isMatchingChainId)(t,e))):t}function P(e){const{address:t}=(0,c.parseCaipAccountId)(e);return this.messagingSystem.call("AccountsController:getAccountByAddress",t)}function _(){return this.messagingSystem.call("MultichainAssetsController:getState")}function E(e){return this.messagingSystem.call("SnapController:get",e)}async function C(e){const t=(0,o.getJsonSizeUnsafe)(e);(0,c.assert)(t<=h,"A Snap UI may not be larger than 10 MB."),(0,o.validateJsxElements)(e,{isOnPhishingList:n(p,this,w).bind(this),getSnap:n(p,this,E).bind(this),getAccountByAddress:n(p,this,P).bind(this)})}function A(e){const t=e.filter(e=>"snap"===e.type&&(0,c.hasProperty)(e.data,"detailedView")),s=new Set(t.map(e=>e.data.detailedView.interfaceId));this.update(e=>{Object.entries(e.interfaces).forEach(([t,a])=>{a.contentType!==i.ContentType.Notification||s.has(t)||delete e.interfaces[t]})})}s.SnapInterfaceController=f}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/interface/SnapInterfaceController.cjs"}],[2286,{"./SnapInterfaceController.cjs":2285},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]},n=function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./SnapInterfaceController.cjs"),s)}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/interface/index.cjs"}],[2287,{"@metamask/snaps-sdk":2402,"@metamask/snaps-sdk/jsx":2486,"@metamask/snaps-utils":2516,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateInterfaceContext=s.constructState=s.getAccountSelectorStateValue=s.getAssetSelectorStateValue=s.getAccountSelectorDefaultStateValue=s.getDefaultAsset=s.formatAccountSelectorStateValue=s.isMatchingChainId=s.assertNameIsUnique=s.getJsxInterface=s.isStatefulComponent=void 0;const a=e("@metamask/snaps-sdk"),n=e("@metamask/snaps-sdk/jsx"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=["Input","Dropdown","RadioGroup","FileInput","Checkbox","Selector","AssetSelector","AddressInput","AccountSelector"];function c(e){return o.includes(e.type)}function l(e,t){(0,a.assert)(e[t]===undefined,`Duplicate component names are not allowed, found multiple instances of: "${t}".`)}function d(e,t){return"eip155:0"===e?t.some(e=>{const{namespace:t}=(0,i.parseCaipChainId)(e);return t===i.KnownCaipNamespace.Eip155}):t.includes(e)}function u(e,t){const{id:s,address:a,scopes:n}=e,i=(0,r.createChainIdList)(n,t);return{accountId:s,addresses:(0,r.createAccountList)(a,i)}}function h(e,t,{getAccountByAddress:s,getAssetsState:n}){var r;const{assetsMetadata:o,accountsAssets:c}=n(),l=e.map(e=>(0,i.parseCaipAccountId)(e)).map(({chainId:e})=>e),d=t&&t.length>0?l.filter(e=>t.includes(e)):l,u=null===(r=s(e[0]))||void 0===r?void 0:r.id;(0,a.assert)(u,`Account not found for address: ${e[0]}.`);const h=c[u];if(0===h.length)return null;const m=h.find(e=>{const{chainId:t,assetNamespace:s}=(0,i.parseCaipAssetType)(e);return d.includes(t)&&"slip44"===s});return m?{asset:m,name:o[m].name,symbol:o[m].symbol}:{asset:h[0],name:o[h[0]].name,symbol:o[h[0]].symbol}}function m(e,{getSelectedAccount:t,listAccounts:s,snapOwnsAccount:a}){const{chainIds:n,hideExternalAccounts:r}=e.props,i=t();if((!n||0===n.length||i.scopes.some(e=>d(e,n)))&&(!r||r&&a(i)))return u(i,n);const o=s(n),c=r?o.filter(e=>a(e)):o;return 0===c.length?null:u(c[0],n)}function p(e,t){if(!e)return null;const{assetsMetadata:s}=t(),a=s[e];return a?{asset:e,name:a.name??a.symbol??"Unknown",symbol:a.symbol??"Unknown"}:null}function f(e,{getAccountByAddress:t,snapOwnsAccount:s}){const{value:a,hideExternalAccounts:n}=e.props;if(!a)return null;const r=t(a);return r?n&&!s(r)?null:u(r,e.props.chainIds):null}function g(e,t,s,a){const n=a?e[a]:e,o=null==n?void 0:n[t.props.name];return"FileInput"===t.type?o??null:function(e,t){switch(e.type){case"Checkbox":return e.props.checked;case"AssetSelector":return p(e.props.value,t.getAssetsState);case"AddressInput":{if(!e.props.value)return null;const{namespace:t,reference:s}=(0,i.parseCaipChainId)(e.props.chainId);return(0,i.toCaipAccountId)(t,s,e.props.value)}case"AccountSelector":return f(e,t);default:return e.props.value}}(t,s)??o??function(e,t){switch(e.type){case"Dropdown":var s;return null===(s=(0,r.getJsxChildren)(e)[0])||void 0===s?void 0:s.props.value;case"RadioGroup":var a;return null===(a=(0,r.getJsxChildren)(e)[0])||void 0===a?void 0:a.props.value;case"Selector":var n;return null===(n=(0,r.getJsxChildren)(e)[0])||void 0===n?void 0:n.props.value;case"AccountSelector":return m(e,t);case"Checkbox":return!1;case"AssetSelector":return h(e.props.addresses,e.props.chainIds,t);default:return null}}(t,s)??null}s.isStatefulComponent=c,s.getJsxInterface=function(e){return(0,n.isJSXElementUnsafe)(e)?e:(0,r.getJsxElementFromComponent)(e)},s.assertNameIsUnique=l,s.isMatchingChainId=d,s.formatAccountSelectorStateValue=u,s.getDefaultAsset=h,s.getAccountSelectorDefaultStateValue=m,s.getAssetSelectorStateValue=p,s.getAccountSelectorStateValue=f,s.constructState=function(e,t,s){const a={},n=[];return(0,r.walkJsx)(t,(t,r)=>{let i=n[n.length-1];if(i&&r<=i.depth&&(n.pop(),i=n[n.length-1]),"Form"===t.type)return l(a,t.props.name),n.push({name:t.props.name,depth:r}),void(a[t.props.name]={});if(i&&c(t)){const n=a[i.name];return l(n,t.props.name),void(n[t.props.name]=g(e,t,s,i.name))}c(t)&&(l(a,t.props.name),a[t.props.name]=g(e,t,s))}),a};const b=5e6;s.validateInterfaceContext=function(e){if(!e)return;const t=(0,r.getJsonSizeUnsafe)(e);(0,a.assert)(t<=b,"A Snap interface context may not be larger than 5 MB.")}}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/interface/utils.cjs"}],[2288,{"@metamask/snaps-utils":2516,"@metamask/utils":2632},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.log=void 0;const a=e("@metamask/snaps-utils"),n=e("@metamask/utils");s.log=(0,n.createModuleLogger)(a.snapsLogger,"snaps-controllers")}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/logging.cjs"}],[2289,{"../snaps/index.cjs":2302,"@metamask/rpc-errors":2224,"@metamask/snaps-rpc-methods":2346,"@metamask/snaps-utils":2516,"@metamask/utils":2632,nanoid:4546},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e,t,s){n(e,t),t.set(e,s)}function n(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function r(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function i(e,t){return e.get(c(e,t))}function o(e,t,s){return e.set(c(e,t),s),s}function c(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainRouter=void 0;const l=e("@metamask/rpc-errors"),d=e("@metamask/snaps-rpc-methods"),u=e("@metamask/snaps-utils"),h=e("@metamask/utils"),m=e("nanoid"),p=e("../snaps/index.cjs"),f="MultichainRouter";var g=new WeakMap,b=new WeakMap,y=new WeakSet;async function w(e,t,s){try{const a=await i(b,this).call(this,async({keyring:a})=>a.resolveAccountAddress(e,t,s)),n=null==a?void 0:a.address;return n?(0,h.parseCaipAccountId)(n).address:null}catch{throw l.rpcErrors.internal()}}async function v(e,t,s){const a=i(g,this).call("AccountsController:listMultichainAccounts",t).filter(e=>{var t;return Boolean(null===(t=e.metadata.snap)||void 0===t?void 0:t.enabled)&&e.methods.includes(s.method)});if(0===a.length)return null;const n=a[0].metadata.snap.id,r=await c(y,this,w).call(this,n,t,s),o=e.map(e=>(0,h.parseCaipAccountId)(e).address),d=a.find(e=>o.includes(e.address)&&(!r||e.address===r));if(!d)throw l.rpcErrors.invalidParams({message:"No available account found for request."});return d.id}function k(e){const t=i(g,this).call("SnapController:getAll");return(0,p.getRunnableSnaps)(t).reduce((t,s)=>{const a=i(g,this).call("PermissionController:getPermissions",s.id);if(a&&(0,h.hasProperty)(a,d.SnapEndowments.Protocol)){const n=a[d.SnapEndowments.Protocol],r=(0,d.getProtocolCaveatScopes)(n);r&&(0,h.hasProperty)(r,e)&&t.push({snapId:s.id,methods:r[e].methods})}return t},[])}function T(e){return i(g,this).call("AccountsController:listMultichainAccounts",e).filter(e=>{var t;return null===(t=e.metadata.snap)||void 0===t?void 0:t.enabled})}s.MultichainRouter=class{constructor({messenger:e,withSnapKeyring:t}){var s,c;n(s=this,c=y),c.add(s),r(this,"name",f),r(this,"state",null),a(this,g,void 0),a(this,b,void 0),o(g,this,e),o(b,this,t),i(g,this).registerActionHandler(`${f}:handleRequest`,async(...e)=>this.handleRequest(...e)),i(g,this).registerActionHandler(`${f}:getSupportedMethods`,(...e)=>this.getSupportedMethods(...e)),i(g,this).registerActionHandler(`${f}:getSupportedAccounts`,(...e)=>this.getSupportedAccounts(...e)),i(g,this).registerActionHandler(`${f}:isSupportedScope`,(...e)=>this.isSupportedScope(...e))}async handleRequest({connectedAddresses:e,origin:t,scope:s,request:a}){(0,h.assert)(!s.startsWith(h.KnownCaipNamespace.Eip155)&&!s.startsWith("wallet:eip155"));const n={jsonrpc:"2.0",id:a.id??(0,m.nanoid)(),method:a.method,...a.params?{params:a.params}:{}},{method:r,params:o}=n,d=await c(y,this,v).call(this,e,s,n);if(d)return i(b,this).call(this,async({keyring:e})=>e.submitRequest({origin:t,account:d,scope:s,method:r,params:o}));const p=c(y,this,k).call(this,s).find(e=>e.methods.includes(r));if(p)return i(g,this).call("SnapController:handleRequest",{snapId:p.snapId,origin:t,request:{method:"",params:{request:n,scope:s}},handler:u.HandlerType.OnProtocolRequest});throw l.rpcErrors.methodNotFound()}getSupportedMethods(e){const t=c(y,this,T).call(this,e).flatMap(e=>e.methods),s=c(y,this,k).call(this,e).flatMap(e=>e.methods);return Array.from(new Set([...t,...s]))}getSupportedAccounts(e){return c(y,this,T).call(this,e).map(t=>`${e}:${t.address}`)}isSupportedScope(e){return i(g,this).call("AccountsController:listMultichainAccounts",e).some(e=>{var t;return null===(t=e.metadata.snap)||void 0===t?void 0:t.enabled})||c(y,this,k).call(this,e).length>0}}}}},{package:"@metamask/snaps-controllers",file:"node_modules/@metamask/snaps-controllers/dist/multichain/MultichainRouter.cjs"}]],[],{});